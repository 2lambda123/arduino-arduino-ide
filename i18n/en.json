{
    "arduino": {
        "common": {
            "offlineIndicator": "You appear to be offline. Without an Internet connection, the Arduino CLI might not be able to download the required resources and could cause malfunction. Please connect to the Internet and restart the application.",
            "noBoardSelected": "No board selected",
            "selectedOn": "on {0}",
            "notConnected": "[not connected]",
            "serialMonitor": "Serial Monitor",
            "oldFormat": "The '{0}' still uses the old `.pde` format. Do you want to switch to the new `.ino` extension?",
            "later": "Later",
            "selectBoard": "Select Board",
            "unknown": "Unknown",
            "processing": "Processing",
            "saveChangesToSketch": "Do you want to save changes to this sketch before closing?",
            "loseChanges": "If you don't save, your changes will be lost."
        },
        "menu": {
            "sketch": "Sketch",
            "tools": "Tools"
        },
        "debug": {
            "optimizeForDebugging": "Optimize for Debugging",
            "debugWithMessage": "Debug - {0}",
            "noPlatformInstalledFor": "Platform is not installed for '{0}'",
            "debuggingNotSupported": "Debugging is not supported by '{0}'"
        },
        "preferences": {
            "language.log": "True if the Arduino Language Server should generate log files into the sketch folder. Otherwise, false. It's false by default.",
            "compile.verbose": "True for verbose compile output. False by default",
            "compile.warnings": "Tells gcc which warning level to use. It's 'None' by default",
            "upload.verbose": "True for verbose upload output. False by default.",
            "window.autoScale": "True if the user interface automatically scales with the font size.",
            "window.zoomLevel": "Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
            "ide.updateChannel": "Release channel to get updated from. 'stable' is the stable release, 'nightly' is the latest development build.",
            "board.certificates": "List of certificates that can be uploaded to boards",
            "sketchbook.showAllFiles": "True to show all sketch files inside the sketch. It is false by default.",
            "cloud.enabled": "True if the sketch sync functions are enabled. Defaults to true.",
            "cloud.pull.warn": "True if users should be warned before pulling a cloud sketch. Defaults to true.",
            "cloud.push.warn": "True if users should be warned before pushing a cloud sketch. Defaults to true.",
            "cloud.pushpublic.warn": "True if users should be warned before pushing a public sketch to the cloud. Defaults to true.",
            "cloud.sketchSyncEnpoint": "The endpoint used to push and pull sketches from a backend. By default it points to Arduino Cloud API.",
            "auth.clientID": "The OAuth2 client ID.",
            "auth.domain": "The OAuth2 domain.",
            "auth.audience": "The OAuth2 audience.",
            "auth.registerUri": "The URI used to register a new user.",
            "network": "Network",
            "sketchbook.location": "Sketchbook location",
            "browse": "Browse",
            "files.inside.sketches": "Show files inside Sketches",
            "editorFontSize": "Editor font size",
            "interfaceScale": "Interface scale",
            "showVerbose": "Show verbose output during",
            "compilerWarnings": "Compiler warnings",
            "automatic": "Automatic",
            "compile": "compile",
            "upload": "upload",
            "verifyAfterUpload": "Verify code after upload",
            "editorQuickSuggestions": "Editor Quick Suggestions",
            "additionalManagerURLs": "Additional Boards Manager URLs",
            "noProxy": "No proxy",
            "manualProxy": "Manual proxy configuration",
            "newSketchbookLocation": "Select new sketchbook location",
            "choose": "Choose",
            "enterAdditionalURLs": "Enter additional URLs, one for each row",
            "unofficialBoardSupport": "Click for a list of unofficial board support URLs",
            "invalid.sketchbook.location": "Invalid sketchbook location: {0}",
            "invalid.editorFontSize": "Invalid editor font size. It must be a positive integer.",
            "invalid.theme": "Invalid theme."
        },
        "cloud": {
            "signIn": "SIGN IN",
            "signOut": "Sign Out",
            "chooseSketchVisibility": "Choose visibility of your Sketch:",
            "privateVisibility": "Private. Only you can view the Sketch.",
            "publicVisibility": "Public. Anyone with the link can view the Sketch.",
            "link": "Link:",
            "embed": "Embed:",
            "cloudSketchbook": "Cloud Sketchbook",
            "shareSketch": "Share Sketch",
            "showHideRemoveSketchbook": "Show/Hide Remote Sketchbook",
            "pullSketch": "Pull Sketch",
            "openInCloudEditor": "Open in Cloud Editor",
            "options": "Options...",
            "share": "Share...",
            "remote": "Remote",
            "emptySketchbook": "Your Sketchbook is empty",
            "visitArduinoCloud": "Visit Arduino Cloud to create Cloud Sketches.",
            "signInToCloud": "Sign in to Arduino Cloud",
            "syncEditSketches": "Sync and edit your Arduino Cloud Sketches",
            "learnMore": "Learn more",
            "continue": "Continue",
            "pushSketch": "Push Sketch",
            "pushSketchMsg": "This is a Public Sketch. Before pushing, make sure any sensitive information is defined in arduino_secrets.h files. You can make a Sketch private from the Share panel.",
            "pull": "Pull",
            "pullSketchMsg": "Pulling this Sketch from the Cloud will overwrite its local version. Are you sure you want to continue?",
            "donePulling": "Done pulling ‘{0}’.",
            "notYetPulled": "Cannot push to Cloud. It is not yet pulled.",
            "push": "Push",
            "pullFirst": "You have to pull first to be able to push to the Cloud.",
            "donePushing": "Done pushing ‘{0}’.",
            "connected": "Connected",
            "offline": "Offline",
            "profilePicture": "Profile picture"
        },
        "board": {
            "installManually": "Install Manually",
            "installNow": "The \"{0} {1}\" core has to be installed for the currently selected \"{2}\" board. Do you want to install it now?",
            "configDialogTitle": "Select Other Board & Port",
            "configDialog1": "Select both a Board and a Port if you want to upload a sketch.",
            "configDialog2": "If you only select a Board you will be able to compile, but not to upload your sketch.",
            "pleasePickBoard": "Please pick a board connected to the port you have selected.",
            "showAllAvailablePorts": "Shows all available ports when enabled",
            "programmer": "Programmer",
            "succesfullyInstalledPlatform": "Successfully installed platform {0}:{1}",
            "succesfullyUninstalledPlatform": "Successfully uninstalled platform {0}:{1}",
            "couldNotFindPreviouslySelected": "Could not find previously selected board '{0}' in installed platform '{1}'. Please manually reselect the board you want to use. Do you want to reselect it now?",
            "reselectLater": "Reselect later",
            "noneSelected": "No boards selected.",
            "noPortsSelected": "No ports selected for board: '{0}'.",
            "noFQBN": "The FQBN is not available for the selected board \"{0}\". Do you have the corresponding core installed?",
            "openBoardsConfig": "Select other board and port…",
            "boardListItem": "{0} at {1}",
            "selectBoardForInfo": "Please select a board to obtain board info.",
            "platformMissing": "The platform for the selected '{0}' board is not installed.",
            "selectPortForInfo": "Please select a port to obtain board info.",
            "boardInfo": "Board Info",
            "board": "Board{0}",
            "port": "Port{0}",
            "getBoardInfo": "Get Board Info",
            "inSketchbook": " (in Sketchbook)"
        },
        "boardsManager": "Boards Manager",
        "about": {
            "label": "About {0}",
            "detail": "Version: {0}\nDate: {1}{2}\nCLI Version: {3}{4} [{5}]\n\n{6}"
        },
        "contributions": {
            "addFile": "Add File",
            "replaceTitle": "Replace",
            "fileAdded": "One file added to the sketch."
        },
        "replaceMsg": "Replace the existing version of {0}?",
        "library": {
            "addZip": "Add .ZIP Library...",
            "zipLibrary": "Library",
            "overwriteExistingLibrary": "Do you want to overwrite the existing library?",
            "successfullyInstalledZipLibrary": "Successfully installed library from {0} archive",
            "namedLibraryAlreadyExists": "A library folder named {0} already exists. Do you want to overwrite it?",
            "libraryAlreadyExists": "A library already exists. Do you want to overwrite it?",
            "include": "Include Library",
            "manageLibraries": "Manage Libraries...",
            "arduinoLibraries": "Arduino libraries",
            "contributedLibraries": "Contributed libraries",
            "title": "Library Manager",
            "needsOneDependency": "The library <b>{0}:{1}</b> needs another dependency currently not installed:",
            "needsMultipleDependencies": "The library <b>{0}:{1}</b> needs some other dependencies currently not installed:",
            "installOneMissingDependency": "Would you like to install the missing dependency?",
            "installMissingDependencies": "Would you like to install all the missing dependencies?",
            "dependenciesForLibrary": "Dependencies for library {0}:{1}",
            "installAll": "Install all",
            "installOnly": "Install {0} only",
            "installedSuccessfully": "Successfully installed library {0}:{1}",
            "uninstalledSuccessfully": "Successfully uninstalled library {0}:{1}"
        },
        "selectZip": "Select a zip file containing the library you'd like to add",
        "sketch": {
            "archiveSketch": "Archive Sketch",
            "saveSketchAs": "Save sketch folder as...",
            "createdArchive": "Created archive '{0}'.",
            "new": "New",
            "openRecent": "Open Recent",
            "showFolder": "Show Sketch Folder",
            "sketch": "Sketch",
            "moving": "Moving",
            "movingMsg": "The file \"{0}\" needs to be inside a sketch folder named \"{1}\".\nCreate this folder, move the file, and continue?",
            "cantOpen": "A folder named \"{0}\" already exists. Can't open sketch.",
            "saveFolderAs": "Save sketch folder as...",
            "sketchbook": "Sketchbook",
            "upload": "Upload",
            "uploadUsingProgrammer": "Upload Using Programmer",
            "userFieldsNotFoundError": "Can't find user fields for connected board",
            "doneUploading": "Done uploading.",
            "configureAndUpload": "Configure And Upload",
            "verifyOrCompile": "Verify/Compile",
            "exportBinary": "Export Compiled Binary",
            "verify": "Verify",
            "doneCompiling": "Done compiling.",
            "couldNotConnectToSerial": "Could not reconnect to serial port. {0}",
            "openSketchInNewWindow": "Open Sketch in New Window",
            "openFolder": "Open Folder",
            "titleLocalSketchbook": "Local Sketchbook",
            "titleSketchbook": "Sketchbook",
            "close": "Are you sure you want to close the sketch?"
        },
        "bootloader": {
            "burnBootloader": "Burn Bootloader",
            "doneBurningBootloader": "Done burning bootloader."
        },
        "editor": {
            "copyForForum": "Copy for Forum (Markdown)",
            "commentUncomment": "Comment/Uncomment",
            "increaseIndent": "Increase Indent",
            "decreaseIndent": "Decrease Indent",
            "increaseFontSize": "Increase Font Size",
            "decreaseFontSize": "Decrease Font Size",
            "autoFormat": "Auto Format"
        },
        "examples": {
            "menu": "Examples",
            "couldNotInitializeExamples": "Could not initialize built-in examples.",
            "builtInExamples": "Built-in examples",
            "customLibrary": "Examples from Custom Libraries",
            "for": "Examples for {0}",
            "forAny": "Examples for any board"
        },
        "help": {
            "search": "Search on Arduino.cc",
            "keyword": "Type a keyword",
            "gettingStarted": "Getting Started",
            "environment": "Environment",
            "troubleshooting": "Troubleshooting",
            "reference": "Reference",
            "findInReference": "Find in Reference",
            "faq": "Frequently Asked Questions",
            "visit": "Visit Arduino.cc"
        },
        "certificate": {
            "uploadRootCertificates": "Upload SSL Root Certificates",
            "openContext": "Open context",
            "remove": "Remove",
            "upload": "Upload",
            "addURL": "Add URL to fetch SSL certificate",
            "enterURL": "Enter URL",
            "selectCertificateToUpload": "1. Select certificate to upload",
            "addNew": "Add New",
            "selectDestinationBoardToUpload": "2. Select destination board and upload certificate",
            "uploadingCertificates": "Uploading certificates.",
            "certificatesUploaded": "Certificates uploaded.",
            "uploadFailed": "Upload failed. Please try again.",
            "selectBoard": "Select a board...",
            "boardAtPort": "{0} at {1}",
            "noSupportedBoardConnected": "No supported board connected"
        },
        "firmware": {
            "updater": "WiFi101 / WiFiNINA Firmware Updater",
            "selectBoard": "Select Board",
            "checkUpdates": "Check Updates",
            "selectVersion": "Select firmware version",
            "install": "Install",
            "overwriteSketch": "Installation will overwrite the Sketch on the board.",
            "installingFirmware": "Installing firmware.",
            "successfullyInstalled": "Firmware successfully installed.",
            "failedInstall": "Installation failed. Please try again."
        },
        "dialog": {
            "dontAskAgain": "Don't ask again"
        },
        "ide-updater": {
            "notNowButton": "Not now",
            "versionDownloaded": "Arduino IDE {0} has been downloaded.",
            "closeToInstallNotice": "Close the software and install the update on your machine.",
            "closeAndInstallButton": "Close and Install",
            "downloadingNotice": "Downloading the latest version of the Arduino IDE.",
            "updateAvailable": "Update Available",
            "newVersionAvailable": "A new version of Arduino IDE ({0}) is available for download.",
            "skipVersionButton": "Skip Version",
            "downloadButton": "Download"
        },
        "updater": {
            "ideUpdaterDialog": "Software Update"
        },
        "userFields": {
            "cancel": "Cancel",
            "upload": "Upload"
        },
        "serial": {
            "toggleTimestamp": "Toggle Timestamp",
            "autoscroll": "Autoscroll",
            "timestamp": "Timestamp",
            "noLineEndings": "No Line Ending",
            "newLine": "New Line",
            "carriageReturn": "Carriage Return",
            "newLineCarriageReturn": "Both NL & CR",
            "notConnected": "Not connected. Select a board and a port to connect automatically.",
            "message": "Message ({0} + Enter to send message to '{1}' on '{2}')",
            "connectionBusy": "Connection failed. Serial port is busy: {0}",
            "disconnected": "Disconnected {0} from {1}.",
            "unexpectedError": "Unexpected error. Reconnecting {0} on port {1}.",
            "failedReconnect": "Failed to reconnect {0} to serial port after 10 consecutive attempts. The {1} serial port is busy.",
            "reconnect": "Reconnecting {0} to {1} in {2} seconds..."
        },
        "component": {
            "uninstall": "Uninstall",
            "uninstallMsg": "Do you want to uninstall {0}?",
            "by": "by",
            "version": "Version {0}",
            "moreInfo": "More info",
            "install": "INSTALL",
            "filterSearch": "Filter your search..."
        },
        "electron": {
            "couldNotSave": "Could not save the sketch. Please copy your unsaved work into your favorite text editor, and restart the IDE.",
            "unsavedChanges": "Any unsaved changes will not be saved."
        },
        "compile": {
            "error": "Compilation error: {0}"
        },
        "upload": {
            "error": "{0} error: {1}"
        },
        "burnBootloader": {
            "error": "Error while burning the bootloader: {0}"
        }
    },
    "theia": {
        "core": {
            "couldNotSave": "Could not save the sketch. Please copy your unsaved work into your favorite text editor, and restart the IDE.",
            "offline": "Offline",
            "daemonOffline": "CLI Daemon Offline",
            "cannotConnectBackend": "Cannot connect to the backend.",
            "cannotConnectDaemon": "Cannot connect to the CLI daemon.",
            "highlightModifiedTabs": "Controls whether a top border is drawn on modified (dirty) editor tabs or not.",
            "silentNotifications": "Controls whether to suppress notification popups.",
            "quitTitle": "Are you sure you want to quit?",
            "quitMessage": "Any unsaved changes will not be saved.",
            "keyboard": {
                "current": "(current: {0})",
                "tryDetect": "Try to detect the keyboard layout from browser information and pressed keys.",
                "mac": "Mac Keyboards",
                "pc": "PC Keyboards",
                "chooseLayout": "Choose a keyboard layout",
                "currentLayout": " - current layout"
            }
        },
        "debug": {
            "start": "Start...",
            "typeNotSupported": "The debug session type \"{0}\" is not supported.",
            "startError": "There was an error starting the debug session, check the logs for more details.",
            "reveal": "Reveal",
            "openLeft": "Open Left",
            "openRight": "Open Right",
            "openBottom": "Open Bottom",
            "toggleTracing": "Enable/disable tracing communications with debug adapters",
            "debugViewLocation": "Controls the location of the debug view.",
            "threads": "Threads"
        },
        "editor": {
            "unsavedTitle": "Unsaved – {0}",
            "reopenDirty": "The file is dirty. Please save it first before reopening it with another encoding.",
            "splitHorizontal": "Split Editor Horizontal",
            "splitVertical": "Split Editor Vertical",
            "ariaLabel": "The aria label for the editor's textarea when focused.",
            "automaticLayout": "Enable that the editor will install an interval to check if its container dom node size has changed. Enabling this might have a severe performance impact.",
            "contextmenu": "Controls whether to enable the custom contextmenu.",
            "disableLayerHinting": "Disable the use of `transform: translate3d(0px, 0px, 0px)` for the editor margin and lines layers. The usage of `transform: translate3d(0px, 0px, 0px)` acts as a hint for browsers to create an extra layer.",
            "disableMonospaceOptimizations": "Controls whether to enable optimizations for monospace fonts.",
            "extraEditorClassName": "Additional class name to be added to the editor.",
            "fixedOverflowWidgets": "Controls whether to display overflow widgets as `fixed`.",
            "highlightActiveIndentGuide": "Controls whether the editor should highlight the active indent guide.",
            "lineNumbersMinChars": "Controls the line height. Use 0 to compute the line height from the font size.",
            "mouseStyle": "Controls the mouse pointer style.",
            "overviewRulerLanes": "The number of vertical lanes the overview ruler should render.",
            "readOnly": "Controls whether the editor is readonly.",
            "renderValidationDecorations": "Controls whether the editor renders validation decorations.",
            "revealHorizontalRightPadding": "When revealing the cursor, a virtual padding (px) is added to the cursor, turning it into a rectangle. This virtual padding ensures that the cursor gets revealed before hitting the edge of the viewport.",
            "selectOnLineNumbers": "Controls whether to select the corresponding line when clicking on the line number",
            "stopRenderingLineAfter": "Performance guard: Stop rendering a line after x characters.",
            "suggest.insertHighlight": "Controls whether unexpected text modifications while accepting completions should be highlighted, e.g `insertMode` is `replace` but the completion only supports `insert`.",
            "tabIndex": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
            "wordWrapBreakAfterCharacters": "Configure word wrapping characters. A break will be introduced after these characters.",
            "wordWrapBreakBeforeCharacters": "Configure word wrapping characters. A break will be introduced before these characters.",
            "wordWrapOverride1": "Override the `wordWrap` setting.",
            "wordWrapOverride2": "Override the `wordWrapOverride1` setting.",
            "autoSaveSetting": "Controls auto save of dirty files.",
            "autoSaveDelay": "Configure the auto save delay in milliseconds.",
            "formatOnSaveTimeout": "Timeout in milliseconds after which the formatting that is run on file save is cancelled.",
            "persistClosedEditors": "Controls whether to persist closed editor history for the workspace across window reloads."
        },
        "messages": {
            "expand": "Expand",
            "collapse": "Collapse",
            "notificationTimeout": "Informative notifications will be hidden after this timeout."
        },
        "workspace": {
            "fileNewName": "Name for new file",
            "invalidFilename": "Invalid filename.",
            "invalidExtension": ".{0} is not a valid extension",
            "newFileName": "New name for file",
            "deleteCurrentSketch": "Do you want to delete the current sketch?",
            "sketchDirectoryError": "There was an error creating the sketch directory. See the log for more details. The application will probably not work as expected.",
            "openRecentPlaceholder": "Type the name of the workspace you want to open",
            "noErasure": "Note: Nothing will be erased from disk",
            "workspaceFolderAddedTitle": "Folder added to Workspace",
            "workspaceFolderAdded": "A workspace with multiple roots was created. Do you want to save your workspace configuration as a file?",
            "confirmDeletePermanently.title": "Error deleting file",
            "confirmDeletePermanently.description": "Failed to delete \"{0}\" using the Trash. Do you want to permanently delete instead?",
            "confirmDeletePermanently.solution": "You can disable the use of Trash in the preferences.",
            "failSaveAs": "Cannot run \"{0}\" for the current widget.",
            "closeWorkspace": "Do you really want to close the workspace?",
            "failApply": "Could not apply changes to new file",
            "preserveWindow": "Enable opening workspaces in current window.",
            "supportMultiRootWorkspace": "Controls whether multi-root workspace support is enabled."
        },
        "scm": {
            "amendHeadCommit": "HEAD Commit",
            "amendLastCommit": "Amend last commit",
            "amend": "Amend",
            "unamendCommit": "Unamend commit",
            "unamend": "Unamend",
            "noRepositoryFound": "No repository found",
            "changeRepository": "Change Repository..."
        },
        "searchResultsView": {
            "searchFolderMatch.other.label": "Other files"
        },
        "search-in-workspace": {
            "includeIgnoredFiles": "Include Ignored Files",
            "noFolderSpecified": "You have not opened or specified a folder. Only open files are currently searched.",
            "resultSubset": "This is only a subset of all results. Use a more specific search term to narrow down the result list.",
            "searchOnEditorModification": "Search the active editor when modified."
        },
        "callhierarchy": {
            "open": "Open Call Hierarchy"
        },
        "filesystem": {
            "processedOutOf": "Processed {0} out of {1}",
            "uploadedOutOf": "Uploaded {0} out of {1}",
            "uploadFiles": "Uploading Files",
            "filesExclude": "Configure glob patterns for excluding files and folders. For example, the file Explorer decides which files and folders to show or hide based on this setting.",
            "maxFileSizeMB": "Controls the max file size in MB which is possible to open.",
            "maxConcurrentUploads": "Maximum number of concurrent files to upload when uploading multiple files. 0 means all files will be uploaded concurrently."
        },
        "git": {
            "toggleBlameAnnotations": "Toggle Blame Annotations",
            "compareWith": "Compare With...",
            "noPreviousCommit": "No previous commit to amend",
            "addSignedOff": "Add Signed-off-by",
            "gitDecorationsColors": "Use color decoration in the navigator.",
            "editorDecorationsEnabled": "Show git decorations in the editor.",
            "dirtyDiffLinesLimit": "Do not show dirty diff decorations, if editor's line count exceeds this limit.",
            "added": "Added",
            "unstaged": "Unstaged",
            "renamed": "Renamed",
            "copied": "Copied",
            "conflicted": "Conflicted"
        },
        "keybinding-schema-updater": {
            "deprecation": "Use `when` clause instead."
        },
        "markers": {
            "tabbarDecorationsEnabled": "Show problem decorators (diagnostic markers) in the tab bars."
        },
        "monaco": {
            "typeToSearchForSymbols": "Type to search for symbols",
            "noSymbolsMatching": "No symbols matching"
        },
        "navigator": {
            "reveal": "Reveal in Explorer",
            "toggleHiddenFiles": "Toggle Hidden Files"
        },
        "output": {
            "outputChannels": "Output Channels",
            "hiddenChannels": "Hidden Channels",
            "maxChannelHistory": "The maximum number of entries in an output channel."
        },
        "webview": {
            "goToReadme": "Go To README",
            "messageWarning": "            The {0} endpoint's host pattern has been changed to `{1}`; changing the pattern can lead to security vulnerabilities.             See `{2}` for more information."
        },
        "plugin-ext": {
            "webviewTrace": "Controls communication tracing with webviews.",
            "webviewWarnIfUnsecure": "Warns users that webviews are currently deployed unsecurely."
        },
        "terminal": {
            "terminateActive": "Do you want to terminate the active terminal session?",
            "terminateActiveMultiple": "Do you want to terminate the {0} active terminal sessions?",
            "terminate": "Terminate",
            "enableCopy": "Enable ctrl-c (cmd-c on macOS) to copy selected text",
            "enablePaste": "Enable ctrl-v (cmd-v on macOS) to paste from clipboard",
            "shellWindows": "The path of the shell that the terminal uses on Windows. (default: '{0}').",
            "shellOsx": "The path of the shell that the terminal uses on macOS (default: '{0}'}).",
            "shellLinux": "The path of the shell that the terminal uses on Linux (default: '{0}'}).",
            "shellArgsWindows": "The command line arguments to use when on the Windows terminal.",
            "shellArgsOsx": "The command line arguments to use when on the macOS terminal.",
            "shellArgsLinux": "The command line arguments to use when on the Linux terminal."
        },
        "workspace-service": {
            "untitled-cleanup": "There appear to be many untitled workspace files. Please check {0} and remove any unused files."
        }
    },
    "cloud": {
        "GoToCloud": "GO TO CLOUD"
    },
    "internalConsoleOptions": "Controls when the internal debug console should open.",
    "debugType": "Type of configuration.",
    "debugTypeNotRecognised": "The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.",
    "node2NotSupported": "\"node2\" is no longer supported, use \"node\" instead and set the \"protocol\" attribute to \"inspector\".",
    "debugName": "Name of configuration; appears in the launch configuration drop down menu.",
    "debugRequest": "Request type of configuration. Can be \"launch\" or \"attach\".",
    "debugServer": "For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode",
    "debugPrelaunchTask": "Task to run before debug session starts.",
    "debugPostDebugTask": "Task to run after debug session ends.",
    "debugWindowsConfiguration": "Windows specific launch configuration attributes.",
    "debugOSXConfiguration": "OS X specific launch configuration attributes.",
    "debugLinuxConfiguration": "Linux specific launch configuration attributes.",
    "deprecatedVariables": "'env.', 'config.' and 'command.' are deprecated, use 'env:', 'config:' and 'command:' instead.",
    "unusualLineTerminators.auto": "Unusual line terminators are automatically removed.",
    "unusualLineTerminators.off": "Unusual line terminators are ignored.",
    "unusualLineTerminators.prompt": "Unusual line terminators prompt to be removed.",
    "search-in-workspace.in-folder": "Find in Folder"
}
