[
  {
    "library": {
      "name": "Arduino_JSON",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[BETA] Process JSON in your Arduino sketches.",
      "website": "http://github.com/arduino-libraries/Arduino_JSON",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_JSON",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_JSON/src",
      "real_name": "Arduino_JSON",
      "version": "0.1.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_JSON/examples/JSONArray",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_JSON/examples/JSONKitchenSink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_JSON/examples/JSONObject"
      ],
      "provides_includes": [
        "Arduino_JSON.h"
      ]
    }
  },
  {
    "library": {
      "name": "FastLED",
      "author": "Daniel Garcia",
      "maintainer": "Daniel Garcia \u003cdgarcia@fastled.io\u003e",
      "sentence": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "paragraph": "Multi-platform library for controlling dozens of different types of LEDs along with optimized math, effect, and noise functions.",
      "website": "https://github.com/FastLED/FastLED",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/src",
      "real_name": "FastLED",
      "version": "3.5.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/AnalogOutput",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/ColorPalette",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/ColorTemperature",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Cylon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/DemoReel100",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Fire2012",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Fire2012WithPalette",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/FirstLight",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/ArrayOfLedArrays",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/MirroringSample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/MultiArrays",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/MultipleStripsInOneArray",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/OctoWS2811Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Multiple/ParallelOutputDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Noise",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/NoisePlayground",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/NoisePlusPalette",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Pacifica",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Pintest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Ports/PJRCSpectrumAnalyzer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/Pride2015",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/RGBCalibrate",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/RGBSetDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/SmartMatrix",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/TwinkleFox",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FastLED/examples/XYMatrix"
      ],
      "provides_includes": [
        "FastLED.h"
      ]
    }
  },
  {
    "library": {
      "name": "M5Stack-SD-Updater",
      "author": "tobozo",
      "maintainer": "tobozo@noreply.github.com",
      "sentence": "SD Card Loader for M5 Stack",
      "paragraph": "Package your apps on an SD card and load them from a menu app, button or MQTT message.",
      "website": "https://github.com/tobozo/M5Stack-SD-Updater/",
      "category": "Uncategorized",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/src",
      "real_name": "M5Stack-SD-Updater",
      "version": "1.2.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/AppStore",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/CopySketchToFS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/Headless",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/LGFX-SDLoader-Snippet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/M5Core2-SDLoader-Snippet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/M5Stack-SD-Menu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/M5Stack-SDLoader-Snippet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/M5StickC-SPIFFS-Loader-Snippet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Stack-SD-Updater/examples/M5Unified"
      ],
      "provides_includes": [
        "M5StackUpdater.h",
        "M5StackUpdaterConfig.h",
        "M5StackUpdaterUI.h",
        "M5StackUpdaterUITouch.h",
        "assets.h",
        "gitTagVersion.h"
      ]
    }
  },
  {
    "library": {
      "name": "Ticker",
      "author": "Stefan Staub",
      "maintainer": "Stefan Staub \u003cemail@domain.com\u003e",
      "sentence": "A library for creating Tickers which can call repeating functions. Replaces delay() with non-blocking functions.",
      "paragraph": "The Arduino Ticker Library allows you to create easily Ticker callbacks, which can call a function in a predetermined interval. You can change the number of repeats of the callbacks, if repeats is 0 the ticker runs in endless mode. Works like a \"thread\", where a secondary function will run when necessary. The library use no interupts of the hardware timers and works with the micros() / millis() function. You are not (really) limited in the number of Tickers.",
      "website": "https://github.com/sstaub/Ticker",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ticker",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Ticker",
      "real_name": "Ticker",
      "version": "4.4.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ticker/examples/FunctionalARM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ticker/examples/Ticker"
      ],
      "provides_includes": [
        "Ticker.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoECCX08",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Arduino Library for the Atmel/Microchip ECC508 and ECC608 crypto chips",
      "website": "https://github.com/arduino-libraries/ArduinoECCX08",
      "category": "Communication",
      "architectures": [
        "samd",
        "megaavr",
        "mbed",
        "mbed_nano",
        "mbed_portenta",
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08/src",
      "real_name": "ArduinoECCX08",
      "version": "1.3.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08/examples/ECCX08RandomNumber",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08/examples/Tools/ECCX08CSR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08/examples/Tools/ECCX08JWSPublicKey",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoECCX08/examples/Tools/ECCX08SelfSignedCert"
      ],
      "provides_includes": [
        "ArduinoECCX08.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_BQ24195",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Arduino library for the BQ24195 Power Management IC",
      "paragraph": "This library allows the control and configuration of the BQ24195 used on various Arduino boards.",
      "website": "https://github.com/arduino-libraries/Arduino_BQ24195",
      "category": "Device Control",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195/src",
      "real_name": "Arduino_BQ24195",
      "version": "0.9.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195/examples/BatteryCharger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195/examples/BatteryChargerInterrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195/examples/PMICBoostMode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BQ24195/examples/PMICFaultCheck"
      ],
      "provides_includes": [
        "Arduino_PMIC.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MKRGPS",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the location from the GPS on your MKR GPS shield.",
      "website": "http://github.com/arduino-libraries/Arduino_MKRGPS",
      "category": "Sensors",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRGPS",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRGPS/src",
      "real_name": "Arduino_MKRGPS",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRGPS/examples/GPSLocation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRGPS/examples/GPSLocationStandy"
      ],
      "provides_includes": [
        "Arduino_MKRGPS.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_BHY2Host",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Library for Host boards that interact with BHY2 chip on Nicla Sense ME",
      "paragraph": "Provides the APIs for a host board to interact with Nicla Sense ME board. The host board can be used to make a DFU or configure/read BHY sensors on the Nicla Sense ME via Eslov.",
      "website": "https://github.com/arduino-libraries/Arduino_BHY2Host",
      "category": "Communication",
      "architectures": [
        "samd",
        "mbed"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/src",
      "real_name": "Arduino_BHY2Host",
      "version": "1.0.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Accelerometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/BSEC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Nicla_IoT_Bridge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Orientation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Passthrough",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Portenta_BLE_Bridge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2Host/examples/Temperature"
      ],
      "provides_includes": [
        "Arduino_BHY2Host.h"
      ]
    }
  },
  {
    "library": {
      "name": "OneWireHub",
      "author": "Ingmar Splitt, orgua, MarkusLange, Shagrat2",
      "maintainer": "orgua",
      "sentence": "OneWire slave device emulator with support for up to 32 simultaneous 1wire devices.",
      "paragraph": "supported sensors: BAE910, DS1822, DS18B20, DS18S20, DS1990, DS2401, DS2405, DS2408, DS2411, DS2413, DS2423, DS2431, DS2432, DS2433, DS2438, DS2450, DS2501, DS2502, DS2503, DS2505, DS2506, DS2890",
      "website": "https://github.com/orgua/OneWireHub",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/src",
      "real_name": "OneWireHub",
      "version": "2.2.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/BAE910_device",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS18B20_asInterface",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS18B20_thermometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2401_serial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2405_switch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2408_switch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2413_switch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2423_RAM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2431_EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2433_EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2438_battMon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2450_ADC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2502_DELLCHG",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2502_EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2506_EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/DS2890_poti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/OneWireHubTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/CRC-Comparison",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/attiny85-4slaves",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/calibrate_by_bus_timing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/irq-driven-playground",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/optimize_pinAccess",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWireHub/examples/debug/programsize_documentation"
      ],
      "provides_includes": [
        "BAE910.h",
        "DS18B20.h",
        "DS2401.h",
        "DS2405.h",
        "DS2408.h",
        "DS2413.h",
        "DS2423.h",
        "DS2431.h",
        "DS2433.h",
        "DS2438.h",
        "DS2450.h",
        "DS2502.h",
        "DS2506.h",
        "DS2890.h",
        "OneWireHub.h",
        "OneWireHub_config.h",
        "OneWireItem.h",
        "platform.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArdBitmap",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to compress and draw bitmaps on the Arduboy game system.",
      "paragraph": "It supports real-time resizing and mirroring. This library is implemented as a class template.",
      "website": "https://github.com/igvina/ArdBitmap",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/src",
      "real_name": "ArdBitmap",
      "version": "2.0.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/CompleteTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample1-Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample2-Mirror",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample3-Resize",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample4-Animation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample5-Basic-Arduboy2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdBitmap/examples/Sample6-Complex"
      ],
      "provides_includes": [
        "ArdBitmap.h"
      ]
    }
  },
  {
    "library": {
      "name": "MKRWAN",
      "author": "Arduino \u003csupport@arduino.cc\u003e",
      "maintainer": "Arduino \u003csupport@arduino.cc\u003e",
      "sentence": "Support library for MKR WAN 1300/1310",
      "paragraph": "Provides APIs to communicate with LoRa and LoRaWAN networks",
      "website": "http://github.com/arduino-libraries/MKRWAN",
      "category": "Communication",
      "architectures": [
        "samd",
        "mbed",
        "mbed_portenta"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/src",
      "real_name": "MKRWAN",
      "version": "1.1.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/examples/DumbModemLoraSender",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/examples/FWUpdaterBridge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/examples/FirstConfiguration",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/examples/LoraSendAndReceive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRWAN/examples/MKRWANFWUpdate_standalone"
      ],
      "provides_includes": [
        "MKRWAN.h"
      ]
    }
  },
  {
    "library": {
      "name": "USB_Host_Shield_Library_2.0",
      "author": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e, Alexei Glushchenko (Circuits@Home) \u003calex-gl@mail.ru\u003e",
      "maintainer": "Oleg Mazurov (Circuits@Home) \u003cmazurov@circuitsathome.com\u003e, Kristian Lauszus (TKJ Electronics) \u003ckristianl@tkjelectronics.com\u003e, Andrew Kroll \u003cxxxajk@gmail.com\u003e",
      "sentence": "Revision 2.0 of MAX3421E-based USB Host Shield Library.",
      "paragraph": "Supports HID devices, FTDI, ADK, ACM, PL2303, Bluetooth HID devices, SPP communication and mass storage devices. Furthermore it supports PS3, PS4, PS Buzz, Wii and Xbox controllers.",
      "website": "https://github.com/felis/USB_Host_Shield_2.0",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0",
      "real_name": "USB Host Shield Library 2.0",
      "version": "1.3.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/BTHID",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/PS3BT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/PS3Multi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/PS3SPP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/PS4BT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/SPP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/SPPMulti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/Wii",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/WiiBalanceBoard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/WiiIRCamera",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/WiiMulti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Bluetooth/WiiUProController",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/SRWS1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHIDBootKbd",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHIDBootKbdAndMouse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHIDBootMouse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHIDJoystick",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHIDMultimediaKbd",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/USBHID_desc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/le3dp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/HID/scale",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/PS3USB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/PS4USB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/PSBuzz",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USBH_MIDI/USBH_MIDI_dump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USBH_MIDI/USB_MIDI_converter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USBH_MIDI/USB_MIDI_converter_multi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USBH_MIDI/bidirectional_converter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USBH_MIDI/eVY1_sample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/USB_desc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Xbox/XBOXOLD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Xbox/XBOXONE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Xbox/XBOXRECV",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/Xbox/XBOXUSB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/acm/acm_terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/adk/ArduinoBlinkLED",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/adk/adk_barcode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/adk/demokit_20",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/adk/term_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/adk/term_time",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/board_qc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/cdc_XR21B1411/XR_terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/ftdi/USBFTDILoopback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/hub_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/max_LCD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/pl2303/pl2303_gprs_terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/pl2303/pl2303_gps",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/pl2303/pl2303_tinygps",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/pl2303/pl2303_xbee_terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USB_Host_Shield_Library_2.0/examples/testusbhostFAT"
      ],
      "provides_includes": [
        "BTD.h",
        "BTHID.h",
        "PS3BT.h",
        "PS3Enums.h",
        "PS3USB.h",
        "PS4BT.h",
        "PS4Parser.h",
        "PS4USB.h",
        "PSBuzz.h",
        "SPP.h",
        "Usb.h",
        "UsbCore.h",
        "Wii.h",
        "XBOXOLD.h",
        "XBOXONE.h",
        "XBOXRECV.h",
        "XBOXUSB.h",
        "address.h",
        "adk.h",
        "avrpins.h",
        "cdc_XR21B1411.h",
        "cdcacm.h",
        "cdcftdi.h",
        "cdcprolific.h",
        "confdescparser.h",
        "controllerEnums.h",
        "hexdump.h",
        "hidboot.h",
        "hidcomposite.h",
        "hidescriptorparser.h",
        "hiduniversal.h",
        "hidusagestr.h",
        "macros.h",
        "masstorage.h",
        "max3421e.h",
        "max_LCD.h",
        "message.h",
        "parsetools.h",
        "printhex.h",
        "settings.h",
        "sink_parser.h",
        "usb_ch9.h",
        "usbh_midi.h",
        "usbhid.h",
        "usbhost.h",
        "usbhub.h",
        "version_helper.h",
        "xboxEnums.h"
      ]
    }
  },
  {
    "library": {
      "name": "WiFiNINA",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) with the Arduino MKR WiFi 1010, Arduino MKR VIDOR 4000, Arduino UNO WiFi Rev.2 and Nano 33 IoT.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The board can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFiNINA",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/src",
      "real_name": "WiFiNINA",
      "version": "1.8.13",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/AP_SimpleWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ConnectNoEncryption",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ConnectWithWEP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ConnectWithWPA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ConnectWithWPA2Enterprise",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ScanNetworks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/ScanNetworksAdvanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/SimpleWebServerWiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/Tools/CheckFirmwareVersion",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/Tools/FirmwareUpdater",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/Tools/SerialNINAPassthrough",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiPing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiSSLClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiStorage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiUdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiUdpSendReceiveString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiWebClientRepeating",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiNINA/examples/WiFiWebServer"
      ],
      "provides_includes": [
        "WiFiNINA.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_Zero_PDM_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "PDM Microphone Input library for Arduino Zero / Adafruit Feather M0 (SAMD21 processor).",
      "paragraph": "PDM Microphone Input library for the Arduino Zero / Adafruit Feather M0 (SAMD21 processor).",
      "website": "https://github.com/adafruit/Adafruit_ZeroPDM",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_PDM_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_PDM_Library",
      "real_name": "Adafruit Zero PDM Library",
      "version": "1.2.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_PDM_Library/examples/pdm_analogout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_PDM_Library/examples/pdm_analogout_dma",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_PDM_Library/examples/spipdm_analogout"
      ],
      "provides_includes": [
        "Adafruit_ZeroPDM.h",
        "Adafruit_ZeroPDMSPI.h"
      ]
    }
  },
  {
    "library": {
      "name": "MQTT",
      "author": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "maintainer": "Joel Gaehwiler \u003cjoel.gaehwiler@gmail.com\u003e",
      "sentence": "MQTT library for Arduino",
      "paragraph": "This library bundles the lwmqtt client and adds a thin wrapper to get an Arduino like API.",
      "website": "https://github.com/256dpi/arduino-mqtt",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/src",
      "real_name": "MQTT",
      "version": "2.5.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/AdafruitHuzzahESP8266",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/AdafruitHuzzahESP8266Secure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoEthernetShield",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoMKRGSM1400",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoMKRGSM1400Secure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoWiFi101",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoWiFi101Secure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoWiFiShield",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoYun",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ArduinoYunSecure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ESP32DevelopmentBoard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MQTT/examples/ESP32DevelopmentBoardSecure"
      ],
      "provides_includes": [
        "MQTT.h",
        "MQTTClient.h"
      ]
    }
  },
  {
    "library": {
      "name": "Pos-Printer-Library",
      "author": "Anders Vestergaard",
      "maintainer": "Anders \u003candersv209@hotmail.com\u003e",
      "sentence": "Pos Printer Library",
      "paragraph": "Pos Printer Library",
      "website": "https://github.com/AndersV209/Pos-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Pos-Printer-Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Pos-Printer-Library",
      "real_name": "Pos Printer Library",
      "version": "1.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Pos-Printer-Library/examples/A_printertest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Pos-Printer-Library/examples/B_charsets",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Pos-Printer-Library/examples/C_barcodes"
      ],
      "provides_includes": [
        "Pos_Printer.h"
      ]
    }
  },
  {
    "library": {
      "name": "LovyanGFX",
      "author": "lovyan03",
      "maintainer": "lovyan03",
      "sentence": "TFT LCD Graphics driver with touch for ESP32, ESP8266, SAMD21, SAMD51",
      "paragraph": "Supports TFT LCD displays using drivers that operate with hardware SPI. ESP32, ESP8266, SAMD21, SAMD51, M5Stack, M5StackCore2, M5StickC, M5StickCPlus, ODROID-GO, TTGO T-Watch, TTGO T-Wristband, ESP-WROVER-KIT, WioTerminal, WiFiBoy, MakePython, HX8357, ILI9163, ILI9342, ILI9341, ILI9486, ILI9488, ST7735, ST7789, ST7796, SSD1351",
      "website": "https://github.com/lovyan03/LovyanGFX",
      "category": "Display",
      "architectures": [
        "esp32",
        "esp8266",
        "samd",
        "rp2040",
        "mbed_rp2040",
        "mbed_nano"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/src",
      "real_name": "LovyanGFX",
      "version": "0.4.15",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Advanced/EPD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Advanced/ESP32DeepSleepDisplay",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Game/BallMaze",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/1_simple_use",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/2_user_setting",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/3_fonts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/4_unicode_fonts/arduino_misaki",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/4_unicode_fonts/efont",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/4_unicode_fonts/u8g2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/HowToUse/5_images",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/ClockSample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/CollisionCircles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/FlashMemSprite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/MeterSample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/MovingCircles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/MovingIcons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/PartyParrot",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/RadgialGauge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/RotateDial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Sprite/RotatedZoomSample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Standard/Graph",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Standard/LongTextScroll",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Standard/SaveBMP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Standard/SavePNG",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Test/TFT_graphicstest_PDQ",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Test/build_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LovyanGFX/examples/Test/test_readpixel"
      ],
      "provides_includes": [
        "LovyanGFX.hpp"
      ]
    },
    "release": {
      "author": "lovyan03",
      "version": "0.4.17",
      "maintainer": "lovyan03",
      "sentence": "TFT LCD Graphics driver with touch for ESP32, ESP8266, SAMD21, SAMD51, RP2040",
      "paragraph": "Supports TFT LCD displays using drivers that operate with hardware SPI. ESP32, ESP8266, SAMD21, SAMD51, RP2040, M5Stack, M5StackCore2, M5StickC, M5StickCPlus, ODROID-GO, TTGO T-Watch, TTGO T-Wristband, ESP-WROVER-KIT, WioTerminal, WiFiBoy, MakePython, HX8357, ILI9163, ILI9342, ILI9341, ILI9486, ILI9488, ST7735, ST7789, ST7796, SSD1351",
      "website": "https://github.com/lovyan03/LovyanGFX",
      "category": "Display",
      "architectures": [
        "esp32",
        "esp8266",
        "samd",
        "rp2040",
        "mbed_rp2040",
        "mbed_nano"
      ],
      "types": [
        "Contributed"
      ]
    }
  },
  {
    "library": {
      "name": "SdFat",
      "author": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "maintainer": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "sentence": "Provides access to SD memory cards.",
      "paragraph": "The SdFat library supports FAT16, FAT32, and exFAT file systems on Standard SD, SDHC, and SDXC cards.",
      "website": "https://github.com/greiman/SdFat",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/src",
      "real_name": "SdFat",
      "version": "2.1.2",
      "license": "MIT",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/AvrAdcLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/BackwardCompatibility",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/BufferedPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/DirectoryFunctions",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/ExFatLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/MinimumSizeSdReader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/OpenNext",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/QuickStart",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/ReadCsvFile",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/RtcTimestampTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/SdErrorCodes",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/SdFormatter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/SdInfo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/SoftwareSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/TeensyDmaAdcLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/TeensyRtcTimestamp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/TeensySdioDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/TeensySdioLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/UnicodeFilenames",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/UserChipSelectFunction",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/UserSPIDriver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/bench",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/AnalogLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/BaseExtCaseTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/MiniSerial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/PrintBenchmarkSD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/SD_Size",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/SdFatSize",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/StreamParseInt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/append",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/average",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/benchSD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/bufstream",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/cin_cout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/eventlog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/fgetsRewrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/#attic/readlog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/AnalogBinLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/DirectoryFunctions",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/LongFileName",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/LowLatencyLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/LowLatencyLoggerADXL345",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/LowLatencyLoggerMPU6050",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/OpenNext",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/PrintBenchmark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/QuickStart",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/RawWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/ReadCsv",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/ReadCsvArray",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/ReadCsvStream",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/ReadWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/STM32Test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/SdFormatter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/SdInfo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/SoftwareSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/StdioBench",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/TeensySdioDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/Timestamp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/TwoCards",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/VolumeFreeSpace",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/bench",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/dataLogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/fgets",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/formatting",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/getline",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/rename",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/examplesV1/wipe",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SdFat/examples/rename"
      ],
      "provides_includes": [
        "BufferedPrint.h",
        "FreeStack.h",
        "MinimumSerial.h",
        "RingBuf.h",
        "SdFat.h",
        "SdFatConfig.h",
        "sdios.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_FT6206_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for FT6206-based Capacitive touch screen",
      "paragraph": "Arduino library for FT6206-based Capacitive touch screen",
      "website": "https://github.com/adafruit/Adafruit_FT6206_Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FT6206_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FT6206_Library",
      "real_name": "Adafruit FT6206 Library",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FT6206_Library/examples/CapTouchPaint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FT6206_Library/examples/CapTouch_onoffbutton"
      ],
      "provides_includes": [
        "Adafruit_FT6206.h"
      ]
    }
  },
  {
    "library": {
      "name": "DHT_sensor_library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors",
      "website": "https://github.com/adafruit/DHT-sensor-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DHT_sensor_library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DHT_sensor_library",
      "real_name": "DHT sensor library",
      "version": "1.4.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DHT_sensor_library/examples/DHT_Unified_Sensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DHT_sensor_library/examples/DHTtester"
      ],
      "provides_includes": [
        "DHT.h",
        "DHT_U.h"
      ]
    }
  },
  {
    "library": {
      "name": "EspWii",
      "author": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "maintainer": "Kevin Harrington \u003cmad.hephaestus@gmail.com\u003e",
      "sentence": "A library to send Wii extension controllers data over wifi.",
      "paragraph": "This Arduino library supports mapping Wii devices to the Wifi of an ESP32.",
      "website": "https://github.com/madhephaestus/EspWii",
      "category": "Communication",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/EspWii",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/EspWii/src",
      "real_name": "EspWii",
      "version": "0.4.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/EspWii/examples/ControllerServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/EspWii/examples/ExampleRobot",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/EspWii/examples/SkeletonExampleRobot"
      ],
      "provides_includes": [
        "EspWii.h"
      ]
    }
  },
  {
    "library": {
      "name": "ILI9341_t3",
      "author": "Limor Fried, Adafruit, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Optimized ILI9341 (320x240 Color TFT) Display",
      "website": "https://github.com/PaulStoffregen/ILI9341_t3",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3",
      "real_name": "ILI9341_t3",
      "version": "1.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/breakouttouchpaint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/onoffbutton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/onoffbutton_breakout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/spitftbitmap",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ILI9341_t3/examples/touchpaint"
      ],
      "provides_includes": [
        "ILI9341_t3.h"
      ]
    }
  },
  {
    "library": {
      "name": "Keyboard",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilities to act as a Keyboard.",
      "paragraph": "This library plugs on the HID library. It can be used with or without other HID-based libraries (Mouse, Gamepad etc)",
      "website": "https://www.arduino.cc/reference/en/language/functions/usb/keyboard/",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Keyboard",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Keyboard/src",
      "real_name": "Keyboard",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Keyboard/examples/Serial"
      ],
      "provides_includes": [
        "Keyboard.h",
        "KeyboardLayout.h"
      ]
    }
  },
  {
    "library": {
      "name": "SD",
      "author": "Arduino, SparkFun",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables reading and writing on SD cards.",
      "paragraph": "Once an SD memory card is connected to the SPI interface of the Arduino or Genuino board you can create files and read/write on them. You can also move through directories on the SD card.",
      "website": "http://www.arduino.cc/en/Reference/SD",
      "category": "Data Storage",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SD/src",
      "real_name": "SD",
      "version": "1.2.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/CardInfo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/Datalogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/DumpFile",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/Files",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/NonBlockingWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/ReadWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SD/examples/listfiles"
      ],
      "provides_includes": [
        "SD.h"
      ]
    }
  },
  {
    "library": {
      "name": "TinyWireM",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "paragraph": "I2C library for Trinket and Gemma, adapted from BroHogan's code on Arduino Playground",
      "website": "https://github.com/adafruit/TinyWireM",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyWireM",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/TinyWireM",
      "real_name": "TinyWireM",
      "version": "1.1.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyWireM/examples/Tiny85_Temp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyWireM/examples/Tiny85_Temp_LCD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyWireM/examples/Tiny85_Temp_LCD_RTC"
      ],
      "provides_includes": [
        "TinyWireM.h",
        "USI_TWI_Master.h"
      ]
    }
  },
  {
    "library": {
      "name": "WiFi101",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Network driver for ATMEL WINC1500 module (used on Arduino/Genuino Wifi Shield 101 and MKR1000 boards)",
      "paragraph": "This library implements a network driver for devices based on the ATMEL WINC1500 wifi module",
      "website": "http://www.arduino.cc/en/Reference/WiFi101",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/src",
      "real_name": "WiFi101",
      "version": "0.16.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/AP_SimpleWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/CheckWifi101FirmwareVersion",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/ConnectNoEncryption",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/ConnectWithWEP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/ConnectWithWPA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/FirmwareUpdater",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/MDNS_WiFiWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/Provisioning_WiFiWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/ScanNetworks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/ScanNetworksAdvanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/SimpleWebServerWiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiPing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiSSLClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiUdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiUdpSendReceiveString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiWebClientRepeating",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101/examples/WiFiWebServer"
      ],
      "provides_includes": [
        "WiFi101.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_SleepyDog_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "paragraph": "Arduino library to use the watchdog timer for system reset and low power sleep.",
      "website": "https://github.com/adafruit/Adafruit_SleepyDog",
      "category": "Other",
      "architectures": [
        "avr",
        "samd",
        "nrf52",
        "teensy",
        "esp32",
        "esp8266"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_SleepyDog_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_SleepyDog_Library",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_SleepyDog_Library/utility",
      "real_name": "Adafruit SleepyDog Library",
      "version": "1.6.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_SleepyDog_Library/examples/BasicUsage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_SleepyDog_Library/examples/Sleep"
      ],
      "provides_includes": [
        "Adafruit_SleepyDog.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArdOSC",
      "author": "recotana http://recotana.com",
      "maintainer": "Christopher Andrews \u003cchris@arduino.land\u003e",
      "sentence": "Open Sound Control(OSC) Library for Arduino.",
      "paragraph": "Updated for library manager",
      "website": "https://github.com/Chris--A/ArdOSC",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/src",
      "real_name": "ArdOSC",
      "version": "2.2.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/OSCArguments",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/SImpleRecieve",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/SImpleRecieveLEDToggle",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/loopback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/multicallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdOSC/examples/simplesend"
      ],
      "provides_includes": [
        "ArdOSC.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MKRIoTCarrier",
      "author": "Riccardo Rizzo, Jose García, Pablo Marquínez",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Controlling the IoT MKR Carrier",
      "paragraph": "Allows you to control all the components included in the Explore IoT Kit",
      "website": "https://github.com/arduino-libraries/Arduino_MKRIoTCarrier",
      "category": "Sensors",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/src",
      "real_name": "Arduino_MKRIoTCarrier",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Actuators/Buzzer_Melody",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Actuators/Relays_blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/All_Features",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Display/Compose_images",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Display/Graphics",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Display/Show_GIF",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Grove_Inputs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/LEDs-Examples/strandtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/SD_card",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/ENV-HTS221/ReadSensors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/ENV-HTS221/ReadSensorsImperial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/IMU-LSM6DS3/SimpleAccelerometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/IMU-LSM6DS3/SimpleGyroscope",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Light-APDS9960/FullExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Light-APDS9960/GestureSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Light-APDS9960/ProximitySensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Light-APDS9960/Read_Colors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Pressure-LPS22HB/ReadPressure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/Sensors/Pressure-LPS22HB/ReadPressureImperial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/Custom_Sensitivity",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/Relays_control_Qtouch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/TouchTypes",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/Touch_and_LEDs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/Touch_signals",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRIoTCarrier/examples/TouchPads/getTouch"
      ],
      "provides_includes": [
        "Arduino_MKRIoTCarrier.h",
        "Arduino_MKRIoTCarrier_Buzzer.h",
        "Arduino_MKRIoTCarrier_Qtouch.h",
        "Arduino_MKRIoTCarrier_Relay.h"
      ]
    }
  },
  {
    "library": {
      "name": "CapacitiveSensor",
      "author": "Paul Bagder, Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Create capacitive sensors that can detect touch or proximity.",
      "paragraph": "The capacitiveSensor library turns two or more Arduino pins into a capacitive sensor, which can sense the electrical capacitance of the human body. All the sensor setup requires is a medium to high value resistor and a piece of wire and a small (to large) piece of aluminum foil on the end. At its most sensitive, the sensor will start to sense a hand or body inches away from the sensor.",
      "website": "http://playground.arduino.cc/Main/CapacitiveSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensor",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensor",
      "real_name": "CapacitiveSensor",
      "version": "0.5.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensor/examples/CapacitiveSensorSketch"
      ],
      "provides_includes": [
        "CapacitiveSensor.h"
      ]
    }
  },
  {
    "library": {
      "name": "M5Core2",
      "author": "M5Stack",
      "maintainer": "M5Stack",
      "sentence": "Library for M5Stack Core2 development kit",
      "paragraph": "See more on http://M5Stack.com",
      "website": "https://github.com/m5stack/M5Core2.git",
      "category": "Device Control",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/src",
      "real_name": "M5Core2",
      "version": "0.1.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Display/Display_Unicode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Display/HZK16",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Display/TFT_Ellipse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/EzData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/HallSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/I2C_Tester",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/MQTT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/MultSerial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/MultiTask",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/QRCode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/Counter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/SPIFFS/SPIFFS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/SPIFFS/SPIFFS_Add",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/SPIFFS/SPIFFS_Delete",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Storage/SPIFFS_Add",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/Time",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/BasicHttpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/OTAUpload",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiAccessPoint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiMulti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiScan",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiSetting",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiSmartConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/WiFiTCP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Advanced/WIFI/mDNS_Find",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/button",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/display",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/helloworld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/mpu6886",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/record",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/rtc/rtc_date_time",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/rtc/rtc_wakeup",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/sleep",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/speak",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Basics/vibrate",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/KIT/SCALES_KIT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/AC-SOCKET",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/CAN/commu_can_receiver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/CAN/commu_can_transmitter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/RS485/commu_rs485_A",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/RS485/commu_rs485_B",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/factory_test/COMMU_Test_A",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMMU/factory_test/COMMU_Test_B",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMX_GPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMX_GSM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMX_LTE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMX_LTE-DATA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COMX_NB-IoT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/COM_CAT1_SIM7680",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/LORA868_SX1276/LoRa868Duplex",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/NB-IoT_M5311LV",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/PLUS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/PM2.5_PMSA003",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/SERVO",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/SERVO2_PCA9685",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/STEPMOTOR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Module/USB_MAX3421E/usb_mouse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Touch/TouchGoal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Touch/TouchView",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Touch/circles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Touch/events_buttons_gestures_rotation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/4-RELAY",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ACCEL_ADXL345",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ADC_ADS1100",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ANGLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/A_Meter_Unit/EasyLoader_A_Meter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/A_Meter_Unit/ammeter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/BPS_BMP280",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/BPS_QMP6988",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/BUTTON",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/CAN",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/CATM_GNSS_SIM7080G/CoAP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/CATM_GNSS_SIM7080G/GNSS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/CATM_GNSS_SIM7080G/MQTT_CLIENT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/COLOR_TCS3472",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/CardKB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/DAC_MCP4725",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/DUAL_BUTTON",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/EARTH",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ENVIII_SHT30_QMP6988",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ENVII_SHT30_BMP280",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ENV_DHT12_BMP280",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/EXT_IO_PCA9554PW",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/FADER",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/FAN",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/FINGER_FPC1020A",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/GPS_AT6558/FullExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/HALL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/HEART_MAX30100/MAX30100_RawData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/HEART_MAX30100/ScreenShow",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/IR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ISO485",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/JOYSTICK",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/LASER",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/LCD_ST7789V2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/LIGHT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/LoRaWAN470",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/LoRaWAN868",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/NCIR_MLX90614",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/OLED_SH1107",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/OP90.180_ITR9606",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/PDM_SPM1423",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/PIR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/PaHUB_TCA9548A",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/PbHUB/PbHUB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/RELAY",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/RFID_RC522",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/RGB_SK6812",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/RS485_SP485EEN",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/RTC_BM8563",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/THERMAL_MLX90640",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/TOF/TOF_VL53L0X",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/TRACE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/TVOC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ULTRA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/ULTRA_SONIC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/VIBRATOR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/VMeter_ADS1115",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/Unit/WEIGHT_HX711",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/core2_for_aws/FactoryTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5Core2/examples/games/floppybird"
      ],
      "provides_includes": [
        "M5Core2.h"
      ]
    }
  },
  {
    "library": {
      "name": "WiFiManager",
      "author": "tzapu",
      "maintainer": "tablatronix",
      "sentence": "WiFi Configuration manager with web configuration portal for Espressif ESPx boards, by tzapu",
      "paragraph": "Library for configuring ESP8266/ESP32 modules WiFi credentials and custom parameters at runtime with captive portal.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager",
      "real_name": "WiFiManager",
      "version": "2.0.10-beta",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Advanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/NonBlocking/AutoConnectNonBlocking",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/NonBlocking/AutoConnectNonBlockingwParams",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Old_examples/AutoConnectWithFeedback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Old_examples/AutoConnectWithReset",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Old_examples/AutoConnectWithStaticIP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Old_examples/AutoConnectWithTimeout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/OnDemand/OnDemandConfigPortal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Parameters/SPIFFS/AutoConnectWithFSParameters",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Parameters/SPIFFS/AutoConnectWithFSParametersAndCustomIP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/ParamsChildClass",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFiManager/examples/Super/OnDemandConfigPortal"
      ],
      "provides_includes": [
        "WiFiManager.h",
        "strings_en.h"
      ]
    },
    "release": {
      "author": "tzapu",
      "version": "2.0.11-beta",
      "maintainer": "tablatronix",
      "sentence": "WiFi Configuration manager with web configuration portal for Espressif ESPx boards, by tzapu",
      "paragraph": "Library for configuring ESP8266/ESP32 modules WiFi credentials and custom parameters at runtime with captive portal.",
      "website": "https://github.com/tzapu/WiFiManager.git",
      "category": "Communication",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "types": [
        "Contributed"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_GPS_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "An interrupt-based GPS library for no-parsing-required use",
      "paragraph": "An interrupt-based GPS library for no-parsing-required use",
      "website": "https://github.com/adafruit/Adafruit_GPS",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/src",
      "real_name": "Adafruit GPS Library",
      "version": "1.5.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_EchoTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_LOCUS_DumpBasic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_LOCUS_Erase",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_LOCUS_Start",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_LOCUS_Status",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_Parsing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_HardwareSerial_Timing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_I2C_EchoTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_I2C_OLEDdebug",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_I2C_Parsing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SPI_EchoTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_EchoTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_LOCUS_DumpBasic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_LOCUS_Erase",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_LOCUS_Start",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_LOCUS_Status",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/GPS_SoftwareSerial_Parsing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/NMEA_EXTENSIONS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/blank",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GPS_Library/examples/shield_sdlog"
      ],
      "provides_includes": [
        "Adafruit_GPS.h",
        "Adafruit_PMTK.h",
        "NMEA_data.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_STMPE610",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "paragraph": "Arduino library for STMPE610/811 resistive touch screen controllers",
      "website": "https://github.com/adafruit/Adafruit_STMPE610",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_STMPE610",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_STMPE610",
      "real_name": "Adafruit STMPE610",
      "version": "1.1.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_STMPE610/examples/TouchTest"
      ],
      "provides_includes": [
        "Adafruit_STMPE610.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoMqttClient",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "[BETA] Allows you to send and receive MQTT messages using Arduino.",
      "website": "https://github.com/arduino-libraries/ArduinoMqttClient",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/src",
      "real_name": "ArduinoMqttClient",
      "version": "0.1.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiAdvancedCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiEcho",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiEchoCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiSimpleReceive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiSimpleReceiveCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoMqttClient/examples/WiFiSimpleSender"
      ],
      "provides_includes": [
        "ArduinoMqttClient.h"
      ]
    }
  },
  {
    "library": {
      "name": "Blynk",
      "author": "Volodymyr Shymanskyy",
      "maintainer": "Volodymyr Shymanskyy \u003cvshymanskyi@gmail.com\u003e",
      "sentence": "Build a smartphone app for your project in minutes!",
      "paragraph": "It supports  WiFi, BLE, Bluetooth, Ethernet, GSM, USB, Serial. Works with many boards like ESP8266, ESP32, Arduino UNO, Nano, Due, Mega, Zero, MKR100, Yun, Raspberry Pi, Particle, Energia, ARM mbed, Intel Edison/Galileo/Joule, BBC micro:bit, DFRobot, RedBearLab, Microduino, LinkIt ONE ...",
      "website": "http://blynk.io",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/src",
      "real_name": "Blynk",
      "version": "1.0.1",
      "license": "MIT",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Blynk.Edgent/Edgent_ESP32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Blynk.Edgent/Edgent_ESP8266",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Blynk.Edgent/Edgent_MKR1000",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Blynk.Edgent/Edgent_MKR1010",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Blynk.Edgent/Edgent_Wio_Terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Adafruit_Bluefruit_LE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Adafruit_Feather_32u4_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Arduino_101_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/BBC_MicroBit",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/DFRobot_Bluno_BLE_Link",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/ESP32_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/ESP32_BT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/ESP32_NimBLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Energia_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/LightBlue_Bean",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Microduino_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/RFDuino_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/RedBearLab_BLE_Mini",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/RedBearLab_BLE_Nano",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/RedBearLab_BlendMicro",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/RedBear_Duo_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Serial_HC05_HC06",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Serial_HM10_HC08",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/Simblee_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/TheAirBoard_BLE_Link",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/WioTerminal_BLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Bluetooth/nRF8001",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Arduino_Ethernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Arduino_Ethernet2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Arduino_Ethernet_Manual",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Arduino_MKR_ETH",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Arduino_MKR_ETH_SSL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/ENC28J60",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Energia_Ethernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Intel_Galileo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_Ethernet/Seeed_EthernetV2_0",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_GSM/Arduino_MKRGSM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_GSM/Arduino_MKRNB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_GSM/TinyGSM_MKR1400",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_GSM/TinyGSM_SIM800_SIM900",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/ATtiny85",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Arduino_Serial_USB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Arduino_SoftwareSerial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Arduino_Zero_M0_Serial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Blue_Pill_STM32F103C",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Digistump_Digispark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Energia_Serial_USB",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/Teensy3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_USB_Serial/chipKIT_Uno32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Adafruit_Feather_M0_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_MKR1000",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_MKR1010",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_WiFi_Shield",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_WiFi_Shield_101",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_Yun",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Arduino_org_UNO_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/CC3000",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Digistump_Oak",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP32_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP32_WiFi_SSL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP8266_Shield",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP8266_Standalone",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP8266_Standalone_Manual_IP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP8266_Standalone_SSL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/ESP8266_Standalone_SmartConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Energia_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Fishino",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Intel_Edison_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/LinkItONE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/NodeMCU",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/RN_XV_WiFly",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/RedBear_Duo_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Sparkfun_Blynk_Board",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/TheAirBoard_WiFly",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/TinyDuino_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/WildFire_V3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/WildFire_V4",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/Wio_Terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/WizFi250",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_WiFi/WizFi310",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_With_HTTP_API/Arduino_Ethernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_With_HTTP_API/Arduino_GSM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_With_HTTP_API/ESP8266",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Boards_With_HTTP_API/SIM800_SIM900",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/BlynkBlink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/GetData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/PushData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/PushDataOnRequest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/Servo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/VirtualPinRead",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/VirtualPinReply",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/GettingStarted/VirtualPinWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/AppConnectedEvents",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/ArduinoClient/Arduino_Ethernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/ArduinoClient/ESP8266_WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/DHT11",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/DirectConnect/ESP8266_AccessPoint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/DirectConnect/ESP8266_Station",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/FormatString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/HandleDisconnect",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/NeoPixel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/PrintAllVirtual",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/ServerAsDataStorage/ServerAsDataStorage_MultiValue",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/ServerAsDataStorage/ServerAsDataStorage_SingleValue",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/SetProperty/SetProperty_MultiValue",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/SetProperty/SetProperty_SingleValue",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/Stroboscope",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/Sync/ButtonInterrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/Sync/ButtonPoll",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/Sync/HardwareSyncStateFromApp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/More/Sync/SyncPhysicalButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/GPS_Stream",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/JoystickTwoAxis",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LCD/LCD_AdvancedMode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LCD/LCD_SimpleModePushing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LCD/LCD_SimpleModeReading",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LED/LED_Blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LED/LED_Color",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LED/LED_Fade",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/LED/LED_StatusOfButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Map",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Menu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Player",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/RTC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/RTC_Advanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Table/Table_Advanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Table/Table_Simple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/Timer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Blynk/examples/Widgets/WebHook/WebHook_GET"
      ],
      "provides_includes": [
        "Blynk.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ILI9341",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for Adafruit ILI9341 displays",
      "paragraph": "Library for Adafruit ILI9341 displays",
      "website": "https://github.com/adafruit/Adafruit_ILI9341",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341",
      "real_name": "Adafruit ILI9341",
      "version": "1.5.9",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/breakouttouchpaint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/graphicstest_featherwing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/graphicstest_pyportal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/mandelbrot",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/onoffbutton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/onoffbutton_breakout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/pictureEmbed",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/pyportal_boing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/touchpaint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/touchpaint_featherwing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ILI9341/examples/touchpaint_pyportal"
      ],
      "provides_includes": [
        "Adafruit_ILI9341.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_LSM9DS1",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the accelerometer, magnetometer and gyroscope values from the LSM9DS1 IMU on your Arduino Nano 33 BLE Sense.",
      "website": "https://github.com/arduino-libraries/Arduino_LSM9DS1",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM9DS1",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM9DS1/src",
      "real_name": "Arduino_LSM9DS1",
      "version": "1.1.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM9DS1/examples/SimpleAccelerometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM9DS1/examples/SimpleGyroscope",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM9DS1/examples/SimpleMagnetometer"
      ],
      "provides_includes": [
        "Arduino_LSM9DS1.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduboy-TinyFont",
      "author": "Boti Kis",
      "maintainer": "Boti Kis",
      "sentence": "Tiny 4x4 Font for Arduboy which contains the small ASCII Table from 32 to 127. The sprite for the font uses 192 bytes.",
      "paragraph": "Subclasses Arduino::Print and works with all print functions.",
      "website": "https://github.com/yinkou/Arduboy-TinyFont",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy-TinyFont",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy-TinyFont/src",
      "real_name": "Arduboy-TinyFont",
      "version": "3.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy-TinyFont/examples/TinyfontSample"
      ],
      "provides_includes": [
        "Tinyfont.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_HTS221",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the temperature and humidity sensors of your Nano 33 BLE Sense.",
      "website": "http://github.com/arduino-libraries/Arduino_HTS221",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_HTS221",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_HTS221/src",
      "real_name": "Arduino_HTS221",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_HTS221/examples/ReadSensors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_HTS221/examples/ReadSensorsImperial"
      ],
      "provides_includes": [
        "Arduino_HTS221.h"
      ]
    }
  },
  {
    "library": {
      "name": "LPD8806",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "paragraph": "Arduino library for LED strips and pixels using LPD8806 (and probably LPD8803/LPD8809)",
      "website": "https://github.com/adafruit/LPD8806",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806",
      "real_name": "LPD8806",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806/examples/LEDbeltKit",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806/examples/LEDbeltKit_alt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806/examples/longstrandtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806/examples/rainbow_strip",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPD8806/examples/strandtest"
      ],
      "provides_includes": [
        "LPD8806.h"
      ]
    }
  },
  {
    "library": {
      "name": "LiquidCrystal",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows communication with alphanumerical liquid crystal displays (LCDs).",
      "paragraph": "This library allows an Arduino/Genuino board to control LiquidCrystal displays (LCDs) based on the Hitachi HD44780 (or a compatible) chipset, which is found on most text-based LCDs. The library works with in either 4 or 8 bit mode (i.e. using 4 or 8 data lines in addition to the rs, enable, and, optionally, the rw control lines).",
      "website": "http://www.arduino.cc/en/Reference/LiquidCrystal",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/src",
      "real_name": "LiquidCrystal",
      "version": "1.0.7",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/Autoscroll",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/Blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/Cursor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/CustomCharacter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/Display",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/Scroll",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/SerialDisplay",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/TextDirection",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal/examples/setCursor"
      ],
      "provides_includes": [
        "LiquidCrystal.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_MPR121",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the MPR121-based capacitive sensors in the Adafruit shop.",
      "paragraph": "Designed specifically to work with the MPR121 Breakout in the Adafruit shop.",
      "website": "https://github.com/adafruit/Adafruit_MPR121",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MPR121",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MPR121",
      "real_name": "Adafruit MPR121",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MPR121/examples/MPR121test"
      ],
      "provides_includes": [
        "Adafruit_MPR121.h"
      ]
    }
  },
  {
    "library": {
      "name": "AnimatedGIF",
      "author": "Larry Bank",
      "maintainer": "Larry Bank",
      "sentence": "Universal GIF player for MCUs with at least 32K of RAM.",
      "paragraph": "Designed to provide an optimized GIF player that can run on any MCU and take advantage of file IO, LCD displays, DMA, etc by providing callback functions. You can play multi-frame GIFs stored in RAM, FLASH, SDCard or any other media you choose. Plenty of sample code is provided to demonstrate these options.",
      "website": "https://github.com/bitbank2/AnimatedGIF",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/src",
      "real_name": "AnimatedGIF",
      "version": "1.4.7",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/ESP32-LGFX-SDCard-GifPlayer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/ESP32_LEDMatrix_I2S",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/TFT_eSPI_memory",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/TinyPico_Display_GIF",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/adafruit_gfx_memory",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/adafruit_gfx_sdcard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/best_practices_example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/big_mem_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/bitbank_lcd_library",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/gif_animated_digits",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/gif_benchmark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/gif_from_spi_flash",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/gif_oled_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/gif_transparency_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AnimatedGIF/examples/play_all_sd_files"
      ],
      "provides_includes": [
        "AnimatedGIF.h"
      ]
    }
  },
  {
    "library": {
      "name": "NeoSWSerial",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "An efficient replacement for SoftwareSerial at baud rates 9600, 19200 and 38400.",
      "paragraph": "Simultaneous RX \u0026 TX, does not require additional TIMERs, interrupts not disabled during RX",
      "website": "https://github.com/SlashDevin/NeoSWSerial",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoSWSerial",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/NeoSWSerial/src",
      "real_name": "NeoSWSerial",
      "version": "3.0.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "NeoSWSerial.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_BuiltIn",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Shell Arduino library to provide the standard built-in libraries",
      "paragraph": "The sole purpose of this library is to install the standard Arduino libraries which are typically included with the Arduino IDE.",
      "website": "https://github.com/arduino-libraries/Arduino_BuiltIn",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BuiltIn",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BuiltIn/src",
      "real_name": "Arduino_BuiltIn",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "Arduino_BuiltIn.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_Circuit_Playground",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "All in one library to control Adafruit's Circuit Playground board.",
      "paragraph": "All in one library to control Adafruit's Circuit Playground board.  Requires no other dependencies and exposes all Circuit Playground components in a simple to use class.",
      "website": "https://github.com/adafruit/Adafruit_CircuitPlayground",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/utility",
      "real_name": "Adafruit Circuit Playground",
      "version": "1.11.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/CircuitPlaygroundFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/CircuitPlaygroundFirmata_Express_CodeOrg",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/FidgetSpinner",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_Accelerometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_Blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_LightSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_NeoPixels",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_SlideSwitch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_SoundSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_Speaker",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Hello_CircuitPlayground/Hello_Temperature",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Infrared_Demos/Infrared_NeoPixel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Infrared_Demos/Infrared_Read",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Infrared_Demos/Infrared_Record",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Infrared_Demos/Infrared_Send",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Infrared_Demos/Infrared_Testpattern",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/Birthday_Candles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/mic_FFT_classic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/mic_FFT_express",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/pretty_meter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/soundPressureLevel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Microphone_Demos/vu_meter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/ScratchSensorBoard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Speech_Demos/Talk_UK_Acorn",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Speech_Demos/Talk_US_Clock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Speech_Demos/Talk_US_Large",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Speech_Demos/Talk_US_Male",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/Speech_Demos/Talk_US_TI99",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/accelTap",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/accel_mouse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/analog_sensors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/color_sense",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/comm_badge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/external_neopixels",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/mega_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/tachometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Circuit_Playground/examples/tachometer_led_display"
      ],
      "provides_includes": [
        "Adafruit_CircuitPlayground.h",
        "Adafruit_Circuit_Playground.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ZeroDMA",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "DMA helper/wrapped for ATSAMD21 such as Arduino Zero \u0026 Feather M0",
      "paragraph": "DMA helper/wrapped for ATSAMD21 such as Arduino Zero \u0026 Feather M0",
      "website": "https://github.com/adafruit/Adafruit_ZeroDMA",
      "category": "Signal Input/Output",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA/utility",
      "real_name": "Adafruit Zero DMA Library",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA/examples/zerodma_memcpy",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA/examples/zerodma_spi1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ZeroDMA/examples/zerodma_spi2"
      ],
      "provides_includes": [
        "Adafruit_ZeroDMA.h"
      ]
    }
  },
  {
    "library": {
      "name": "Etherkit_Si5351",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "A full-featured library for the Si5351 series of clock generator ICs from Silicon Labs",
      "paragraph": "This library will allow you to control nearly all features of the Si5351, without depending on the proprietary ClockBuilder software from Silicon Labs.",
      "website": "https://github.com/etherkit/Si5351Arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/src",
      "real_name": "Etherkit Si5351",
      "version": "2.1.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_calibration",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_clk67_example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_ext_ref",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_outputs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_phase",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_sweeper",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_Si5351/examples/si5351_vcxo"
      ],
      "provides_includes": [
        "si5351.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoBLE",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables Bluetooth® Low Energy connectivity on the Arduino MKR WiFi 1010, Arduino UNO WiFi Rev.2, Arduino Nano 33 IoT, Arduino Nano 33 BLE and Nicla Sense ME.",
      "paragraph": "This library supports creating a Bluetooth® Low Energy peripheral \u0026 central mode.",
      "website": "https://www.arduino.cc/en/Reference/ArduinoBLE",
      "category": "Communication",
      "architectures": [
        "samd",
        "megaavr",
        "mbed",
        "apollo3",
        "mbed_nano",
        "mbed_portenta",
        "mbed_nicla"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/src",
      "real_name": "ArduinoBLE",
      "version": "1.2.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Central/LedControl",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Central/PeripheralExplorer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Central/Scan",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Central/ScanCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Central/SensorTagButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Peripheral/BatteryMonitor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Peripheral/ButtonLED",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Peripheral/CallbackLED",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBLE/examples/Peripheral/LED"
      ],
      "provides_includes": [
        "ArduinoBLE.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoIoTCloud",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "This library allows to connect to the Arduino IoT Cloud service.",
      "paragraph": "It provides a ConnectionManager to handle connection/disconnection, property-change updates and events callbacks. The supported boards are MKRGSM, MKR1000 and WiFi101.",
      "website": "https://github.com/arduino-libraries/ArduinoIoTCloud",
      "category": "Communication",
      "architectures": [
        "mbed",
        "samd",
        "esp8266",
        "mbed_nano",
        "mbed_portenta",
        "mbed_nicla"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/src",
      "real_name": "ArduinoIoTCloud",
      "version": "1.6.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/ArduinoIoTCloud-Advanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/ArduinoIoTCloud-Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/ArduinoIoTCloud-Callbacks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/ArduinoIoTCloud-DeferredOTA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/ArduinoIoTCloud-Schedule",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/utility/ArduinoIoTCloud_Travis_CI",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/utility/Provisioning",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloud/examples/utility/SelfProvisioning"
      ],
      "provides_includes": [
        "ArduinoIoTCloud.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit-ST7735",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit ST7735 and ST7789 SPI displays.",
      "paragraph": "This is a library for the Adafruit ST7735 and ST7789 SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735",
      "real_name": "Adafruit ST7735 and ST7789 Library",
      "version": "1.5.15",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/displayOnOffTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/graphicstest_hallowing_m0",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/graphicstest_hallowing_m4",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/graphicstest_pybadge_pygamer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/graphicstest_tft_gizmo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/miniTFTWing/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/miniTFTWing/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/rotationtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/seesaw_shield18_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit-ST7735/examples/shieldtest"
      ],
      "provides_includes": [
        "Adafruit_ST7735.h",
        "Adafruit_ST7789.h",
        "Adafruit_ST77xx.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_GFX_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit GFX graphics core library, this is the 'core' class that all our other graphics libraries derive from.",
      "paragraph": "Install this library in addition to the display library for your hardware.",
      "website": "https://github.com/adafruit/Adafruit-GFX-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GFX_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GFX_Library",
      "real_name": "Adafruit GFX Library",
      "version": "1.10.12",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GFX_Library/examples/GFXcanvas",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_GFX_Library/examples/mock_ili9341"
      ],
      "provides_includes": [
        "Adafruit_GFX.h",
        "Adafruit_GrayOLED.h",
        "Adafruit_SPITFT.h",
        "Adafruit_SPITFT_Macros.h",
        "gfxfont.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_NeoPixel",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "paragraph": "Arduino library for controlling single-wire-based LED pixels and strip.",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel",
      "real_name": "Adafruit NeoPixel",
      "version": "1.8.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/RGBWstrandtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/StrandtestArduinoBLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/StrandtestArduinoBLECallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/StrandtestBLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/buttoncycler",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/simple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/simple_new_operator",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/strandtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoPixel/examples/strandtest_wheel"
      ],
      "provides_includes": [
        "Adafruit_NeoPixel.h",
        "rp2040_pio.h"
      ]
    }
  },
  {
    "library": {
      "name": "FlashStorage",
      "author": "Various",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "The FlashStorage library aims to provide a convenient way to store and retrieve user's data using the non-volatile flash memory of microcontrollers.",
      "paragraph": "Useful if the EEPROM is not available or too small. Currently, ATSAMD21 and ATSAMD51 cpu are supported (and consequently every board based on this cpu like the Arduino Zero or Aduino MKR1000).",
      "website": "https://github.com/cmaglie/FlashStorage",
      "category": "Data Storage",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FlashStorage",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/FlashStorage/src",
      "real_name": "FlashStorage",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FlashStorage/examples/EmulateEEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FlashStorage/examples/FlashStoreAndRetrieve",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FlashStorage/examples/StoreNameAndSurname"
      ],
      "provides_includes": [
        "FlashAsEEPROM.h",
        "FlashStorage.h"
      ]
    }
  },
  {
    "library": {
      "name": "Nintendo_Extension_Ctrl",
      "author": "David Madison",
      "maintainer": "David Madison",
      "sentence": "Library for talking to Nintendo extension controllers over I2C.",
      "paragraph": "Supports the Wii Nunchuk, Wii Classic Controller, Guitar Hero guitar, Guitar Hero drum set, DJ Hero turntable, and S/NES Mini controllers.",
      "website": "https://github.com/dmadison/NintendoExtensionCtrl",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/src",
      "real_name": "Nintendo Extension Ctrl",
      "version": "0.7.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Any/DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Any/IdentifyController",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Any/MultipleBus",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Any/MultipleTypes",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Any/SpeedTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Classic Controller/Classic_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Classic Controller/Classic_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/DJ/DJ_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/DJ/DJ_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/DJ/DJ_EffectDial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Drums/Drums_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Drums/Drums_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Guitar/Guitar_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Guitar/Guitar_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/NES Mini/NES_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/NES Mini/NES_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Nunchuk/Nunchuk_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/Nunchuk/Nunchuk_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/SNES Mini/SNES_DebugPrint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Nintendo_Extension_Ctrl/examples/SNES Mini/SNES_Demo"
      ],
      "provides_includes": [
        "NintendoExtensionCtrl.h"
      ]
    }
  },
  {
    "library": {
      "name": "VEML6075",
      "author": "Jonathan Dempsey",
      "maintainer": "Jonathan Dempsey \u003cJDWifWaf@gmail.com\u003e",
      "sentence": "An Arduino Library Specifically for the ESP32.",
      "paragraph": "Handles communication without th Wire.h library. Adds config option.",
      "website": "https://github.com/WifWaf/VEML6075",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/VEML6075",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/VEML6075/src",
      "real_name": "VEML6075",
      "version": "1.0.1",
      "license": "Apache-2.0",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/VEML6075/examples/BasicUsage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/VEML6075/examples/CustomSettings",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/VEML6075/examples/UpdateCurbing"
      ],
      "provides_includes": [
        "VEML6075.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_BMP280_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for BMP280 sensors.",
      "paragraph": "Arduino library for BMP280 pressure and altitude sensors.",
      "website": "https://github.com/adafruit/Adafruit_BMP280_Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BMP280_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BMP280_Library",
      "real_name": "Adafruit BMP280 Library",
      "version": "2.1.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BMP280_Library/examples/bmp280_sensortest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BMP280_Library/examples/bmp280test"
      ],
      "provides_includes": [
        "Adafruit_BMP280.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArdVoice",
      "author": "Ignacio Vina",
      "maintainer": "Ignacio Vina \u003cmoblynx.us@gmail.com\u003e",
      "sentence": "A library to play audio (voices) on the Arduboy game system.",
      "paragraph": "Plays PCM speech and other audio from compressed .wav data.",
      "website": "https://github.com/igvina/ArdVoice",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdVoice",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArdVoice/src",
      "real_name": "ArdVoice",
      "version": "0.1.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdVoice/examples/Sample1-Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArdVoice/examples/Sample2-Complex"
      ],
      "provides_includes": [
        "ArdVoice.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_ConnectionHandler",
      "author": "Ubi de Feo, Cristian Maglie, Andrea Catozzi, Alexander Entinger et al.",
      "maintainer": "Arduino.cc",
      "sentence": "Arduino Library for network connection management (WiFi, GSM, NB, [Ethernet])",
      "paragraph": "Originally part of ArduinoIoTCloud",
      "website": "https://github.com/arduino-libraries/Arduino_ConnectionHandler",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp32",
        "esp8266",
        "mbed",
        "megaavr",
        "mbed_nano",
        "mbed_portenta",
        "mbed_nicla"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_ConnectionHandler",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_ConnectionHandler/src",
      "real_name": "Arduino_ConnectionHandler",
      "version": "0.6.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_ConnectionHandler/examples/ConnectionHandlerDemo"
      ],
      "provides_includes": [
        "Arduino_ConnectionHandler.h",
        "Arduino_GSMConnectionHandler.h",
        "Arduino_LoRaConnectionHandler.h",
        "Arduino_NBConnectionHandler.h",
        "Arduino_WiFiConnectionHandler.h"
      ]
    }
  },
  {
    "library": {
      "name": "Etherkit_JTEncode",
      "author": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "maintainer": "Jason Milldrum \u003cmilldrum@gmail.com\u003e",
      "sentence": "Generate JT65, JT9, JT4, WSPR, and FSQ symbols on your Arduino.",
      "paragraph": "This library very simply generates a set of channel symbols for JT65, JT9, JT4, or WSPR based on the user providing a properly formatted Type 6 message for JT65, JT9, or JT4 (which is 13 valid characters) or a callsign, Maidenhead grid locator, and power output for WSPR. It will also generate an arbitrary FSQ message of up to 200 characters in both directed and non-directed format. When paired with a synthesizer that can output frequencies in fine, phase-continuous tuning steps (such as the Si5351), then a beacon or telemetry transmitter can be created which can change the transmitted characters as needed from the Arduino.",
      "website": "https://github.com/etherkit/JTEncode",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_JTEncode",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_JTEncode/src",
      "real_name": "Etherkit JTEncode",
      "version": "1.1.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Etherkit_JTEncode/examples/Si5351JTDemo"
      ],
      "provides_includes": [
        "JTEncode.h",
        "encode_rs.h",
        "init_rs.h",
        "int.h",
        "rs_common.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MicroPython",
      "author": "Martino Facchin \u003cm.facchin@arduino.cc\u003e, Alexander Entinger \u003ca.entinger@arduino.cc\u003e",
      "maintainer": "Martino Facchin \u003cm.facchin@arduino.cc\u003e",
      "sentence": "MicroPython for Arduino",
      "paragraph": "This library allows the execution of Python code on Arduino utilizing the MicroPython framework as an interpreter.",
      "website": "https://github.com/arduino-libraries/micropython",
      "category": "Data Processing",
      "architectures": [
        "nRF528x",
        "mbed"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MicroPython",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MicroPython/src",
      "real_name": "Micropython",
      "precompiled": true,
      "ld_flags": "-lmicropython",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MicroPython/examples/MicroPython_BasicUsage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MicroPython/examples/MicroPython_InterpreterMassStorage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MicroPython/examples/MicroPython_REPL"
      ],
      "provides_includes": [
        "Arduino_MicroPython.h",
        "arduino_api_weak.h",
        "mpconfigport.h"
      ]
    }
  },
  {
    "library": {
      "name": "pubsubclient",
      "author": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "maintainer": "Nick O'Leary \u003cnick.oleary@gmail.com\u003e",
      "sentence": "A client library for MQTT messaging.",
      "paragraph": "MQTT is a lightweight messaging protocol ideal for small devices. This library allows you to send and receive MQTT messages. It supports the latest MQTT 3.1.1 protocol and can be configured to use the older MQTT 3.1 if needed. It supports all Arduino Ethernet Client compatible hardware, including the Intel Galileo/Edison, ESP8266 and TI CC3000.",
      "website": "http://pubsubclient.knolleary.net",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/src",
      "real_name": "PubSubClient",
      "version": "2.7",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_auth",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_esp8266",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_large_message",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_publish_in_callback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_reconnect_nonblocking",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/pubsubclient/examples/mqtt_stream"
      ],
      "provides_includes": [
        "PubSubClient.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoJson",
      "author": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "maintainer": "Benoit Blanchon \u003cblog.benoitblanchon.fr\u003e",
      "sentence": "A simple and efficient JSON library for embedded C++.",
      "paragraph": "ArduinoJson supports ✔ serialization, ✔ deserialization, ✔ MessagePack, ✔ fixed allocation, ✔ zero-copy, ✔ streams, ✔ filtering, and more. It is the most popular Arduino library on GitHub ❤❤❤❤❤. Check out arduinojson.org for a comprehensive documentation.",
      "website": "https://arduinojson.org/?utm_source=meta\u0026utm_medium=library.properties",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/src",
      "real_name": "ArduinoJson",
      "version": "6.19.4",
      "license": "MIT",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonConfigFile",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonFilterExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonGeneratorExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonHttpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonParserExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/JsonUdpBeacon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/MsgPackParser",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/ProgmemExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoJson/examples/StringExample"
      ],
      "provides_includes": [
        "ArduinoJson.h",
        "ArduinoJson.hpp"
      ]
    }
  },
  {
    "library": {
      "name": "RF24",
      "author": "TMRh20",
      "maintainer": "TMRh20,Avamander",
      "sentence": "Radio driver, OSI layer 2 library for nrf24L01(+) modules.",
      "paragraph": "Core library for nRF24L01(+) communication. Simple to use for beginners, but offers advanced configuration options. Many examples are included to demonstrate various modes of communication.",
      "website": "https://nRF24.github.io/RF24/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/RF24",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/utility",
      "real_name": "RF24",
      "version": "1.4.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/AcknowledgementPayloads",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/GettingStarted",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/InterruptConfigure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/ManualAcknowledgements",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/MulticeiverDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/StreamingData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/GettingStarted_HandlingFailures",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/TransferTimeouts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/pingpair_dyn",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/pingpair_irq",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/pingpair_multi_dyn",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/pingpair_sleepy",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/recipes/led_remote",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/recipes/nordic_fob",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/old_backups/recipes/pingpair_maple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/rf24_ATTiny/rf24ping85",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/rf24_ATTiny/timingSearch3pin",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RF24/examples/scanner"
      ],
      "provides_includes": [
        "RF24.h",
        "RF24_config.h",
        "nRF24L01.h",
        "printf.h"
      ]
    }
  },
  {
    "library": {
      "name": "uCRC16Lib",
      "author": "Naguissa \u003cnaguissa@foroelectro.net\u003e",
      "maintainer": "Naguissa \u003cnaguissa@foroelectro.net\u003e",
      "sentence": "Tiny and cross-device compatible CCITT CRC16 calculator library - uCRC16Lib",
      "paragraph": "Supports any architecture",
      "website": "https://github.com/Naguissa/uCRC16Lib",
      "category": "Data Processing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/uCRC16Lib",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/uCRC16Lib/src",
      "real_name": "uCRC16Lib",
      "version": "2.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/uCRC16Lib/examples/uCRC16Lib_example"
      ],
      "provides_includes": [
        "uCRC16Lib.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_DotStar",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit DotStar LED Library",
      "paragraph": "Adafruit DotStar LED Library",
      "website": "https://github.com/adafruit/Adafruit_DotStar",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStar",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStar",
      "real_name": "Adafruit DotStar",
      "version": "1.1.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStar/examples/ItsyBitsyM4Onboard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStar/examples/strandtest"
      ],
      "provides_includes": [
        "Adafruit_DotStar.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_LED_Backpack_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "paragraph": "Adafruit LED Backpack Library for our 8x8 matrix and 7-segment LED backpacks",
      "website": "https://github.com/adafruit/Adafruit-LED-Backpack-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library",
      "real_name": "Adafruit LED Backpack Library",
      "version": "1.1.10",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/HT16K33",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/bargraph24",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/bicolor8x8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/clock_sevenseg_ds1307",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/clock_sevenseg_gps",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/matrix16x8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/matrix8x8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/minimatrix16x8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/quadalphanum",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/quadalphanum_mini",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/roboface",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/sevenseg",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LED_Backpack_Library/examples/wavface"
      ],
      "provides_includes": [
        "Adafruit_LEDBackpack.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoSTL",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e, Chris Johnson \u003cchrisjohnsonmail@gmail.com\u003e, Arduino",
      "maintainer": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "sentence": "A port of uClibc++ Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithm.",
      "website": "https://github.com/mike-matera/ArduinoSTL",
      "category": "Other",
      "architectures": [
        "avr",
        "megaavr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoSTL",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoSTL/src",
      "real_name": "ArduinoSTL",
      "version": "1.3.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "ArduinoSTL.h"
      ]
    }
  },
  {
    "library": {
      "name": "MPU6050",
      "author": "Electronic Cats",
      "maintainer": "Electronic Cats \u003cstore@electroniccats.com\u003e",
      "sentence": "MPU6050 Arduino Library.",
      "paragraph": "MPU-6050 6-axis accelerometer/gyroscope Arduino Library.",
      "website": "https://github.com/electroniccats/mpu6050",
      "category": "Sensors",
      "architectures": [
        "avr",
        "samd",
        "sam",
        "esp8266",
        "esp32",
        "stm32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/src",
      "real_name": "MPU6050",
      "version": "0.5.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/IMU_Zero",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/MPU6050_DMP6",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/MPU6050_DMP6_ESPWiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/MPU6050_DMP6_Ethernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/MPU6050_DMP6_using_DMP_V6v12",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MPU6050/examples/MPU6050_raw"
      ],
      "provides_includes": [
        "MPU6050.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_FXAS21002C",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for the FXAS210002C Gyroscope",
      "paragraph": "Unified sensor driver for the FXAS21002C Gyroscope",
      "website": "https://github.com/adafruit/Adafruit_FXAS21002C",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FXAS21002C",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FXAS21002C",
      "real_name": "Adafruit FXAS21002C",
      "version": "2.1.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_FXAS21002C/examples/sensorapi"
      ],
      "provides_includes": [
        "Adafruit_FXAS21002C.h"
      ]
    }
  },
  {
    "library": {
      "name": "oocsi-esp",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/oocsi-esp",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/oocsi-esp",
      "is_legacy": true,
      "location": 1
    }
  },
  {
    "library": {
      "name": "package-2681468246",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/package-2681468246",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/package-2681468246",
      "is_legacy": true,
      "location": 1
    }
  },
  {
    "library": {
      "name": "Adafruit_BusIO",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for abstracting away UART, I2C and SPI interfacing",
      "paragraph": "This is a library for abstracting away UART, I2C and SPI interfacing",
      "website": "https://github.com/adafruit/Adafruit_BusIO",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO",
      "real_name": "Adafruit BusIO",
      "version": "1.11.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/i2c_address_detect",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/i2c_readwrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/i2c_registers",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/i2corspi_register",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/spi_modetest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/spi_readwrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/spi_register_bits",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_BusIO/examples/spi_registers"
      ],
      "provides_includes": [
        "Adafruit_BusIO_Register.h",
        "Adafruit_I2CDevice.h",
        "Adafruit_I2CRegister.h",
        "Adafruit_SPIDevice.h"
      ]
    }
  },
  {
    "library": {
      "name": "NTPtimeESP",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NTPtimeESP",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/NTPtimeESP",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NTPtimeESP/examples/NTPtimeESP"
      ],
      "provides_includes": [
        "NTPtimeESP.h"
      ]
    }
  },
  {
    "library": {
      "name": "OBD2",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for reading OBD-II data from your car over CAN bus.",
      "paragraph": "Depends on the CAN library.",
      "website": "https://github.com/sandeepmistry/arduino-OBD2",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OBD2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/OBD2/src",
      "real_name": "OBD2",
      "version": "0.0.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OBD2/examples/OBD2_01_SupportedPIDs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OBD2/examples/OBD2_02_KeyStats",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OBD2/examples/OBD2_03_DataPrinter"
      ],
      "provides_includes": [
        "ODB2.h"
      ]
    }
  },
  {
    "library": {
      "name": "U8g2",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "Monochrome LCD, OLED and eInk Library. Display controller: SSD1305, SSD1306, SSD1309, SSD1312, SSD1316, SSD1320, SSD1322, SSD1325, SSD1327, SSD1329, SSD1606, SSD1607, SH1106, SH1107, SH1108, SH1122, T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230, UC1601, UC1604, UC1608, UC1610, UC1611, UC1617, UC1638, UC1701, ST7511, ST7528, ST7565, ST7567, ST7571, ST7586, ST7588, ST75256, ST75320, NT7534, ST7920, IST3020, IST7920, LD7032, KS0108, KS0713, HD44102, T7932, SED1520, SBN1661, IL3820, MAX7219. Interfaces: I2C, SPI, Parallel.",
      "paragraph": "Monochrome LCD, OLED and eInk Library. Successor of U8glib. Supported display controller: SSD1305, SSD1306, SSD1309, SSD1312, SSD1316, SSD1320, SSD1322, SSD1325, SSD1327, SSD1329, SSD1606, SSD1607, SH1106, SH1107, SH1108, SH1122, T6963, RA8835, LC7981, PCD8544, PCF8812, HX1230, UC1601, UC1604, UC1608, UC1610, UC1611, UC1617, UC1638, UC1701, ST7511, ST7528, ST7565, ST7567, ST7571, ST7586, ST7588, ST75256, ST75320, NT7534, ST7920, IST3020, IST7920, LD7032, KS0108, KS0713, HD44102, T7932, SED1520, SBN1661, IL3820, MAX7219. Supported interfaces: I2C, SPI, Parallel. Features: UTF8, \u003e700 fonts, U8x8 char output.",
      "website": "https://github.com/olikraus/u8g2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/src",
      "real_name": "U8g2",
      "version": "2.32.15",
      "license": "BSD-2-Clause",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/FPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/FontUsage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/GraphicsTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/IconMenu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/PrintUTF8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/ScreenShot",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/SelectionList",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/Shennong",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/U8g2Logo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/UpdateArea",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/full_buffer/Weather",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/games/LittleRookChess",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/games/SpaceTrash",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/A2Printer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/ButtonEmoticon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Chinese",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/ClipWindow",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Clock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/ContrastTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Devanagari",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/DirectAccess",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/DrawLog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/ExtUTF8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/FPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/FlipMode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/GraphicsTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/IconMenu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Japanese",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Korean",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/LoadFromSD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/MechCount",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/PowerSaveTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/PrintHelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/PrintProgmem",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/PrintUTF8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/ScrollingText",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/SelectionList",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Serial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Shennong",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/StateBufferLoop",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Terminal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/U8g2Logo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/UpdatePartly",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/Weather",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/XBM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/page_buffer/XORTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/16x16Font",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/ArduboyTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/FlipMode",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/GraphicsTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/MessageBox",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8g2/examples/u8x8/Terminal"
      ],
      "provides_includes": [
        "MUIU8g2.h",
        "U8g2lib.h",
        "U8x8lib.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ADXL343",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified driver for the ADXL343 Accelerometer",
      "paragraph": "Unified driver for the ADXL343 Accelerometer",
      "website": "https://github.com/adafruit/Adafruit_ADXL343",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL343",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL343",
      "real_name": "Adafruit ADXL343",
      "version": "1.3.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL343/examples/interrupts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL343/examples/sensortest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL343/examples/singletap"
      ],
      "provides_includes": [
        "Adafruit_ADXL343.h"
      ]
    }
  },
  {
    "library": {
      "name": "Mouse",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino/Genuino board with USB capabilites to act as a Mouse.",
      "paragraph": "This library plugs on the HID library. Can be used with or without other HID-based libraries (Keyboard, Gamepad etc)",
      "website": "http://www.arduino.cc/en/Reference/Mouse",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Mouse",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Mouse/src",
      "real_name": "Mouse",
      "version": "1.0.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "Mouse.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_Zero_FFT_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "FFT library for Arduino Zero / Adafruit Feather M0 (SAMD21 processor).",
      "paragraph": "FFT library for the Arduino Zero / Adafruit Feather M0 (SAMD21 processor).",
      "website": "https://github.com/adafruit/Adafruit_ZeroFFT",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library",
      "real_name": "Adafruit Zero FFT Library",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/CircuitPlayground",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/fft_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/mic_tft",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/normalized",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/pdm_tft",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Zero_FFT_Library/examples/pdm_tft_fancy"
      ],
      "provides_includes": [
        "Adafruit_ZeroFFT.h",
        "arm_common_tables.h"
      ]
    }
  },
  {
    "library": {
      "name": "Ciao",
      "author": "Arduino \u003cswdev@arduino.org\u003e",
      "maintainer": "Arduino \u003cswdev@arduino.org\u003e",
      "sentence": "Enables communication between microcontroller and MIPS cpu. Natively support network communications, terminal (linux) and file access.",
      "paragraph": "Create your own Ciao Connector for your needs and easily use it. Works only on Linino based boards like Yún, Yún Mini, Tian and Industrial 101.",
      "website": "http://www.arduino.org/learning/reference/ciao-library",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/src",
      "real_name": "Ciao",
      "version": "0.1.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/File/FileOverwrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/File/FileRead",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/MQTT/Bluemix",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/RestClient/RestClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/RestClient/ThingSpeak",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/RestClient/ThingSpeakTalkBackRecv",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/RestClient/ThingSpeakTalkBackSend",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/RestServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/Shell/BoardModel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/Shell/CpuUsage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ciao/examples/Shell/Date"
      ],
      "provides_includes": [
        "Ciao.h",
        "CiaoData.h"
      ]
    }
  },
  {
    "library": {
      "name": "Ethernet",
      "author": "Various (see AUTHORS file for details)",
      "maintainer": "Paul Stoffregen \u003cpaul@pjrc.com\u003e, Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino Ethernet Board or Shield.",
      "paragraph": "With this library you can use the Arduino Ethernet (shield or board) to connect to Internet. The library provides both Client and server functionalities. The library permits you to connect to a local network also with DHCP and to resolve DNS.",
      "website": "http://www.arduino.cc/en/Reference/Ethernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/src",
      "real_name": "Ethernet",
      "version": "2.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/AdvancedChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/BarometricPressureWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/ChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/DhcpAddressPrinter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/DhcpChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/LinkStatus",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/TelnetClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/UDPSendReceiveString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/UdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/WebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/WebClientRepeating",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ethernet/examples/WebServer"
      ],
      "provides_includes": [
        "Ethernet.h"
      ]
    }
  },
  {
    "library": {
      "name": "Infrared",
      "author": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "maintainer": "Bengt Martensson \u003cbarf@bengt-martensson.de\u003e",
      "sentence": "An object oriented library for sending, receiving, generating, and decoding IR signals on the Arduino.",
      "paragraph": "The library contains classes for IR signals, IR sequences, as well as for sending, receiving, decoding, and rendering of IR signals.",
      "website": "http://www.harctoolbox.org/Infrared4Arduino.html",
      "category": "Signal Input/Output",
      "architectures": [
        "avr",
        "megaavr",
        "samd",
        "sam",
        "esp32",
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/src",
      "real_name": "Infrared",
      "version": "1.2.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrReceiverPoll",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrReceiverSampler",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrReceiverSampler_SenderPwm",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSenderNonMod",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSenderNonModInvert",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSenderPwm",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSenderPwmSoftDelay",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSenderPwmSpinWait",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrSignal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/IrWidgetAggregating",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/LearningHashDecoder",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/MultiDecoder",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/Nec1Decoder",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/Nec1Renderer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/OneButtonRemote",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/Pronto",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/ProntoReadDump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/Rc5Renderer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/allreaders",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/oppo_cooked",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Infrared/examples/oppo_raw"
      ],
      "provides_includes": [
        "HashDecoder.h",
        "InfraredTypes.h",
        "IrDecoder.h",
        "IrReader.h",
        "IrReceiver.h",
        "IrReceiverPoll.h",
        "IrReceiverSampler.h",
        "IrSender.h",
        "IrSenderNonMod.h",
        "IrSenderPwm.h",
        "IrSenderPwmHard.h",
        "IrSenderPwmSoft.h",
        "IrSenderPwmSoftDelay.h",
        "IrSenderPwmSpinWait.h",
        "IrSenderSimulator.h",
        "IrSequence.h",
        "IrSequenceReader.h",
        "IrSignal.h",
        "IrWidget.h",
        "IrWidgetAggregating.h",
        "MultiDecoder.h",
        "Nec1Decoder.h",
        "Nec1Renderer.h",
        "Pronto.h",
        "Rc5Decoder.h",
        "Rc5Renderer.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_Portenta_OTA",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Firmware update for the Portenta H7.",
      "paragraph": "This library allows performing a firmware update on the Arduino Portenta H7. The firmware can be stored in various different locations such as within the microcontroller's flash, on an external SD card or on the QSPI flash chip.",
      "website": "https://github.com/arduino-libraries/Arduino_Portenta_OTA",
      "category": "Communication",
      "architectures": [
        "mbed",
        "mbed_portenta",
        "mbed_nicla"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_Portenta_OTA",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_Portenta_OTA/src",
      "real_name": "Arduino_Portenta_OTA",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_Portenta_OTA/examples/OTA_Qspi_Flash",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_Portenta_OTA/examples/OTA_SD_Portenta",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_Portenta_OTA/examples/OTA_Usage_Portenta"
      ],
      "provides_includes": [
        "Arduino_Portenta_OTA.h"
      ]
    }
  },
  {
    "library": {
      "name": "I2CSoilMoistureSensor",
      "author": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "maintainer": "Ingo Fischer \u003cingo@fischer-ka.de\u003e",
      "sentence": "Provide access to all functions of the I2C Soil Moisture Sensor from Catnip Electronics.",
      "website": "https://github.com/Apollon77/I2CSoilMoistureSensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/I2CSoilMoistureSensor",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/I2CSoilMoistureSensor",
      "real_name": "I2CSoilMoistureSensor",
      "version": "1.1.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/I2CSoilMoistureSensor/examples/ChangeSensorI2CAddress",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/I2CSoilMoistureSensor/examples/ReadSensorData"
      ],
      "provides_includes": [
        "I2CSoilMoistureSensor.h"
      ]
    }
  },
  {
    "library": {
      "name": "RTClib",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "A fork of Jeelab's fantastic RTC library",
      "paragraph": "Works with DS1307, DS3231, PCF8523, PCF8563 on multiple architectures",
      "website": "https://github.com/adafruit/RTClib",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/src",
      "real_name": "RTClib",
      "version": "2.0.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/DS3231_alarm",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/customWire_DS3231onSAMD21",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/datecalc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/ds1307",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/ds1307SqwPin",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/ds1307nvram",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/ds3231",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/interrupts1Hz",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/pcf8523",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/pcf8523Countdown",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/pcf8563",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/pcf8563_interrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/softrtc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/timestamp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTClib/examples/toString"
      ],
      "provides_includes": [
        "RTClib.h"
      ]
    }
  },
  {
    "library": {
      "name": "ATMlib",
      "author": "TEAM a.r.g., Davey Taylor aka STG, Joeri Gantois aka JO3RI",
      "maintainer": "info@TEAM_arg.org",
      "sentence": "The Arduboy Tracker Music library.",
      "paragraph": "A library for playing 4 channel chiptune music and oscilator sounds, intended for use with the Arduboy game system",
      "website": "https://github.com/TEAMarg/ATMlib",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/src",
      "real_name": "ATMlib",
      "version": "1.2.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/Glissando/Glissando01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/arpeggio/arpeggio01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/arpeggio/arpeggio02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/arpeggio/arpeggio03",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum03",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum04",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum05",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum06",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum07",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/drums/drum08",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/frequencySlides/frecuencySlide01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/frequencySlides/frecuencySlide02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/gotoAdvanced/gotoAdvanced01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/noteCut/noteCut01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/noteCut/noteCut02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/songs/song01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/tempo/tempoAdd01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/transposition/transposition01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/transposition/transposition02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/transposition/transposition03",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/tremolo/tremolo01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/tremolo/tremolo02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/vibrato/vibrato01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/volumeSlides/volumeSlide01",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/volumeSlides/volumeSlide02",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ATMlib/examples/volumeSlides/volumeSlide03"
      ],
      "provides_includes": [
        "ATMlib.h"
      ]
    }
  },
  {
    "library": {
      "name": "QTRSensors",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for the Pololu QTR Reflectance Sensors",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with the Pololu QTR reflectance sensors.",
      "website": "https://github.com/pololu/qtr-sensors-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors",
      "real_name": "QTRSensors",
      "version": "4.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors/examples/QTRAExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors/examples/QTRARawValuesExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors/examples/QTRRCExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QTRSensors/examples/QTRRCRawValuesExample"
      ],
      "provides_includes": [
        "QTRSensors.h"
      ]
    }
  },
  {
    "library": {
      "name": "avr_stl",
      "author": "Mike Matera \u003cmatera@lifealgorithmic.com\u003e",
      "maintainer": "Chris Johnson \u003cchrisjohnsonmail@gmail.com\u003e",
      "sentence": "A port of ArduinoSTL Arduino library.",
      "paragraph": "This library includes important C++ functions, including cout and cin, printf and scanf. It also includes STL containers like vector and algorithm.",
      "website": "https://github.com/ciband/avr_stl",
      "category": "Other",
      "architectures": [
        "avr",
        "samd",
        "megaavr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/avr_stl",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/avr_stl/src",
      "real_name": "ArduinoSTL",
      "version": "1.2.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "avr_stl.h"
      ]
    }
  },
  {
    "library": {
      "name": "package-4261874966",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/package-4261874966",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/package-4261874966",
      "is_legacy": true,
      "location": 1
    }
  },
  {
    "library": {
      "name": "Arduboy2",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "An alternative library for use with the Arduboy game system.",
      "paragraph": "This is a fork of the Arduboy library, with a main goal of providing ways in which more code space can be freed for use by large sketches. It remains substantially compatible with Arduboy library V1.1, with the main API difference being that the \"tones\" subclass has been removed and its functionality made available in a separate ArduboyPlaytune library. Removal of \"tones\" also allows other audio functions and libraries to be used, such as ArduboyTones.",
      "website": "https://github.com/MLXXXp/Arduboy2",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/src",
      "real_name": "Arduboy2",
      "version": "6.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/ArduBreakout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/BeepDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/FontDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/PlayTune",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/RGBled",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy2/examples/SetSystemEEPROM"
      ],
      "provides_includes": [
        "Arduboy2.h"
      ]
    }
  },
  {
    "library": {
      "name": "LiquidCrystal_PCF8574",
      "author": "Matthias Hertel",
      "maintainer": "Matthias Hertel \u003cwww.mathertel.de\u003e",
      "sentence": "A library for driving LiquidCrystal displays (LCD) by using the I2C bus and an PCF8574 I2C adapter.",
      "paragraph": "This library uses the original Wire library for communication.",
      "website": "https://www.mathertel.de/Arduino/LiquidCrystal_PCF8574.aspx",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_PCF8574",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_PCF8574/src",
      "real_name": "LiquidCrystal_PCF8574",
      "version": "1.3.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_PCF8574/examples/LiquidCrystal_PCF8574_Test"
      ],
      "provides_includes": [
        "LiquidCrystal_PCF8574.h"
      ]
    }
  },
  {
    "library": {
      "name": "TinyDHT_sensor_library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for Using DHT11, DHT22, etc Temp \u0026 Humidity Sensors with the ATtiny85 such as Adafruit Trinket and Arduino Gemma",
      "paragraph": "Arduino library for DHT11, DHT22, etc Temp \u0026 Humidity Sensors with the ATtiny85 such as Adafruit Trinket and Arduino Gemma",
      "website": "https://github.com/adafruit/TinyDHT",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyDHT_sensor_library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/TinyDHT_sensor_library",
      "real_name": "TinyDHT sensor library",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "provides_includes": [
        "TinyDHT.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MKRTHERM",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the temperature sensors connected to your MKR THERM shield.",
      "website": "https://github.com/arduino-libraries/Arduino_MKRTHERM",
      "category": "Sensors",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRTHERM",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRTHERM/src",
      "real_name": "Arduino_MKRTHERM",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRTHERM/examples/ReadSensor"
      ],
      "provides_includes": [
        "Arduino_MKRTHERM.h"
      ]
    }
  },
  {
    "library": {
      "name": "WiFi101OTA",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Update sketches on your board over WiFi",
      "paragraph": "Requires an Arduino/Genuino SAMD board",
      "website": "http://www.arduino.cc/en/Reference/WiFi101OTA",
      "category": "Other",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101OTA",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101OTA/src",
      "real_name": "WiFi101OTA",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101OTA/examples/WiFi101_OTA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi101OTA/examples/WiFi101_SD_OTA"
      ],
      "provides_includes": [
        "InternalStorage.h",
        "OTAStorage.h",
        "SDStorage.h",
        "WiFi101OTA.h"
      ]
    }
  },
  {
    "library": {
      "name": "Sodaq_HTS221",
      "author": "Alex Tsamakos,SODAQ",
      "maintainer": "-",
      "sentence": "An Arduino library for the HTS221 sensor.",
      "paragraph": "Supports humidity and temperature sensors.",
      "website": "https://github.com/SodaqMoja/Sodaq_HTS221",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Sodaq_HTS221",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Sodaq_HTS221/src",
      "real_name": "Sodaq_HTS221",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Sodaq_HTS221/examples/humidity-logger"
      ],
      "provides_includes": [
        "Sodaq_HTS221.h"
      ]
    }
  },
  {
    "library": {
      "name": "WaveHC",
      "author": "William Greiman",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "WaveHC wave shield library",
      "paragraph": "WaveHC wave shield library",
      "website": "https://github.com/adafruit/WaveHC",
      "category": "Sensors",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC",
      "real_name": "WaveHC",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/PiSpeakHC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/SampleRateHC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/SdReadTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/SoftVolumeHC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/daphc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WaveHC/examples/openByIndex"
      ],
      "provides_includes": [
        "ArduinoPins.h",
        "FatReader.h",
        "FatStructs.h",
        "SdInfo.h",
        "SdReader.h",
        "WaveHC.h",
        "WavePinDefs.h",
        "WaveUtil.h",
        "mcpDac.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_DMA_neopixel_library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for NeoPixel DMA on SAMD21 and SAMD51 microcontrollers",
      "paragraph": "Arduino library for NeoPixel DMA on SAMD21 and SAMD51 microcontrollers",
      "website": "https://github.com/adafruit/Adafruit_NeoPixel_ZeroDMA",
      "category": "Display",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DMA_neopixel_library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DMA_neopixel_library",
      "real_name": "Adafruit DMA neopixel library",
      "version": "1.2.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DMA_neopixel_library/examples/strandtest"
      ],
      "provides_includes": [
        "Adafruit_NeoPixel_ZeroDMA.h",
        "bittable.h",
        "pins.h"
      ]
    }
  },
  {
    "library": {
      "name": "Servo",
      "author": "Michael Margolis, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of servo motors.",
      "paragraph": "This library can control a great number of servos.\u003cbr /\u003eIt makes careful use of timers: the library can control 12 servos using only 1 timer.\u003cbr /\u003eOn the Arduino Due you can control up to 60 servos.",
      "website": "https://www.arduino.cc/reference/en/libraries/servo/",
      "category": "Device Control",
      "architectures": [
        "avr",
        "megaavr",
        "sam",
        "samd",
        "nrf52",
        "stm32f4",
        "mbed",
        "mbed_nano",
        "mbed_portenta",
        "mbed_rp2040"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Servo",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Servo/src",
      "real_name": "Servo",
      "version": "1.1.8",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Servo/examples/Knob",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Servo/examples/Sweep"
      ],
      "provides_includes": [
        "Servo.h"
      ]
    }
  },
  {
    "library": {
      "name": "TinyPICO_Helper_Library",
      "author": "UnexpectedMaker",
      "maintainer": "UnexpectedMaker",
      "sentence": "A TinyPICO Helper Library",
      "paragraph": "A TinyPICO Helper Library",
      "website": "https://github.com/inyPICO",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyPICO_Helper_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/TinyPICO_Helper_Library/src",
      "real_name": "TinyPICO Helper Library",
      "version": "1.3.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyPICO_Helper_Library/examples/TinyPICO_Funky_LED"
      ],
      "provides_includes": [
        "TinyPICO.h"
      ]
    }
  },
  {
    "library": {
      "name": "UIPEthernet",
      "author": "Norbert Truchsess,CassyArduino,Juraj Andrassy",
      "maintainer": "Juraj Andrassy \u003cjuraj.andrassy@gmail.com\u003e",
      "sentence": "Ethernet library for ENC28J60",
      "paragraph": "implements the same API as stock Ethernet-lib. Just replace the include of Ethernet.h with UIPEthernet.h",
      "website": "https://github.com/UIPEthernet/UIPEthernet",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/utility",
      "real_name": "UIPEthernet",
      "version": "2.0.11",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/AdvancedChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/EchoServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/TcpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/TcpServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/UdpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/UIPEthernet/examples/UdpServer"
      ],
      "provides_includes": [
        "UIPEthernet.h"
      ]
    }
  },
  {
    "library": {
      "name": "USBHID",
      "author": "Various",
      "maintainer": "arpruss@gmail.com",
      "sentence": "USB HID / MIDI / mass storage library for STM32F1",
      "paragraph": "USB HID / MIDI / mass storage library for STM32F1",
      "website": "https://github.com/arpruss/USBHID_stm32f1",
      "category": "Communication",
      "architectures": [
        "STM32F1"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID",
      "real_name": "USBHID",
      "version": "0.63",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/BootKeyboard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/absmouse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/consumer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/keyboardwithleds",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/mass",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/midiin",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/midiout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/rawhid",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/sdreader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/simplejoystick",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/simplekeyboard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/softjoystick",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/twojoysticks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHID/examples/x360"
      ],
      "provides_includes": [
        "MidiSpecs.h",
        "MinSysex.h",
        "USBComposite.h",
        "USBCompositeSerial.h",
        "USBHID.h",
        "USBMIDI.h",
        "USBMassStorage.h",
        "USBXBox360.h",
        "usb_generic.h",
        "usb_hid.h",
        "usb_mass.h",
        "usb_mass_internal.h",
        "usb_mass_mal.h",
        "usb_midi_device.h",
        "usb_scsi.h",
        "usb_serial.h",
        "usb_x360.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_LPS22HB",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the pressure sensor of your Nano 33 BLE Sense.",
      "website": "http://github.com/arduino-libraries/Arduino_LPS22HB",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LPS22HB",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LPS22HB/src",
      "real_name": "Arduino_LPS22HB",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LPS22HB/examples/ReadPressure",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LPS22HB/examples/ReadPressureImperial"
      ],
      "provides_includes": [
        "Arduino_LPS22HB.h"
      ]
    }
  },
  {
    "library": {
      "name": "SimpleDHT",
      "author": "Winlin \u003cwinlin@vip.126.com\u003e",
      "maintainer": "Winlin \u003cwinlin@vip.126.com\u003e",
      "sentence": "Arduino Temp \u0026 Humidity Sensors for DHT11 and DHT22.",
      "paragraph": "Simple C++ code with lots of comments, strictly follow the standard DHT protocol, supports 0.5HZ(DHT22) or 1HZ(DHT11) sampling rate.",
      "website": "https://github.com/winlinvip/SimpleDHT",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT",
      "real_name": "SimpleDHT",
      "version": "1.0.15",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT11Default",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT11ErrCount",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT11WithRawBits",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT22Default",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT22ErrCount",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT22Integer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/DHT22WithRawBits",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SimpleDHT/examples/TwoSensorsDefault"
      ],
      "provides_includes": [
        "SimpleDHT.h"
      ]
    }
  },
  {
    "library": {
      "name": "U8glib",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "A library for monochrome TFTs and OLEDs",
      "paragraph": "Supported display controller: SSD1306, SSD1309, SSD1322, SSD1325, SSD1327, SH1106, UC1601, UC1610, UC1611, UC1701, ST7565, ST7920, KS0108, LC7981, PCD8544, PCF8812, SBN1661, TLS8204, T6963.",
      "website": "https://github.com/olikraus/u8glib",
      "category": "Display",
      "architectures": [
        "avr",
        "sam"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/src",
      "real_name": "U8glib",
      "version": "1.19.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/A2Printer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Bitmap",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Chess",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Console",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/F",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/FPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/GraphicsTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Menu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/PrintTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Rotation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Scale",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/TextRotX",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Touch4WSetup",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/Touch4WTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/U8gLogo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/U8glib/examples/XBM"
      ],
      "provides_includes": [
        "U8glib.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduboyPlaytune",
      "author": "Len Shustek, Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "A library for playing musical scores and tones that is compatible with the Arduboy game system.",
      "paragraph": "Plays one or two part scores, and tones. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground.",
      "website": "https://github.com/arduboy/ArduboyPlaytune",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduboyPlaytune",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduboyPlaytune/src",
      "real_name": "ArduboyPlaytune",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "ArduboyPlaytune.h"
      ]
    }
  },
  {
    "library": {
      "name": "DallasTemperature",
      "author": "Miles Burton \u003cmiles@mnetcs.com\u003e, Tim Newsome \u003cnuisance@casualhacker.net\u003e, Guil Barros \u003cgfbarros@bappos.com\u003e, Rob Tillaart \u003crob.tillaart@gmail.com\u003e",
      "maintainer": "Miles Burton \u003cmiles@mnetcs.com\u003e",
      "sentence": "Arduino Library for Dallas Temperature ICs",
      "paragraph": "Supports DS18B20, DS18S20, DS1822, DS1820",
      "website": "https://github.com/milesburton/Arduino-Temperature-Control-Library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature",
      "real_name": "DallasTemperature",
      "version": "3.9.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Alarm",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/AlarmHandler",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/ExternalPullup",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Multibus_simple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Multiple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/SaveRecallScratchPad",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/SetUserData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Simple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Single",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Tester",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/Timing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/TwoPin_DS18B20",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/UserDataDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/UserDataWriteBatch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/WaitForConversion",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/WaitForConversion2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/oneWireSearch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DallasTemperature/examples/readPowerSupply"
      ],
      "provides_includes": [
        "DallasTemperature.h"
      ]
    }
  },
  {
    "library": {
      "name": "Watchy",
      "author": "SQFMI",
      "maintainer": "SQFMI",
      "sentence": "Watchy - An Open Source E-Paper Watch by SQFMI",
      "paragraph": "This library contains drivers and code samples for Watchy",
      "website": "https://watchy.sqfmi.com",
      "category": "Other",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/src",
      "real_name": "Watchy",
      "version": "1.3.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/7_SEG",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/DOS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/MacPaint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/Pokemon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/StarryHorizon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Watchy/examples/WatchFaces/Tetris"
      ],
      "provides_includes": [
        "BLE.h",
        "DSEG7_Classic_Bold_53.h",
        "Watchy.h",
        "WatchyRTC.h",
        "bma.h",
        "bma4.h",
        "bma423.h",
        "bma4_defs.h",
        "config.h"
      ]
    }
  },
  {
    "library": {
      "name": "arduino-CAN",
      "author": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "maintainer": "Sandeep Mistry \u003csandeep.mistry@gmail.com\u003e",
      "sentence": "An Arduino library for sending and receiving data using CAN bus.",
      "paragraph": "Supports Microchip MCP2515 based boards/shields and the Espressif ESP32's built-in SJA1000 compatible CAN controller.",
      "website": "https://github.com/sandeepmistry/arduino-CAN",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino-CAN",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/arduino-CAN/src",
      "real_name": "CAN",
      "version": "0.3.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino-CAN/examples/CANReceiver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino-CAN/examples/CANReceiverCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino-CAN/examples/CANSender"
      ],
      "provides_includes": [
        "CAN.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ADXL345",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified driver for the ADXL345 Accelerometer",
      "paragraph": "Unified driver for the ADXL345 Accelerometer",
      "website": "https://github.com/adafruit/Adafruit_ADXL345",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL345",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL345",
      "real_name": "Adafruit ADXL345",
      "version": "1.3.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADXL345/examples/sensortest"
      ],
      "provides_includes": [
        "Adafruit_ADXL345_U.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoGraphics",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Core graphics library for Arduino.",
      "paragraph": "Based on the Processing API.",
      "website": "http://github.com/arduino-libraries/ArduinoGraphics",
      "category": "Display",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoGraphics",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoGraphics/src",
      "real_name": "ArduinoGraphics",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "ArduinoGraphics.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoOTA",
      "author": "Arduino,Juraj Andrassy",
      "maintainer": "Juraj Andrassy \u003cjuraj.andrassy@gmail.com\u003e",
      "sentence": "Upload sketch over network to Arduino board with WiFi or Ethernet libraries",
      "paragraph": "Based on WiFi101OTA library. Uploads over Ethernet, EthernetENC, WiFi101, WiFiNina, WiFiEspAT to SAMD, nRF5, RP2040, STM32F1, ESP and to classic ATmega with more than 64 kB flash memory.",
      "website": "https://github.com/jandrassy/ArduinoOTA",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/src",
      "real_name": "ArduinoOTA",
      "dot_a_linkage": true,
      "version": "1.0.8",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/ATmega_SD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/Advanced/OTASketchDownload",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/Advanced/OTASketchDownloadWifi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/Advanced/OTASketchDownload_SD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/OTEthernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/OTEthernet_SD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/SerialWiFiOTA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/WiFi101_OTA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoOTA/examples/WiFi101_SD_OTA"
      ],
      "provides_includes": [
        "ArduinoOTA.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduboy",
      "author": "Chris J. Martinez, Kevin Bates, Josh Goebel, Scott Allen, Ross O. Shoger",
      "maintainer": "Ross O. Shoger ross@arduboy.com",
      "sentence": "The Arduboy core library.",
      "paragraph": "This library is for content creation on the Arduboy, a portable gaming platform. The library provides access to the sound, display, and input of the Arduboy.",
      "website": "https://github.com/arduboy/arduboy",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy/src",
      "real_name": "Arduboy",
      "version": "1.1.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy/examples/ArduBreakout",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy/examples/Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduboy/examples/Tunes"
      ],
      "provides_includes": [
        "Arduboy.h"
      ]
    }
  },
  {
    "library": {
      "name": "FCGF",
      "author": "Filo Connesso",
      "maintainer": "Mirko Pacioni \u003cmirko.pacioni@outlook.com\u003e",
      "sentence": "Google Form Easy Library for All Wi-Fi Boards and Arduino MRK GSM 1400",
      "paragraph": "Google Form Easy Library for All Wi-Fi Boards and Arduino MRK GSM 1400",
      "website": "https://github.com/filoconnesso/FCGF",
      "category": "Uncategorized",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/src",
      "real_name": "Filo Connesso FCGF",
      "version": "0.0.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/GSM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/LEDCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/NewDelayMinute",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/OplaIoTKit",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/Vanilla",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FCGF/examples/delayMinute"
      ],
      "provides_includes": [
        "FCGF.h"
      ]
    }
  },
  {
    "library": {
      "name": "MIDIUSB",
      "author": "Gary Grewal, Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows an Arduino board with USB capabilites to act as a MIDI instrument over USB.",
      "website": "http://www.arduino.cc/en/Reference/MIDIUSB",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam",
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/src",
      "real_name": "MIDIUSB",
      "version": "1.0.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/examples/MIDIUSB_buzzer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/examples/MIDIUSB_clock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/examples/MIDIUSB_loop",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/examples/MIDIUSB_read",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MIDIUSB/examples/MIDIUSB_write"
      ],
      "provides_includes": [
        "MIDIUSB.h",
        "MIDIUSB_Defs.h",
        "frequencyToNote.h",
        "pitchToFrequency.h",
        "pitchToNote.h"
      ]
    }
  },
  {
    "library": {
      "name": "OneWire",
      "author": "Jim Studt, Tom Pollard, Robin James, Glenn Trewitt, Jason Dangel, Guillermo Lovato, Paul Stoffregen, Scott Roberts, Bertrik Sikken, Mark Tillotson, Ken Butcher, Roger Clark, Love Nystrom",
      "maintainer": "Paul Stoffregen",
      "sentence": "Access 1-wire temperature sensors, memory and other chips.",
      "website": "http://www.pjrc.com/teensy/td_libs_OneWire.html",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire",
      "real_name": "OneWire",
      "version": "2.3.6",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire/examples/DS18x20_Temperature",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire/examples/DS2408_Switch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire/examples/DS250x_PROM"
      ],
      "provides_includes": [
        "OneWire.h"
      ]
    }
  },
  {
    "library": {
      "name": "NeoGPS",
      "author": "SlashDevin",
      "maintainer": "SlashDevin",
      "sentence": "NMEA and ublox GPS parser, configurable to use as few as 10 bytes of RAM",
      "paragraph": "Faster and smaller than all other GPS parsers",
      "website": "https://github.com/SlashDevin/NeoGPS",
      "category": "Communication",
      "architectures": [
        "avr",
        "samd",
        "sam",
        "esp8266",
        "arc32",
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/src",
      "real_name": "NeoGPS",
      "version": "4.2.9",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAGSV",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEASDlog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEA_isr",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAaverage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAbenchmark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAblink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAdiagnostic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAdistance",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAloc",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAlocDMS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAorder",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEArevGeoCache",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAsimple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/NMEAtimezone",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/PGRM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/PUBX",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/SyncTime",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/Tabular",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/ublox",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoGPS/examples/ubloxRate"
      ],
      "provides_includes": [
        "NMEAGPS.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_TouchScreen",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit TouchScreen display library.",
      "paragraph": "Adafruit TouchScreen display library.",
      "website": "https://github.com/adafruit/Adafruit_TouchScreen",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_TouchScreen",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_TouchScreen",
      "real_name": "Adafruit TouchScreen",
      "version": "1.1.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_TouchScreen/examples/touchscreendemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_TouchScreen/examples/touchscreendemoshield"
      ],
      "provides_includes": [
        "TouchScreen.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_VS1053_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "paragraph": "This is a library for the Adafruit VS1053 Codec Breakout and Music Maker Shields",
      "website": "https://github.com/adafruit/Adafruit_VS1053_Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library",
      "real_name": "Adafruit VS1053 Library",
      "version": "1.0.8",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/feather_midi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/feather_player",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/player_gpiotest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/player_interrupts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/player_miditest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/player_simple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VS1053_Library/examples/record_ogg"
      ],
      "provides_includes": [
        "Adafruit_VS1053.h"
      ]
    }
  },
  {
    "library": {
      "name": "MKRRGBMatrix",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to draw on your MKR RGB Matrix shield.",
      "paragraph": "Depends on the ArduinoGraphics library.",
      "website": "http://github.com/arduino-libraries/MKRRGBMatrix",
      "category": "Display",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRRGBMatrix",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MKRRGBMatrix/src",
      "real_name": "MKRRGBMatrix",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRRGBMatrix/examples/ScrollText",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRRGBMatrix/examples/SimpleDraw"
      ],
      "provides_includes": [
        "MKRRGBMatrix.h"
      ]
    }
  },
  {
    "library": {
      "name": "RadioHead",
      "author": "Mike McCauley \u003cmikem@airspayce.com\u003e",
      "maintainer": "Mike McCauley \u003cmikem@airspayce.com\u003e",
      "sentence": "Packet Radio library for embedded microprocessors",
      "paragraph": "Provides a complete object-oriented library for sending and receiving packetized messages via a variety of common data radios and other transports on a range of embedded microprocessors.",
      "website": "https://www.airspayce.com/mikem/arduino/RadioHead/",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead",
      "real_name": "RadioHead",
      "version": "1.113",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/abz/abz_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/abz/abz_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/ask/ask_receiver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/ask/ask_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/ask/ask_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/ask/ask_transmitter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/cc110/cc110_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/cc110/cc110_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/e32/e32_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/e32/e32_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/mrf89/mrf89_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/mrf89/mrf89_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_encrypted_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_encrypted_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf24/nrf24_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_audio_rx",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_audio_tx",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf51/nrf51_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf905/nrf905_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf905/nrf905_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf905/nrf905_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/nrf905/nrf905_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_cw",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_mesh_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_mesh_server1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_mesh_server2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_mesh_server3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_router_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_router_server1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_router_server2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_router_server3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_router_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf22/rf22_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf24/rf24_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf24/rf24_lowpower_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf24/rf24_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf24/rf24_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf24/rf24_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf69/rf69_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf69/rf69_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf69/rf69_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf69/rf69_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_encrypted_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_encrypted_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/rf95/rf95_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/serial/serial_gateway",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/serial/serial_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/serial/serial_reliable_datagram_server",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/simulator/simulator_reliable_datagram_client",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RadioHead/examples/simulator/simulator_reliable_datagram_server"
      ],
      "provides_includes": [
        "RadioHead.h"
      ]
    }
  },
  {
    "library": {
      "name": "MKRNB",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables NB/GRPS network connection using the Arduino MKR NB 1500 board.",
      "paragraph": "This library also allows you to connect to internet through NarrowBand IoT or LTE Cat M1 networks.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/MKRNB",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/src",
      "real_name": "MKRNB",
      "version": "1.5.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/GPRSUdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/NBSSLWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/NBWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/ReceiveSMS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/SendSMS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/ChooseRadioAccessTechnology",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/NBScanNetworks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/PinManagement",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/SerialSARAPassthrough",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/TestGPRS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRNB/examples/Tools/TestModem"
      ],
      "provides_includes": [
        "MKRNB.h"
      ]
    }
  },
  {
    "library": {
      "name": "arduino_846915",
      "author": "Seeed Studio",
      "maintainer": "Seeed Studio \u003ctechsupport@seeed.cc\u003e",
      "sentence": "Arduino library to control Grove 6 Axis Accelerometer\u0026Gyroscope LSM6DS3, LSM6DS3-C.",
      "paragraph": "Arduino library to control Grove 6 Axis Accelerometer\u0026Gyroscope LSM6DS3, LSM6DS3-C.",
      "website": "https://github.com/Seeed-Studio/Accelerometer_And_Gyroscope_LSM6DS3",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915",
      "real_name": "Accelerometer And Gyroscope LSM6DS3",
      "version": "2.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915/examples/FreeFallDetect",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915/examples/HighLevelExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915/examples/LowLevelExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/arduino_846915/examples/Pedometer"
      ],
      "provides_includes": [
        "SparkFunLSM6DS3.h"
      ]
    }
  },
  {
    "library": {
      "name": "ezTime",
      "author": "Rop Gonggrijp",
      "maintainer": "Rop Gonggrijp",
      "sentence": "ezTime - pronounced \"Easy Time\" - is a very easy to use Arduino time and date library that provides NTP network time lookups, extensive timezone support, formatted time and date strings, user events, millisecond precision and more.",
      "paragraph": "See more on https://github.com/ropg/ezTime",
      "website": "https://github.com/ropg/ezTime",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/src",
      "real_name": "ezTime",
      "version": "0.8.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/EthernetShield",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/EventsAndOrdinalTime",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/NoNetwork",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/TimeFormats",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/Timezones",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ezTime/examples/milliseconds"
      ],
      "provides_includes": [
        "ezTime.h"
      ]
    }
  },
  {
    "library": {
      "name": "Joystick",
      "author": "Matthew Heironimus",
      "maintainer": "Matthew Heironimus \u003cheironimus@live.com\u003e",
      "sentence": "Arduino library that allows an Arduino Leonardo, Arduino Micro, or Arudino Due to appear as a Joystick or Gamepad.",
      "paragraph": "This library is built on the PluggableUSB library. It can be used with or without other HID-based libraries (Mouse, Keyboard, etc.).",
      "website": "https://github.com/MHeironimus/ArduinoJoystickLibrary",
      "category": "Device Control",
      "architectures": [
        "avr",
        "sam"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/src",
      "real_name": "Joystick",
      "version": "2.0.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/DrivingControllerTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/FlightControllerTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/GamepadExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/HatSwitchTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/JoystickButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/JoystickKeyboard",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/JoystickTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Joystick/examples/MultipleJoystickTest"
      ],
      "provides_includes": [
        "Joystick.h"
      ]
    }
  },
  {
    "library": {
      "name": "RTCZero",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows to use the RTC functionalities. For Arduino Zero, MKRZero and MKR1000 only.",
      "paragraph": "With this library you can use the RTC peripheral of an Arduino Zero or MKR1000 in order to program actions related to date and time.",
      "website": "http://www.arduino.cc/en/Reference/RTC",
      "category": "Timing",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero/src",
      "real_name": "RTCZero",
      "version": "1.6.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero/examples/Epoch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero/examples/SimpleRTC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero/examples/SimpleRTCAlarm",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/RTCZero/examples/SleepRTCAlarm"
      ],
      "provides_includes": [
        "RTCZero.h"
      ]
    }
  },
  {
    "library": {
      "name": "SHT1x_sensor_library_for_ESPx",
      "author": "beegee_tokyo",
      "maintainer": "beegee_tokyo \u003cbeegee@giesecke.tk\u003e",
      "sentence": "Arduino ESP library for SHT1x Temp \u0026 Humidity Sensors for ESP32",
      "paragraph": "Based on the SHT1x from Vincent Pang, updated to work with ESP32. Provides a simple interface to the SHT1x series (SHT10, SHT11, SHT15) and SHT7x series (SHT71, SHT75) temperature / humidity sensors from Sensirion",
      "website": "http://desire.giesecke.tk/index.php/2018/01/30/esp32-dht11/",
      "category": "Sensors",
      "architectures": [
        "esp8266",
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SHT1x_sensor_library_for_ESPx",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SHT1x_sensor_library_for_ESPx",
      "real_name": "SHT1x sensor library for ESPx",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SHT1x_sensor_library_for_ESPx/examples/ReadSHT1xValues"
      ],
      "provides_includes": [
        "SHT1x-ESP.h"
      ]
    }
  },
  {
    "library": {
      "name": "SmartMatrix3",
      "author": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "maintainer": "Louis Beaudoin \u003clouis@pixelmatix.com\u003e",
      "sentence": "Drive multiplexed RGB matrix panels from your Teensy 3",
      "website": "http://docs.pixelmatix.com/SmartMatrix",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/src",
      "real_name": "SmartMatrix3",
      "version": "3.2.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/Bitmaps",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/FastLED_Functions",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/FastLED_Panel_Plus_APA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/FeatureDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/MatrixClock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/MultipleTextLayers",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SmartMatrix3/examples/SpectrumAnalyzer"
      ],
      "provides_includes": [
        "CircularBuffer.h",
        "Layer.h",
        "Layer_Background.h",
        "Layer_Background_Impl.h",
        "Layer_Indexed.h",
        "Layer_Indexed_Impl.h",
        "Layer_Scrolling.h",
        "Layer_Scrolling_Impl.h",
        "MatrixCommon.h",
        "MatrixFontCommon.h",
        "MatrixHardware_KitV1.h",
        "MatrixHardware_KitV4.h",
        "SmartLEDShieldV4.h",
        "SmartMatrix3.h",
        "SmartMatrix_Impl.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ADS1X15",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for ADS1015/1115 ADCs.",
      "paragraph": "Arduino library for ADS1015/1115 12/16-bit Differential or Single-Ended ADCs with PGA and Comparator",
      "website": "https://github.com/adafruit/Adafruit_ADS1X15",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADS1X15",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADS1X15",
      "real_name": "Adafruit ADS1X15",
      "version": "1.1.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADS1X15/examples/comparator",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADS1X15/examples/differential",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ADS1X15/examples/singleended"
      ],
      "provides_includes": [
        "Adafruit_ADS1015.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_ST7735_and_ST7789_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit ST7735 and ST7789 SPI displays.",
      "paragraph": "This is a library for the Adafruit ST7735 and ST7789 SPI displays.",
      "website": "https://github.com/adafruit/Adafruit-ST7735-Library",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library",
      "real_name": "Adafruit ST7735 and ST7789 Library",
      "version": "1.7.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/displayOnOffTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/graphicstest_hallowing_m0",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/graphicstest_hallowing_m4",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/graphicstest_pybadge_pygamer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/graphicstest_tft_gizmo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/miniTFTWing/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/miniTFTWing/graphicstest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/rotationtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/seesaw_shield18_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_ST7735_and_ST7789_Library/examples/shieldtest"
      ],
      "provides_includes": [
        "Adafruit_ST7735.h",
        "Adafruit_ST7789.h",
        "Adafruit_ST77xx.h"
      ]
    }
  },
  {
    "library": {
      "name": "OSC",
      "author": "Adrian Freed \u003cadrian@adrianfreed.com\u003e, Yotam Mann",
      "maintainer": "Adrian Freed \u003cadrian@adrianfreed.com\u003e",
      "sentence": "Open Sound Control (OSC)",
      "paragraph": "Open Sound Control (OSC) is an open, transport-independent, message-based encoding developed for communication among computers, sound synthesizers, and other multimedia devices.",
      "website": "https://github.com/CNMAT/OSC",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/OSC",
      "real_name": "OSC",
      "version": "1.3.5",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/ESP8266ReceiveBundle",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/ESP8266ReceiveMessage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/ESP8266sendMessage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/OSCEsplora",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/PatternMatching",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialCallResponse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialEcho",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialFubarino",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialOscuinoAdaFruitPlayGroundExpresswithBundles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialOscuinoGemmaM0",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialOscuinowithBundles",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialOscuinowithMessages",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialReceive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialReceivewithServo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialSendBundle",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialSendBundleWithTimeTag",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/SerialSendMessage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPCallResponse",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPEcho",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPOscuino",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPReceive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPSendBundle",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPSendBundlewithTimeTag",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OSC/examples/UDPSendMessage"
      ],
      "provides_includes": [
        "OSCBoards.h",
        "OSCBundle.h",
        "OSCData.h",
        "OSCMatch.h",
        "OSCMessage.h",
        "OSCTiming.h",
        "SLIPEncodedSerial.h",
        "SLIPEncodedUSBSerial.h"
      ]
    }
  },
  {
    "library": {
      "name": "107-Arduino-NMEA-Parser",
      "author": "Alexander Entinger \u003cconsulting@lxrobotics.com\u003e",
      "maintainer": "Alexander Entinger \u003cconsulting@lxrobotics.com\u003e",
      "sentence": "Arduino library for interfacing with any GPS, GLONASS, Galileo or GNSS module and interpreting its NMEA messages.",
      "website": "https://github.com/107-systems/107-Arduino-NMEA-Parser",
      "category": "Communication",
      "architectures": [
        "samd",
        "esp32",
        "mbed",
        "mbed_nano",
        "mbed_portenta",
        "mbed_edge"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/107-Arduino-NMEA-Parser",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/107-Arduino-NMEA-Parser/src",
      "real_name": "107-Arduino-NMEA-Parser",
      "version": "1.1.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/107-Arduino-NMEA-Parser/examples/NMEA-Basic"
      ],
      "provides_includes": [
        "ArduinoNmeaParser.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduboyTones",
      "author": "Scott Allen",
      "maintainer": "Scott Allen \u003csaydisp-git@yahoo.ca\u003e",
      "sentence": "A library for playing a sequence of tones, intended for use with the Arduboy game system.",
      "paragraph": "Plays one or more tones in sequence. Driven by interrupts, so audio plays in the background while the \"real\" program runs in the foreground. Written to minimize code size by specifically targeting the processor and pins of the Arduboy.",
      "website": "https://github.com/MLXXXp/ArduboyTones",
      "category": "Other",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduboyTones",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduboyTones/src",
      "real_name": "ArduboyTones",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduboyTones/examples/ArduboyTonesTest"
      ],
      "provides_includes": [
        "ArduboyTones.h",
        "ArduboyTonesPitches.h"
      ]
    }
  },
  {
    "library": {
      "name": "Bridge",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables the communication between the Linux processor and the microcontroller. For Arduino/Genuino Yún, Yún Shield and TRE only.",
      "paragraph": "The Bridge library feature: access to the shared storage, run and manage linux processes, open a remote console, access to the linux file system, including the SD card, enstablish http clients or servers.",
      "website": "http://www.arduino.cc/en/Reference/YunBridgeLibrary",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/src",
      "real_name": "Bridge",
      "dot_a_linkage": true,
      "version": "1.7.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/Bridge",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/ConsoleAsciiTable",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/ConsolePixel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/ConsoleRead",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/Datalogger",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/FileWriteScript",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/HttpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/HttpClientConsole",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/MailboxReadMessage",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/Process",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/RemoteDueBlink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/ShellCommands",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/TemperatureWebPanel",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/TimeCheck",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/WiFiStatus",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/YunFirstConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Bridge/examples/YunSerialTerminal"
      ],
      "provides_includes": [
        "Bridge.h",
        "BridgeClient.h",
        "BridgeSSLClient.h",
        "BridgeServer.h",
        "BridgeUdp.h",
        "Console.h",
        "FileIO.h",
        "HttpClient.h",
        "Mailbox.h",
        "Process.h",
        "YunClient.h",
        "YunServer.h"
      ]
    }
  },
  {
    "library": {
      "name": "LedControl",
      "author": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "maintainer": "Eberhard Fahle \u003ce.fahle@wayoda.org\u003e",
      "sentence": "A library for the MAX7219 and the MAX7221 Led display drivers.",
      "paragraph": "The library supports multiple daisychained drivers and supports Led-Matrix displays as well as 7-Segment displays.",
      "website": "http://wayoda.github.io/LedControl/",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LedControl",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LedControl/src",
      "real_name": "LedControl",
      "version": "1.0.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LedControl/examples/LCDemo7Segment",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LedControl/examples/LCDemoCascadedDevices",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LedControl/examples/LCDemoMatrix"
      ],
      "provides_includes": [
        "LedControl.h"
      ]
    }
  },
  {
    "library": {
      "name": "TFT",
      "author": "Arduino, Adafruit",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows drawing text, images, and shapes on the Arduino TFT graphical display.",
      "paragraph": "This library is compatible with most of the TFT display based on the ST7735 chipset.",
      "website": "http://www.arduino.cc/en/Reference/TFTLibrary",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/src",
      "real_name": "TFT",
      "version": "1.0.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTBitmapLogo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTColorPicker",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTDisplayText",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTEtchASketch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTGraph",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Arduino/TFTPong",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTBitmapLogo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTColorPicker",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTEtchASketch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTGraph",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTHorizon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTPong",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TFT/examples/Esplora/EsploraTFTTemp"
      ],
      "provides_includes": [
        "TFT.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_VEML6070_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for VEML6070",
      "paragraph": "Arduino library for VEML6070",
      "website": "https://github.com/adafruit/Adafruit_VEML6070",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VEML6070_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VEML6070_Library",
      "real_name": "Adafruit VEML6070 Library",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VEML6070_Library/examples/unittests",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_VEML6070_Library/examples/vemltest"
      ],
      "provides_includes": [
        "Adafruit_VEML6070.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoBearSSL",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Port of BearSSL to Arduino.",
      "paragraph": "This library depends on ArduinoECCX08.",
      "website": "https://github.com/arduino-libraries/ArduinoBearSSL",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/src",
      "real_name": "ArduinoBearSSL",
      "version": "1.7.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/AES128",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/DES",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/MD5",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/MKRGSMSSLClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/SHA1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/SHA256",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/WiFiSSLClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoBearSSL/examples/extras/WiFiSSLClientNoSNI"
      ],
      "provides_includes": [
        "ArduinoBearSSL.h"
      ]
    }
  },
  {
    "library": {
      "name": "Time",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Timekeeping functionality for Arduino",
      "paragraph": "Date and Time functions, with provisions to synchronize to external time sources like GPS and NTP (Internet).  This library is often used together with TimeAlarms and DS1307RTC.",
      "website": "http://playground.arduino.cc/Code/Time/",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Time",
      "real_name": "Time",
      "version": "1.6.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/Processing/SyncArduinoClock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeArduinoDue",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeGPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeNTP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeNTP_ENC28J60",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeNTP_ESP8266WiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeRTC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeRTCLog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeRTCSet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeSerial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeSerialDateStrings",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Time/examples/TimeTeensy3"
      ],
      "provides_includes": [
        "TimeLib.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino-MemoryFree",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino-MemoryFree",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino-MemoryFree",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino-MemoryFree/examples/BareMinimum"
      ],
      "provides_includes": [
        "MemoryFree.h",
        "pgmStrToRAM.h"
      ]
    }
  },
  {
    "library": {
      "name": "QueueArray",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QueueArray",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/QueueArray",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/QueueArray/Examples/ManageString"
      ],
      "provides_includes": [
        "QueueArray.h"
      ]
    }
  },
  {
    "library": {
      "name": "STAMP-PICO",
      "author": "M5Stack",
      "maintainer": "M5Stack",
      "sentence": "Library for STAMP-PICO development kit",
      "paragraph": "See more on http://M5Stack.com",
      "website": "https://github.com/m5stack/STAMP-PICO.git",
      "category": "Device Control",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/src",
      "real_name": "STAMP-PICO",
      "version": "0.0.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/EzData",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/HallSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/I2C_Tester",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/MultiTask",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Storage/Counter",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Storage/EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Storage/SPIFFS/SPIFFS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Storage/SPIFFS/SPIFFS_Add",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Storage/SPIFFS/SPIFFS_Delete",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/Time",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/BasicHttpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/OTAUpload",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiAccessPoint",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiMulti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiScan",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiSetting",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiSmartConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/WiFiTCP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Advanced/WIFI/mDNS_Find",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Basics/ADC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Basics/Button",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Basics/DAC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Basics/IO",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/STAMP-PICO/examples/Basics/LED"
      ],
      "provides_includes": [
        "Arduino.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoCloudThing",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Easly connect your Arduino/Genuino board to the Arduino Cloud",
      "paragraph": "Easly connect your Arduino/Genuino board to the Arduino Cloud",
      "website": "https://github.com/arduino-libraries/ArduinoCloudThing",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoCloudThing",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoCloudThing/src",
      "real_name": "ArduinoCloudThing",
      "version": "1.7.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "ArduinoCloudProperty.h",
        "ArduinoCloudThing.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_APDS9960",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "A library for the APDS-9960 sensor",
      "paragraph": "allows reading gestures, color, and proximity on your Arduino Nano 33 BLE Sense board and other boards with a sensor attached via I2C.",
      "website": "https://github.com/arduino-libraries/Arduino_APDS9960",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960/src",
      "real_name": "Arduino_APDS9960",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960/examples/ColorSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960/examples/FullExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960/examples/GestureSensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_APDS9960/examples/ProximitySensor"
      ],
      "provides_includes": [
        "Arduino_APDS9960.h"
      ]
    }
  },
  {
    "library": {
      "name": "WebSockets",
      "author": "Markus Sattler",
      "maintainer": "Markus Sattler",
      "sentence": "WebSockets for Arduino (Server + Client)",
      "paragraph": "use 2.x.x for ESP and 1.3 for AVR",
      "website": "https://github.com/Links2004/arduinoWebSockets",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/src",
      "real_name": "WebSockets",
      "version": "2.3.6",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/avr/WebSocketClientAVR",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp32/WebSocketClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp32/WebSocketClientSSL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp32/WebSocketClientSocketIOack",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp32/WebSocketServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientOTA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientSSL",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientSSLWithCA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientSocketIO",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientSocketIOack",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientStomp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketClientStompOverSockJs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServerAllFunctionsDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServerFragmentation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServerHooked",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServerHttpHeaderValidation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WebSockets/examples/esp8266/WebSocketServer_LEDcontrol"
      ],
      "provides_includes": [
        "SocketIOclient.h",
        "WebSockets.h",
        "WebSockets4WebServer.h",
        "WebSocketsClient.h",
        "WebSocketsServer.h",
        "WebSocketsVersion.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_MAX31855_library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "paragraph": "Library for the Adafruit Thermocouple breakout with MAX31855K",
      "website": "https://github.com/adafruit/Adafruit-MAX31855-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MAX31855_library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MAX31855_library",
      "real_name": "Adafruit MAX31855 library",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MAX31855_library/examples/lcdthermocouple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_MAX31855_library/examples/serialthermocouple"
      ],
      "provides_includes": [
        "Adafruit_MAX31855.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_BHY2",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Library for BHY2 chip on Nicla Sense ME",
      "paragraph": "Provides the APIs for Nicla Sense ME board to make a DFU or configure/read BHY sensors. All these operations can be done either via Eslov or BLE.",
      "website": "https://github.com/arduino-libraries/Arduino_BHY2",
      "category": "Sensors",
      "architectures": [
        "mbed",
        "mbed_nicla"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/src",
      "real_name": "Arduino_BHY2",
      "version": "1.0.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/examples/App",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/examples/BHYFirmwareUpdate",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/examples/Fail_Safe_flasher",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/examples/ShowSensorList",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_BHY2/examples/Standalone"
      ],
      "provides_includes": [
        "Arduino_BHY2.h"
      ]
    }
  },
  {
    "library": {
      "name": "msTask",
      "author": "maisonsmd",
      "maintainer": "maisonsmd",
      "sentence": "Use hardware Timer1 to run tasks in time preset",
      "paragraph": "create tasks that run automatically in background, easy to use and lightweight. Support AVR chips",
      "website": "https://github.com/maisonsmd/msTask.git",
      "category": "Timing",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/msTask",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/msTask/src",
      "real_name": "msTask",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/msTask/examples/Blink_AnalogRead",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/msTask/examples/FlashLED",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/msTask/examples/TrafficLight"
      ],
      "provides_includes": [
        "msTask.h"
      ]
    }
  },
  {
    "library": {
      "name": "ArduinoIoTCloudBearSSL",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Port of BearSSL to Arduino.",
      "paragraph": "This library depends on ArduinoECCX08.",
      "website": "http://www.arduino.cc/en/Reference/ArduinoBearSSL",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloudBearSSL",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ArduinoIoTCloudBearSSL/src",
      "real_name": "ArduinoIoTCloudBearSSL",
      "version": "1.1.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "ArduinoIoTCloudBearSSL.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MCHPTouch",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "A library for the Atmel touch sensors",
      "paragraph": "allows you to read touch sensor values from your Arduino SAMD boards with touch sensors connected. Microchip Technology Inc., provides the Microchip Touch Library software subject to the license terms contained at the link below.  By using the Microchip Touch Library, you acknowledge and agree to the terms of the license contained at the link below.",
      "website": "https://github.com/arduino-libraries/Arduino_MCHPTouch",
      "category": "Sensors",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MCHPTouch",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MCHPTouch/src",
      "real_name": "Arduino_MCHPTouch",
      "precompiled": true,
      "ld_flags": "-lsamd21_qt_gcc",
      "version": "1.2.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MCHPTouch/examples/ReadSensors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MCHPTouch/examples/setCustomSensitivity"
      ],
      "provides_includes": [
        "Arduino_MCHPTouch.h",
        "DataStreamer.h",
        "touch_api_SAMD.h",
        "touch_config_samd.h"
      ]
    }
  },
  {
    "library": {
      "name": "ColorLCDShield",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ColorLCDShield",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/ColorLCDShield",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ColorLCDShield/Examples/ChronoLCD_Color",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ColorLCDShield/Examples/TestPattern",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/ColorLCDShield/Examples/ZanyCircles"
      ],
      "provides_includes": [
        "ColorLCDShield.h"
      ]
    }
  },
  {
    "library": {
      "name": "Grove_Sunlight_Sensor",
      "author": "Seeed Studio",
      "maintainer": "Seeed Studio \u003ctechsupport@seeed.cc\u003e",
      "sentence": "Arduino library to control Grove - Sunlight Sensor.",
      "paragraph": "Grove - Sunlight Sensor is a multi-channel digital light sensor, which has the ability to detect UV-light, visible light and infrared light. This device is based on SI1145, a new sensor from SiLabs.",
      "website": "https://github.com/Seeed-Studio/Grove_Sunlight_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_Sunlight_Sensor",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_Sunlight_Sensor",
      "real_name": "Grove - Sunlight Sensor",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_Sunlight_Sensor/examples/SI1145DEMO"
      ],
      "provides_includes": [
        "SI114X.h"
      ]
    }
  },
  {
    "library": {
      "name": "FTDebouncer",
      "author": "Ubi de Feo",
      "maintainer": "Ubi de Feo, Sebastian Hunkeler",
      "sentence": "An efficient, low footprint, fast pin debouncing library for Arduino",
      "paragraph": "This pin state supervisor manages debouncing of buttons and handles transitions between LOW and HIGH state, calling a function and notifying your code of which pin has been activated or deactivated.",
      "website": "https://github.com/ubidefeo/FTDebouncer",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FTDebouncer",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/FTDebouncer/src",
      "real_name": "FTDebouncer",
      "version": "1.3.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FTDebouncer/examples/FTDebouncer_demo"
      ],
      "provides_includes": [
        "FTDebouncer.h"
      ]
    }
  },
  {
    "library": {
      "name": "tinySPI",
      "author": "Jack Christensen \u003cjack.christensen@outlook.com\u003e",
      "maintainer": "Jack Christensen \u003cjack.christensen@outlook.com\u003e",
      "sentence": "tinySPI is an Arduino SPI master library for ATtiny24/44/84, 25/45/85, 261/461/861, 2313/4313 MCUs.",
      "paragraph": "tinySPI utilizes the USI hardware in the ATtiny MCUs; it is smaller and significantly faster than shiftOut().",
      "website": "https://github.com/JChristensen/tinySPI",
      "category": "Communication",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/tinySPI",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/tinySPI/src",
      "real_name": "tinySPI",
      "version": "1.1.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/tinySPI/examples/larson_85",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/tinySPI/examples/spi_84",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/tinySPI/examples/spi_85"
      ],
      "provides_includes": [
        "tinySPI.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_DotStarMatrix",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for DotStar grids",
      "paragraph": "Adafruit_GFX-compatible library for DotStar grids",
      "website": "https://github.com/adafruit/Adafruit_DotStarMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStarMatrix",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStarMatrix",
      "real_name": "Adafruit DotStarMatrix",
      "version": "1.0.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStarMatrix/examples/dotstar_wing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStarMatrix/examples/matrixtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_DotStarMatrix/examples/tiletest"
      ],
      "provides_includes": [
        "Adafruit_DotStarMatrix.h",
        "gamma.h"
      ]
    }
  },
  {
    "library": {
      "name": "M5EPD",
      "author": "M5EPD",
      "maintainer": "YiHan Tong \u003ctongyihan@m5stack.com\u003e",
      "sentence": "Library for M5Paper development kit",
      "paragraph": "See more on http://M5Stack.com",
      "website": "https://github.com/m5stack/M5EPD",
      "category": "Device Control",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/src",
      "real_name": "M5EPD",
      "version": "0.1.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/Button",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/DISPLAY_URL_JPG",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/M5EPD_TTF",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/RTC_BM8563",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/RTC_WakeUp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/SHT30",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/TOUCH",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5EPD/examples/Basics/UI_Demo"
      ],
      "provides_includes": [
        "M5EPD.h"
      ]
    }
  },
  {
    "library": {
      "name": "M5ez",
      "author": "Rop Gonggrijp",
      "maintainer": "Rop Gonggrijp",
      "sentence": "Complete interface builder for the M5Stack, an ESP32 based mini tinker-computer",
      "paragraph": "See more on https://github.com/M5ez/M5ez",
      "website": "https://github.com/M5ez/M5ez",
      "category": "Display",
      "architectures": [
        "esp32"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/src",
      "real_name": "M5ez",
      "version": "2.3.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/Hello_World",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/ImagesSPIFFSorSD",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/M5ez-demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/OTA_https",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/SortedMenus",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/SubMenu",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/z-ezTimeLog",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5ez/examples/z-sysInfo"
      ],
      "provides_includes": [
        "M5ez.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_DebugUtils",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Debugging module with different debug levels, timestamps and printf-style output.",
      "paragraph": "This class provides functionality useful for debugging sketches via printf-style statements.",
      "website": "https://github.com/arduino-libraries/Arduino_DebugUtils",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_DebugUtils",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_DebugUtils/src",
      "real_name": "Arduino_DebugUtils",
      "version": "1.1.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_DebugUtils/examples/Arduino_Debug_Advance",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_DebugUtils/examples/Arduino_Debug_Basic"
      ],
      "provides_includes": [
        "Arduino_DebugUtils.h"
      ]
    }
  },
  {
    "library": {
      "name": "FrameSequencer",
      "author": "Ubi de Feo",
      "maintainer": "Ubi de Feo, friend of Arduino",
      "sentence": "Sequence numbers based on timed duration, this library can be used to trigger linearly animated/timed events",
      "paragraph": "High level Library to manage triggered animations, timed events with duration in milliseconds, timed sequences",
      "website": "https://github.com/ubidefeo/FrameSequencer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/FrameSequencer",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/FrameSequencer/src",
      "real_name": "FrameSequencer",
      "version": "0.0.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "provides_includes": [
        "FrameSequencer.h"
      ]
    }
  },
  {
    "library": {
      "name": "LiquidCrystal_I2C",
      "author": "Frank de Brabander",
      "maintainer": "Marco Schwartz \u003cmarcolivier.schwartz@gmail.com\u003e",
      "sentence": "A library for I2C LCD displays.",
      "paragraph": "The library allows to control I2C displays with functions extremely similar to LiquidCrystal library. THIS LIBRARY MIGHT NOT BE COMPATIBLE WITH EXISTING SKETCHES.",
      "website": "https://github.com/marcoschwartz/LiquidCrystal_I2C",
      "category": "Display",
      "architectures": [
        "avr"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_I2C",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_I2C",
      "real_name": "LiquidCrystal I2C",
      "version": "1.1.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_I2C/examples/CustomChars",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_I2C/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LiquidCrystal_I2C/examples/SerialDisplay"
      ],
      "provides_includes": [
        "LiquidCrystal_I2C.h"
      ]
    }
  },
  {
    "library": {
      "name": "WiFi",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables network connection (local and Internet) using the Arduino WiFi shield.",
      "paragraph": "With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks (WEP, WPA). The IP address can be assigned statically or through a DHCP. The library can also manage DNS.",
      "website": "http://www.arduino.cc/en/Reference/WiFi",
      "category": "Communication",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/src",
      "real_name": "WiFi",
      "version": "1.2.7",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/ConnectNoEncryption",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/ConnectWithWEP",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/ConnectWithWPA",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/ScanNetworks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/SimpleWebServerWiFi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiChatServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiUdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiUdpSendReceiveString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiWebClientRepeating",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/WiFi/examples/WiFiWebServer"
      ],
      "provides_includes": [
        "WiFi.h",
        "WiFiClient.h",
        "WiFiServer.h",
        "WiFiUdp.h"
      ]
    }
  },
  {
    "library": {
      "name": "NeoPixelBus_by_Makuna",
      "author": "Michael C. Miller (makuna@live.com)",
      "maintainer": "Michael C. Miller (makuna@live.com)",
      "sentence": "A library that makes controlling NeoPixels (WS2811, WS2812, WS2813 \u0026 SK6812) and DotStars (APA102) easy.",
      "paragraph": "Supports most Arduino platforms, including Esp8266 and Esp32.  Support for RGBW pixels.  Includes seperate RgbColor, RgbwColor, HslColor, and HsbColor objects.  Includes an animator class that helps create asyncronous animations.  Supports Matrix layout of pixels.  Includes Gamma corretion object.  For Esp8266 it has three methods of sending NeoPixel data, DMA, UART, and Bit Bang; and two methods of sending DotStar data, hardware SPI and software SPI.",
      "website": "https://github.com/Makuna/NeoPixelBus/wiki",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/src",
      "real_name": "NeoPixelBus by Makuna",
      "version": "2.4.4",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/DotStarTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/NeoPixelBrightness",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/NeoPixelGamma",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/NeoPixelTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelAnimation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelCylon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelFunFadeInOut",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelFunLoop",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelFunRandomChange",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/animations/NeoPixelRotateLoop",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/bitmaps/NeoPixelBitmap",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/bitmaps/NeoPixelBufferCylon",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/bitmaps/NeoPixelBufferShader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/bitmaps/NeoPixelDibTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelMosaicDump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelMosaicTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelRingTopologyTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelTilesDump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelTilesTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelTopologyDump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NeoPixelBus_by_Makuna/examples/topologies/NeoPixelTopologyTest"
      ],
      "provides_includes": [
        "NeoPixelAnimator.h",
        "NeoPixelBrightnessBus.h",
        "NeoPixelBus.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_Unified_Sensor",
      "author": "Adafruit \u003cinfo@adafruit.com\u003e",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Required for all Adafruit Unified Sensor based libraries.",
      "paragraph": "A unified sensor abstraction layer used by many Adafruit sensor libraries.",
      "website": "https://github.com/adafruit/Adafruit_Sensor",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Unified_Sensor",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Unified_Sensor",
      "real_name": "Adafruit Unified Sensor",
      "version": "1.1.4",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Unified_Sensor/examples/sensortest"
      ],
      "provides_includes": [
        "Adafruit_Sensor.h"
      ]
    }
  },
  {
    "library": {
      "name": "DFRobot_DHT11",
      "author": "DFRobot",
      "maintainer": "Wuxiao \u003cxiao.wu@dfrobot.com\u003e",
      "sentence": "DFRobot Standard library(SKU:DFR0067).",
      "paragraph": "Digital DHT11 Temperature and Humidity sensor.",
      "website": "https://github.com/DFRobot/DFRobot_DHT11",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobot_DHT11",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobot_DHT11",
      "real_name": "DFRobot_DHT11",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobot_DHT11/examples/readDHT11"
      ],
      "provides_includes": [
        "DFRobot_DHT11.h"
      ]
    }
  },
  {
    "library": {
      "name": "Firmata",
      "author": "Firmata Developers",
      "maintainer": "https://github.com/firmata/arduino",
      "sentence": "Enables the communication with computer apps using a standard serial protocol. For all Arduino/Genuino boards.",
      "paragraph": "The Firmata library implements the Firmata protocol for communicating with software on the host computer. This allows you to write custom firmware without having to create your own protocol and objects for the programming environment that you are using.",
      "website": "https://github.com/firmata/arduino",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/utility",
      "real_name": "Firmata",
      "version": "2.5.8",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/AllInputsFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/AnalogFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/EchoString",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/OldStandardFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/ServoFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/SimpleAnalogFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/SimpleDigitalFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmata",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmataBLE",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmataChipKIT",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmataEthernet",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmataPlus",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Firmata/examples/StandardFirmataWiFi"
      ],
      "provides_includes": [
        "Boards.h",
        "Firmata.h",
        "FirmataConstants.h",
        "FirmataDefines.h",
        "FirmataMarshaller.h",
        "FirmataParser.h"
      ]
    }
  },
  {
    "library": {
      "name": "MAX6675_library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "paragraph": "Arduino library for interfacing with MAX6675 thermocouple amplifier",
      "website": "https://github.com/adafruit/MAX6675-library",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MAX6675_library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MAX6675_library",
      "real_name": "MAX6675 library",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MAX6675_library/examples/lcdthermocouple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MAX6675_library/examples/serialthermocouple"
      ],
      "provides_includes": [
        "max6675.h"
      ]
    }
  },
  {
    "library": {
      "name": "AceButton",
      "author": "Brian T. Park \u003cbrian@xparks.net\u003e",
      "maintainer": "Brian T. Park \u003cbrian@xparks.net\u003e",
      "sentence": "An adjustable, compact, event-driven button library that handles debouncing and dispatches events to a user-defined event handler.",
      "paragraph": "Supported events are Pressed, Released, Clicked, DoubleClicked, LongPressed, and RepeatPressed. Timing parameters, event activation, and event suppression can be configured at compile-time or run-time. Optimized for compact memory consumption. Supports buttons connected directly to digital pins, multiple buttons connected to digital pins through a binary encoder, or multiple buttons connected to analog pins through a resistor ladder.",
      "website": "https://github.com/bxparks/AceButton",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/src",
      "real_name": "AceButton",
      "version": "1.9.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ArrayButtons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/AutoBenchmark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/CapacitiveButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ClickVersusDoubleClickUsingBoth",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ClickVersusDoubleClickUsingReleased",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ClickVersusDoubleClickUsingSuppression",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/Encoded16To4Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/Encoded4To2Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/Encoded8To3Buttons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/HelloButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/LadderButtonCalibrator",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/LadderButtons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/LadderButtonsTiny",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/MemoryBenchmark",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/PressVersusLongPress",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/SimultaneousButtons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/SingleButton",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/SingleButtonFast",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/SingleButtonPullDown",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/SingleButtonUsingIEventHandler",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/Stopwatch",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ThreeButtonsUsingOneButtonConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/ThreeButtonsUsingOneButtonConfigFast",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/TunerButtons",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/TwoButtonsUsingOneButtonConfig",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/TwoButtonsUsingOneButtonConfigFast",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/AceButton/examples/TwoButtonsUsingTwoButtonConfigs"
      ],
      "provides_includes": [
        "AceButton.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_NeoMatrix",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Adafruit_GFX-compatible library for NeoPixel grids",
      "paragraph": "Adafruit_GFX-compatible library for NeoPixel grids",
      "website": "https://github.com/adafruit/Adafruit_NeoMatrix",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoMatrix",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoMatrix",
      "real_name": "Adafruit NeoMatrix",
      "version": "1.1.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoMatrix/examples/matrixtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_NeoMatrix/examples/tiletest"
      ],
      "provides_includes": [
        "Adafruit_NeoMatrix.h",
        "gamma.h"
      ]
    }
  },
  {
    "library": {
      "name": "TinyMPU6050",
      "author": "Gabriel Milan \u003cgabriel.gazola@poli.ufrj.br\u003e",
      "maintainer": "Gabriel Milan \u003cgabriel.gazola@poli.ufrj.br\u003e",
      "sentence": "Tiny implementation for MPU6050 focusing on performance and accuracy",
      "paragraph": "Inspired by tockn library simplicity and ease of use, this implementation focuses on performance and accuracy while still being lightweight.",
      "website": "https://github.com/gabriel-milan/TinyMPU6050",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyMPU6050",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/TinyMPU6050/src",
      "real_name": "TinyMPU6050",
      "version": "0.5.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyMPU6050/examples/ArduinoIDE_All_Gets_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/TinyMPU6050/examples/ArduinoIDE_Angles_Example"
      ],
      "provides_includes": [
        "TinyMPU6050.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_LSM6DS3",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the accelerometer and gyroscope values from the LSM6DS3 IMU on your Arduino Nano 33 IoT or Arduino Uno WiFi Rev2 boards.",
      "website": "https://www.arduino.cc/en/Reference/Arduino_LSM6DS3",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM6DS3",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM6DS3/src",
      "real_name": "Arduino_LSM6DS3",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM6DS3/examples/SimpleAccelerometer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_LSM6DS3/examples/SimpleGyroscope"
      ],
      "provides_includes": [
        "Arduino_LSM6DS3.h"
      ]
    }
  },
  {
    "library": {
      "name": "DFRobotDFPlayerMini",
      "author": "DFRobot",
      "maintainer": "Angelo \u003cangelo.qiao@dfrobot.com\u003e",
      "sentence": "Driver for DFPlayer Mini from DFRobot",
      "paragraph": "Easy-to-use and reliable library for DFPlayer Mini",
      "website": "https://github.com/DFRobot/DFRobotDFPlayerMini",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini",
      "real_name": "DFRobotDFPlayerMini",
      "version": "1.0.5",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/AdvancedSettingViaSerial1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutACK",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/AdvancedSettingWithoutReset",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/FullFunction",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/GetStarted",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DFRobotDFPlayerMini/examples/ReadValues"
      ],
      "provides_includes": [
        "DFRobotDFPlayerMini.h"
      ]
    }
  },
  {
    "library": {
      "name": "Grove_4-Digit_Display",
      "author": "Seeed Studio",
      "maintainer": "Seeed Studio \u003ctechsupport@seeed.cc\u003e",
      "sentence": "Arduino library to control Grove_4Digital_Display TM1637.",
      "paragraph": "4 digit display module is usually a 12 pin module. In this Grove gadget, we utilize a TM1637 to scale down the controlling pins into 2 Grove pins. It only takes 2 digital pins of Arduino or Seeeduino to control the content, even the luminance of this display. For projects that require of alpha-numeric display, this can be a nice choice.",
      "website": "https://github.com/Seeed-Studio/Grove_4Digital_Display",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_4-Digit_Display",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_4-Digit_Display",
      "real_name": "Grove 4-Digit Display",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_4-Digit_Display/examples/ClockDisplay",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_4-Digit_Display/examples/NumberFlow",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Grove_4-Digit_Display/examples/Stopwatch"
      ],
      "provides_includes": [
        "TM1637.h"
      ]
    }
  },
  {
    "library": {
      "name": "MFRC522",
      "author": "GithubCommunity",
      "maintainer": "GithubCommunity",
      "sentence": "Arduino RFID Library for MFRC522 (SPI)",
      "paragraph": "Read/Write a RFID Card or Tag using the ISO/IEC 14443A/MIFARE interface.",
      "website": "https://github.com/miguelbalboa/rfid",
      "category": "Communication",
      "architectures": [
        "avr",
        "megaavr",
        "STM32F1",
        "teensy",
        "esp8266",
        "esp32",
        "samd",
        "atmelsam"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/src",
      "real_name": "MFRC522",
      "version": "1.4.10",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/ChangeUID",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/DumpInfo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/FixBrickedUID",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/MifareClassicValueBlock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/MinimalInterrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/Ntag216_AUTH",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/RFID-Cloner",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/ReadAndWrite",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/ReadNUID",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/ReadUidMultiReader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/firmware_check",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/rfid_default_keys",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/rfid_read_personal_data",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MFRC522/examples/rfid_write_personal_data"
      ],
      "provides_includes": [
        "MFRC522.h",
        "MFRC522Extended.h",
        "deprecated.h",
        "require_cpp11.h"
      ]
    }
  },
  {
    "library": {
      "name": "LPS",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu LPS25H and LPS331AP boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with ST LPS25H and LPS331AP pressure sensors on Pololu boards.",
      "website": "https://github.com/pololu/lps-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPS",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LPS",
      "real_name": "LPS",
      "version": "3.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPS/examples/SerialMetric",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LPS/examples/SerialUS"
      ],
      "provides_includes": [
        "LPS.h"
      ]
    }
  },
  {
    "library": {
      "name": "LSM303",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "Arduino library for Pololu LSM303 boards",
      "paragraph": "This is a library for an Arduino-compatible controller that interfaces with LSM303D, LSM303DLHC, LSM303DLM, and LSM303DLH 3D compass and accelerometer ICs on Pololu boards.",
      "website": "https://github.com/pololu/lsm303-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM303",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LSM303",
      "real_name": "LSM303",
      "version": "3.0.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM303/examples/Calibrate",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM303/examples/Heading",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM303/examples/Serial"
      ],
      "provides_includes": [
        "LSM303.h"
      ]
    }
  },
  {
    "library": {
      "name": "SSD1306Ascii",
      "author": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "maintainer": "Bill Greiman \u003cfat16lib@sbcglobal.net\u003e",
      "sentence": "Text display on small momochrome OLED modules.",
      "paragraph": "A basic SSD1306 text only library optimized for minimum memory usage.",
      "website": "https://github.com/greiman/SSD1306Ascii",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/src",
      "real_name": "SSD1306Ascii",
      "version": "1.3.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/AvrI2c128x32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/AvrI2c128x64",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/DisplayRotationSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/DisplayRotationWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/FontSamplesSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/FontSamplesWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/HelloWorldAvrI2c",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/HelloWorldSH1106Spi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/HelloWorldSoftSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/HelloWorldSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/HelloWorldWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/InvertTextSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/InvertTextWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/LetterSpacingSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/LetterSpacingWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/ProportionalFormSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/ProportionalFormWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/ScrollingSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/ScrollingWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SixAdcFieldsSpi",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SixAdcFieldsWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SlowScrollWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SmoothScrollWire",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SoftSpi128x32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/SoftSpi128x64",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Spi128x32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Spi128x64",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Spi128x64SH1106",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/TickerAdcDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/TickerTextDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Wire128x32",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Wire128x64",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/Wire128x64SH1106",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/cmp5x7Fonts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/SSD1306Ascii/examples/print5x7Fonts"
      ],
      "provides_includes": [
        "SSD1306Ascii.h",
        "SSD1306AsciiAvrI2c.h",
        "SSD1306AsciiSoftSpi.h",
        "SSD1306AsciiSpi.h",
        "SSD1306AsciiWire.h",
        "SSD1306init.h"
      ]
    }
  },
  {
    "library": {
      "name": "Stepper",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows Arduino boards to control a variety of stepper motors.",
      "paragraph": "This library allows you to control unipolar or bipolar stepper motors. To use it you will need a stepper motor, and the appropriate hardware to control it.",
      "website": "http://www.arduino.cc/en/Reference/Stepper",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper/src",
      "real_name": "Stepper",
      "version": "1.1.3",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper/examples/MotorKnob",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper/examples/stepper_oneRevolution",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper/examples/stepper_oneStepAtATime",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Stepper/examples/stepper_speedControl"
      ],
      "provides_includes": [
        "Stepper.h"
      ]
    }
  },
  {
    "library": {
      "name": "Accessories",
      "author": "Thierry Paris - Locoduino",
      "maintainer": "Thierry Paris - Locoduino",
      "sentence": "This is a library for Arduino to handle accessories like lights, motors.",
      "paragraph": "This library can handle coil motors, stepper motors, lights, servos.",
      "website": "https://github.com/Locoduino/Accessories",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/src",
      "real_name": "Accessories",
      "version": "1.2.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/74HC595",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/CANCommander",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Full",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Group",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/LMD18200",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/LightFading",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Locoduino.org/Programme1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Locoduino.org/Programme2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Locoduino.org/Programme4",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Locoduino.org/Programme5",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/SX1509",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Sequencers",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Servos",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/SignalFrench",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Signals4x3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/SimpleLed",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/SimpleLedMulti",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Accessories/examples/Stepper"
      ],
      "provides_includes": [
        "AFMotor.hpp",
        "Accessories.h",
        "Accessories.hpp",
        "AccessoriesCircularBuffer.hpp",
        "Accessory.hpp",
        "AccessoryBaseLight.hpp",
        "AccessoryGroup.hpp",
        "AccessoryLight.hpp",
        "AccessoryLightMulti.hpp",
        "AccessoryMotor.hpp",
        "AccessoryMotorOneWay.hpp",
        "AccessoryMotorTwoWays.hpp",
        "AccessoryServo.hpp",
        "AccessoryStepper.hpp",
        "ActionsStack.hpp",
        "Chain.hpp",
        "LocoStepper.h",
        "Port.hpp",
        "PortExpander.hpp",
        "PortExpander74HC595.hpp",
        "PortExpanderSX1509.hpp",
        "PortOnePin.hpp",
        "PortServo.hpp",
        "PortShieldL293d.hpp",
        "PortSpeedDirBrake.hpp",
        "PortStepper.hpp",
        "PortTwoPins.hpp",
        "PortTwoPinsEnable.hpp"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_Thermal_Printer_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino Library for Small Thermal Printers",
      "paragraph": "Arduino Library for Small Thermal Printers",
      "website": "https://github.com/adafruit/Adafruit-Thermal-Printer-Library",
      "category": "Device Control",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Thermal_Printer_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Thermal_Printer_Library",
      "real_name": "Adafruit Thermal Printer Library",
      "version": "1.1.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Thermal_Printer_Library/examples/A_printertest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Thermal_Printer_Library/examples/B_charsets",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_Thermal_Printer_Library/examples/C_barcodes"
      ],
      "provides_includes": [
        "Adafruit_Thermal.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_seesaw_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit seesaw helper IC.",
      "paragraph": "This is a library for the Adafruit seesaw helper IC.",
      "website": "https://github.com/adafruit/Adafruit_Seesaw",
      "category": "Other",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library",
      "real_name": "Adafruit seesaw Library",
      "version": "1.4.5",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/cap_touch_demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/drive/more_drivers",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/drive/test_drive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/fulltest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/motor/dual_motor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/servo/more_servos",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/servo/test_servo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/Crickit/signal/test_signal",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/EEPROM",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoKey_1x4/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoKey_1x4/basic_callback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoKey_1x4/basic_multikey",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoKey_1x4/basic_neoswirl",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoPixel/NeoPixel_strandtest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoTrellis/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoTrellis/interrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoTrellis/multitrellis/basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoTrellis/pattern_game",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/NeoTrellis/ripples",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/analog/Fade",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/analog/analogRead",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/communication/UART_loopback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/digital/blink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/digital/gpio_interrupts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/digital/multiblink",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/digital/multiread",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/encoder/encoder_basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/encoder/multiple_encoders",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/joy_featherwing/joy_featherwing_example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/joy_featherwing/joy_wing_oled",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_seesaw_Library/examples/soil_sensor/soilsensor_example"
      ],
      "provides_includes": [
        "Adafruit_Crickit.h",
        "Adafruit_NeoKey_1x4.h",
        "Adafruit_NeoTrellis.h",
        "Adafruit_TFTShield18.h",
        "Adafruit_miniTFTWing.h",
        "Adafruit_seesaw.h",
        "seesaw_motor.h",
        "seesaw_neopixel.h",
        "seesaw_servo.h"
      ]
    }
  },
  {
    "library": {
      "name": "Arduino_MKRENV",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows you to read the temperature, humidity, pressure, light and UV sensors of your MKR ENV Shield.",
      "website": "http://github.com/arduino-libraries/Arduino_MKRENV",
      "category": "Sensors",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRENV",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRENV/src",
      "real_name": "Arduino_MKRENV",
      "version": "1.2.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRENV/examples/ReadSensors",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Arduino_MKRENV/examples/ReadSensorsImperial"
      ],
      "provides_includes": [
        "Arduino_MKRENV.h"
      ]
    }
  },
  {
    "library": {
      "name": "aJson",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/aJson",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/aJson",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/aJson/utility",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/aJson/Examples/Json_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/aJson/Examples/Json_Serial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/aJson/Examples/MultiLevelParsing"
      ],
      "provides_includes": [
        "aJSON.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_LSM303DLHC",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "paragraph": "Unified sensor driver for Adafruit's LSM303 Breakout (Accelerometer + Magnetometer)",
      "website": "https://github.com/adafruit/Adafruit_LSM303DLHC",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LSM303DLHC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LSM303DLHC",
      "real_name": "Adafruit LSM303DLHC",
      "version": "1.0.3",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LSM303DLHC/examples/accelsensor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LSM303DLHC/examples/deprecated/Test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_LSM303DLHC/examples/magsensor"
      ],
      "provides_includes": [
        "Adafruit_LSM303.h",
        "Adafruit_LSM303_U.h"
      ]
    }
  },
  {
    "library": {
      "name": "GxEPD2",
      "author": "Jean-Marc Zingg",
      "maintainer": "Jean-Marc Zingg",
      "sentence": "Arduino Display Library for SPI E-Paper displays from Dalian Good Display and Waveshare.",
      "paragraph": "Requires HW SPI and Adafruit_GFX. Caution: the bare e-paper panels require 3.3V supply AND data lines!",
      "website": "https://github.com/ZinggJM/GxEPD2",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/src",
      "real_name": "GxEPD2",
      "version": "1.4.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_GFX_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_MinimumExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_MultiDisplayExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_NotPagedExample",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_PagedDisplayUsingCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_RotaryUsingBusyCallback",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_SD_AVR_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_SD_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_SD_WriteBitmap",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_SerialFlash_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_SerialFlash_Loader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_Spiffs_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_Spiffs_Loader",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_U8G2_Fonts_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_WS_ESP32_Driver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2_WiFi_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2x_FastBlackWhiteOnColor",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/GxEPD2/examples/GxEPD2x_MixedTest"
      ],
      "provides_includes": [
        "GxEPD2.h",
        "GxEPD2_3C.h",
        "GxEPD2_7C.h",
        "GxEPD2_BW.h",
        "GxEPD2_EPD.h",
        "GxEPD2_GFX.h"
      ]
    }
  },
  {
    "library": {
      "name": "CapacitiveSensorDue",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensorDue",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensorDue",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/CapacitiveSensorDue/examples/CapacitiveSensorDueSketch"
      ],
      "provides_includes": [
        "CapacitiveSensorDue.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_CCS811_Library",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "This is a library for the Adafruit CCS811 I2C gas sensor breakout.",
      "paragraph": "CCS811 is a gas sensor that can detect a wide range of Volatile Organic Compounds (VOCs) and is intended for indoor air quality monitoring.",
      "website": "https://github.com/adafruit/Adafruit_CCS811",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_CCS811_Library",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_CCS811_Library",
      "real_name": "Adafruit CCS811 Library",
      "version": "1.0.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_CCS811_Library/examples/CCS811_OLED_Demo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_CCS811_Library/examples/CCS811_test"
      ],
      "provides_includes": [
        "Adafruit_CCS811.h"
      ]
    }
  },
  {
    "library": {
      "name": "LSM6",
      "author": "Pololu",
      "maintainer": "Pololu \u003cinbox@pololu.com\u003e",
      "sentence": "LSM6 accelerometer and gyro library",
      "paragraph": "This is a library for the Arduino IDE that helps interface with ST's LSM6DS33 accelerometer and gyro.",
      "website": "https://github.com/pololu/lsm6-arduino",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM6",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/LSM6",
      "real_name": "LSM6",
      "version": "1.0.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/LSM6/examples/Serial"
      ],
      "provides_includes": [
        "LSM6.h"
      ]
    }
  },
  {
    "library": {
      "name": "NTPClient",
      "author": "Fabrice Weinberg",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/arduino-libraries/NTPClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NTPClient",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/NTPClient",
      "real_name": "NTPClient",
      "version": "3.2.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NTPClient/examples/Advanced",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/NTPClient/examples/Basic"
      ],
      "provides_includes": [
        "NTPClient.h"
      ]
    },
    "release": {
      "author": "Fabrice Weinberg",
      "version": "3.2.1",
      "maintainer": "Fabrice Weinberg \u003cfabrice@weinberg.me\u003e",
      "sentence": "An NTPClient to connect to a time server",
      "paragraph": "Get time from a NTP server and keep it in sync.",
      "website": "https://github.com/arduino-libraries/NTPClient",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "types": [
        "Arduino"
      ]
    }
  },
  {
    "library": {
      "name": "MKRGSM",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Enables GSM/GRPS network connection using the Arduino MKR GSM 1400 board.",
      "paragraph": "Use this library to make/receive voice calls, to send and receive SMS with the u-blox SARA-U201 module.\u003c/br\u003eThis library also allows you to connect to internet through the GPRS networks. You can either use web Clients and Servers.\u003c/br\u003e",
      "website": "http://www.arduino.cc/en/Reference/MKRGSM",
      "category": "Communication",
      "architectures": [
        "samd"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/src",
      "real_name": "MKRGSM",
      "version": "1.5.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GPRSPing",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GPRSUdpNtpClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GsmLocation",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GsmSSLWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GsmWebClient",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/GsmWebServer",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/MakeVoiceCall",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/ReceiveSMS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/ReceiveVoiceCall",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/SSLCertificateManagement_Example",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/SendSMS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/BandManagement",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/ChooseRadioAccessTechnology",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/FileUtilsHttpDownload",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/FileUtilsJsonFile",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/FileUtilsReadBlock",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/GsmScanNetworks",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/PinManagement",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/SerialGSMPassthrough",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/TestGPRS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/TestModem",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/MKRGSM/examples/Tools/TestWebServer"
      ],
      "provides_includes": [
        "MKRGSM.h"
      ]
    }
  },
  {
    "library": {
      "name": "Timer",
      "author": "Stefan Staub",
      "maintainer": "Stefan Staub \u003cemail@domain.com\u003e",
      "sentence": "A library for creating start / stop Timers",
      "paragraph": "Small library for measuring elapsed time between start and stop command",
      "website": "https://github.com/sstaub/Timer",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Timer",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Timer",
      "real_name": "Timer",
      "version": "1.2.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Timer/examples/Timer"
      ],
      "provides_includes": [
        "Timer.h"
      ]
    }
  },
  {
    "library": {
      "name": "OneWire_RFDuino",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire_RFDuino",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/OneWire_RFDuino",
      "is_legacy": true,
      "location": 1,
      "provides_includes": [
        "OneWire.h"
      ]
    }
  },
  {
    "library": {
      "name": "Ucglib",
      "author": "oliver \u003colikraus@gmail.com\u003e",
      "maintainer": "oliver \u003colikraus@gmail.com\u003e",
      "sentence": "True color TFT and OLED library, Up to 18 Bit color depth. Supported display controller: ST7735, ILI9163, ILI9325, ILI9341, ILI9486,LD50T6160, PCF8833, SEPS225, SSD1331, SSD1351, HX8352C.",
      "paragraph": "True color TFT and OLED library, Up to 18 Bit color depth. Supported display controller: ST7735, ILI9163, ILI9325, ILI9341, ILI9486,LD50T6160, PCF8833, SEPS225, SSD1331, SSD1351, HX8352C.",
      "website": "https://github.com/olikraus/ucglib",
      "category": "Display",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/src",
      "real_name": "Ucglib",
      "version": "1.5.2",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/Box3D",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/FPS",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/GraphicsTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/HelloWorld",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/HowToUseFonts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/PowerDown",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/Scale",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Ucglib/examples/UcgLogo"
      ],
      "provides_includes": [
        "Ucglib.h"
      ]
    }
  },
  {
    "library": {
      "name": "Adafruit_AHT10",
      "author": "Adafruit",
      "maintainer": "Adafruit \u003cinfo@adafruit.com\u003e",
      "sentence": "Arduino library for the AHT10 sensors in the Adafruit shop",
      "paragraph": "Arduino library for the AHT10 sensors in the Adafruit shop",
      "website": "https://github.com/adafruit/Adafruit_AHT10",
      "category": "Sensors",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_AHT10",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_AHT10",
      "real_name": "Adafruit AHT10",
      "version": "0.1.0",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_AHT10/examples/adafruit_aht10_test",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Adafruit_AHT10/examples/adafruit_aht10_unifiedsensors"
      ],
      "provides_includes": [
        "Adafruit_AHT10.h"
      ]
    }
  },
  {
    "library": {
      "name": "DS1307RTC",
      "author": "Michael Margolis",
      "maintainer": "Paul Stoffregen",
      "sentence": "Use a DS1307 Real Time Clock chip with the Time library",
      "website": "http://playground.arduino.cc/code/time",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS1307RTC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DS1307RTC",
      "real_name": "DS1307RTC",
      "version": "1.4.1",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS1307RTC/examples/ReadTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS1307RTC/examples/SetTime"
      ],
      "provides_includes": [
        "DS1307RTC.h"
      ]
    }
  },
  {
    "library": {
      "name": "DS3232RTC",
      "author": "Jack Christensen \u003cjack.christensen@outlook.com\u003e",
      "maintainer": "Jack Christensen \u003cjack.christensen@outlook.com\u003e",
      "sentence": "Arduino Library for Maxim Integrated DS3232 and DS3231 Real-Time Clocks.",
      "paragraph": "Copyright (C) 2017-2022 by Jack Christensen and licensed under GNU GPL v3.0. See README file for important information regarding compatibility with earlier versions.",
      "website": "https://github.com/JChristensen/DS3232RTC",
      "category": "Timing",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/src",
      "real_name": "DS3232RTC",
      "version": "2.0.0",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/SetSerial",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/TimeRTC",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex1",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex10",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex2",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex3",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex4",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex5",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex6",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex7",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex8",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/alarm_ex9",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/mcu_clock_drift",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/rtcTimeTemp",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/rtc_interrupt",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/rtc_temperature",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/DS3232RTC/examples/tiny3232_KnockBang"
      ],
      "provides_includes": [
        "DS3232RTC.h"
      ]
    }
  },
  {
    "library": {
      "name": "Encoder",
      "author": "Paul Stoffregen",
      "maintainer": "Paul Stoffregen",
      "sentence": "Counts quadrature pulses from rotary \u0026 linear position encoders.",
      "paragraph": "Encoder counts pulses from quadrature encoded signals, which are commonly available from rotary knobs, motor or shaft sensors and other position sensors.",
      "website": "http://www.pjrc.com/teensy/td_libs_Encoder.html",
      "category": "Signal Input/Output",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder",
      "utility_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder/utility",
      "real_name": "Encoder",
      "version": "1.4.2",
      "license": "Unspecified",
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder/examples/Basic",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder/examples/NoInterrupts",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder/examples/SpeedTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/Encoder/examples/TwoKnobs"
      ],
      "provides_includes": [
        "Encoder.h"
      ]
    }
  },
  {
    "library": {
      "name": "USBHost",
      "author": "Arduino",
      "maintainer": "Arduino \u003cinfo@arduino.cc\u003e",
      "sentence": "Allows the communication with USB peripherals like mice, keyboards, and thumbdrives.",
      "paragraph": "The USBHost library allows an Arduino Due board to appear as a USB host, enabling it to communicate with peripherals like USB mice and keyboards. USBHost does not support devices that are connected through USB hubs. This includes some keyboards that have an internal hub.",
      "website": "http://www.arduino.cc/en/Reference/USBHost",
      "category": "Device Control",
      "architectures": [
        "sam"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHost",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/USBHost/src",
      "real_name": "USBHost",
      "version": "1.0.5",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHost/examples/ADKTerminalTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHost/examples/KeyboardController",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/USBHost/examples/MouseController"
      ],
      "provides_includes": [
        "KeyboardController.h",
        "MouseController.h",
        "Usb.h",
        "address.h",
        "adk.h",
        "confdescparser.h",
        "hid.h",
        "hidboot.h",
        "hidusagestr.h",
        "parsetools.h",
        "usb_ch9.h"
      ]
    }
  },
  {
    "library": {
      "name": "IRremote",
      "author": "shirriff, z3t0, ArminJo",
      "maintainer": "Armin Joachimsmeyer \u003carmin.arduino@gmail.com\u003e",
      "sentence": "Send and receive infrared signals with multiple protocols",
      "paragraph": "Currently included protocols: Denon / Sharp, JVC, LG / LG2,  NEC / Onkyo / Apple, Panasonic / Kaseikyo, RC5, RC6, Samsung, Sony, (Pronto), BoseWave, Lego, Whynter, MagiQuest.\u003cbr/\u003e\u003cbr/\u003e\u003cb\u003eNew: \u003c/b\u003eRP2040 support and major refactoring of IRTimer.hpp. Switched Bose timing for 0 and 1.\u003cbr/\u003e\u003ca href=\"https://github.com/Arduino-IRremote/Arduino-IRremote/blob/master/changelog.md\"\u003eRelease notes\u003c/a\u003e\u003cbr/\u003e",
      "website": "https://github.com/Arduino-IRremote/Arduino-IRremote",
      "category": "Communication",
      "architectures": [
        "avr",
        "megaavr",
        "samd",
        "esp8266",
        "esp32",
        "stm32",
        "STM32F1",
        "mbed",
        "mbed_nano",
        "rp2040"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/src",
      "real_name": "IRremote",
      "version": "3.6.1",
      "license": "Unspecified",
      "location": 1,
      "layout": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ControlRelay",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/IRDispatcherDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/IRremoteExtensionTest",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/IRremoteInfo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/MicroGirs",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/MinimalReceiver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ReceiveAndSend",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ReceiveDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ReceiveDump",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ReceiveOneAndSendMultiple",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/ReceiverTimingAnalysis",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendAndReceive",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendBoseWaveDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendLGAirConditionerDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendProntoDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SendRawDemo",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SimpleReceiver",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/SimpleSender",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/IRremote/examples/UnitTest"
      ],
      "provides_includes": [
        "IRremote.hpp"
      ]
    }
  },
  {
    "library": {
      "name": "M5_UI",
      "architectures": [
        "*"
      ],
      "install_dir": "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI",
      "source_dir": "/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI",
      "is_legacy": true,
      "location": 1,
      "examples": [
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI/examples/Example-1_Morse_Inputbox-Textbox",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI/examples/Example-2_Bruteforce_Waitingbar",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI/examples/Example-3_BatteryCheck_Progressbar",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI/examples/Example-4_LEDshift_Selectbox",
        "/Users/ubidefeo/data/Dropbox/AppsDocuments/Arduino/libraries/M5_UI/examples/Example-5_SmartDrill_Rangebox-Checkbox-Button"
      ],
      "provides_includes": [
        "M5_UI.h"
      ]
    }
  }
]
