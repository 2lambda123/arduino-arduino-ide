/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.arduino.InstalledPlatform', null, global);
goog.exportSymbol('proto.arduino.PlatformDownloadReq', null, global);
goog.exportSymbol('proto.arduino.PlatformDownloadResp', null, global);
goog.exportSymbol('proto.arduino.PlatformInstallReq', null, global);
goog.exportSymbol('proto.arduino.PlatformInstallResp', null, global);
goog.exportSymbol('proto.arduino.PlatformListReq', null, global);
goog.exportSymbol('proto.arduino.PlatformListResp', null, global);
goog.exportSymbol('proto.arduino.PlatformSearchReq', null, global);
goog.exportSymbol('proto.arduino.PlatformSearchResp', null, global);
goog.exportSymbol('proto.arduino.PlatformUninstallReq', null, global);
goog.exportSymbol('proto.arduino.PlatformUninstallResp', null, global);
goog.exportSymbol('proto.arduino.PlatformUpgradeReq', null, global);
goog.exportSymbol('proto.arduino.PlatformUpgradeResp', null, global);
goog.exportSymbol('proto.arduino.SearchOutput', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformInstallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformInstallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformInstallReq.displayName = 'proto.arduino.PlatformInstallReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformInstallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformInstallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformInstallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformInstallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    platformPackage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    architecture: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformInstallReq}
 */
proto.arduino.PlatformInstallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformInstallReq;
  return proto.arduino.PlatformInstallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformInstallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformInstallReq}
 */
proto.arduino.PlatformInstallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArchitecture(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformInstallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformInstallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformInstallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformInstallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getPlatformPackage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchitecture();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformInstallReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformInstallReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformInstallReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformInstallReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string platform_package = 2;
 * @return {string}
 */
proto.arduino.PlatformInstallReq.prototype.getPlatformPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.PlatformInstallReq.prototype.setPlatformPackage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string architecture = 3;
 * @return {string}
 */
proto.arduino.PlatformInstallReq.prototype.getArchitecture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.PlatformInstallReq.prototype.setArchitecture = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.arduino.PlatformInstallReq.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.arduino.PlatformInstallReq.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformInstallResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformInstallResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformInstallResp.displayName = 'proto.arduino.PlatformInstallResp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformInstallResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformInstallResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformInstallResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformInstallResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    progress: (f = msg.getProgress()) && common_pb.DownloadProgress.toObject(includeInstance, f),
    taskProgress: (f = msg.getTaskProgress()) && common_pb.TaskProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformInstallResp}
 */
proto.arduino.PlatformInstallResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformInstallResp;
  return proto.arduino.PlatformInstallResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformInstallResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformInstallResp}
 */
proto.arduino.PlatformInstallResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.DownloadProgress;
      reader.readMessage(value,common_pb.DownloadProgress.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    case 2:
      var value = new common_pb.TaskProgress;
      reader.readMessage(value,common_pb.TaskProgress.deserializeBinaryFromReader);
      msg.setTaskProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformInstallResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformInstallResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformInstallResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformInstallResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.DownloadProgress.serializeBinaryToWriter
    );
  }
  f = message.getTaskProgress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TaskProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional DownloadProgress progress = 1;
 * @return {?proto.arduino.DownloadProgress}
 */
proto.arduino.PlatformInstallResp.prototype.getProgress = function() {
  return /** @type{?proto.arduino.DownloadProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.DownloadProgress, 1));
};


/** @param {?proto.arduino.DownloadProgress|undefined} value */
proto.arduino.PlatformInstallResp.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformInstallResp.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformInstallResp.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskProgress task_progress = 2;
 * @return {?proto.arduino.TaskProgress}
 */
proto.arduino.PlatformInstallResp.prototype.getTaskProgress = function() {
  return /** @type{?proto.arduino.TaskProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.TaskProgress, 2));
};


/** @param {?proto.arduino.TaskProgress|undefined} value */
proto.arduino.PlatformInstallResp.prototype.setTaskProgress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.arduino.PlatformInstallResp.prototype.clearTaskProgress = function() {
  this.setTaskProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformInstallResp.prototype.hasTaskProgress = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformDownloadReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformDownloadReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformDownloadReq.displayName = 'proto.arduino.PlatformDownloadReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformDownloadReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformDownloadReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformDownloadReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformDownloadReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    platformPackage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    architecture: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformDownloadReq}
 */
proto.arduino.PlatformDownloadReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformDownloadReq;
  return proto.arduino.PlatformDownloadReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformDownloadReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformDownloadReq}
 */
proto.arduino.PlatformDownloadReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArchitecture(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformDownloadReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformDownloadReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformDownloadReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformDownloadReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getPlatformPackage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchitecture();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformDownloadReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformDownloadReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformDownloadReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformDownloadReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string platform_package = 2;
 * @return {string}
 */
proto.arduino.PlatformDownloadReq.prototype.getPlatformPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.PlatformDownloadReq.prototype.setPlatformPackage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string architecture = 3;
 * @return {string}
 */
proto.arduino.PlatformDownloadReq.prototype.getArchitecture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.PlatformDownloadReq.prototype.setArchitecture = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.arduino.PlatformDownloadReq.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.arduino.PlatformDownloadReq.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformDownloadResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformDownloadResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformDownloadResp.displayName = 'proto.arduino.PlatformDownloadResp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformDownloadResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformDownloadResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformDownloadResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformDownloadResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    progress: (f = msg.getProgress()) && common_pb.DownloadProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformDownloadResp}
 */
proto.arduino.PlatformDownloadResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformDownloadResp;
  return proto.arduino.PlatformDownloadResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformDownloadResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformDownloadResp}
 */
proto.arduino.PlatformDownloadResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.DownloadProgress;
      reader.readMessage(value,common_pb.DownloadProgress.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformDownloadResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformDownloadResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformDownloadResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformDownloadResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.DownloadProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional DownloadProgress progress = 1;
 * @return {?proto.arduino.DownloadProgress}
 */
proto.arduino.PlatformDownloadResp.prototype.getProgress = function() {
  return /** @type{?proto.arduino.DownloadProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.DownloadProgress, 1));
};


/** @param {?proto.arduino.DownloadProgress|undefined} value */
proto.arduino.PlatformDownloadResp.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformDownloadResp.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformDownloadResp.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformUninstallReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformUninstallReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformUninstallReq.displayName = 'proto.arduino.PlatformUninstallReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformUninstallReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformUninstallReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformUninstallReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUninstallReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    platformPackage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    architecture: jspb.Message.getFieldWithDefault(msg, 3, ""),
    version: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformUninstallReq}
 */
proto.arduino.PlatformUninstallReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformUninstallReq;
  return proto.arduino.PlatformUninstallReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformUninstallReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformUninstallReq}
 */
proto.arduino.PlatformUninstallReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArchitecture(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformUninstallReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformUninstallReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformUninstallReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUninstallReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getPlatformPackage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchitecture();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformUninstallReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformUninstallReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformUninstallReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformUninstallReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string platform_package = 2;
 * @return {string}
 */
proto.arduino.PlatformUninstallReq.prototype.getPlatformPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.PlatformUninstallReq.prototype.setPlatformPackage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string architecture = 3;
 * @return {string}
 */
proto.arduino.PlatformUninstallReq.prototype.getArchitecture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.PlatformUninstallReq.prototype.setArchitecture = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string version = 4;
 * @return {string}
 */
proto.arduino.PlatformUninstallReq.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.arduino.PlatformUninstallReq.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformUninstallResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformUninstallResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformUninstallResp.displayName = 'proto.arduino.PlatformUninstallResp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformUninstallResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformUninstallResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformUninstallResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUninstallResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    taskProgress: (f = msg.getTaskProgress()) && common_pb.TaskProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformUninstallResp}
 */
proto.arduino.PlatformUninstallResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformUninstallResp;
  return proto.arduino.PlatformUninstallResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformUninstallResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformUninstallResp}
 */
proto.arduino.PlatformUninstallResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.TaskProgress;
      reader.readMessage(value,common_pb.TaskProgress.deserializeBinaryFromReader);
      msg.setTaskProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformUninstallResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformUninstallResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformUninstallResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUninstallResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaskProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.TaskProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional TaskProgress task_progress = 1;
 * @return {?proto.arduino.TaskProgress}
 */
proto.arduino.PlatformUninstallResp.prototype.getTaskProgress = function() {
  return /** @type{?proto.arduino.TaskProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.TaskProgress, 1));
};


/** @param {?proto.arduino.TaskProgress|undefined} value */
proto.arduino.PlatformUninstallResp.prototype.setTaskProgress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformUninstallResp.prototype.clearTaskProgress = function() {
  this.setTaskProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformUninstallResp.prototype.hasTaskProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformUpgradeReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformUpgradeReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformUpgradeReq.displayName = 'proto.arduino.PlatformUpgradeReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformUpgradeReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformUpgradeReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformUpgradeReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUpgradeReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    platformPackage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    architecture: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformUpgradeReq}
 */
proto.arduino.PlatformUpgradeReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformUpgradeReq;
  return proto.arduino.PlatformUpgradeReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformUpgradeReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformUpgradeReq}
 */
proto.arduino.PlatformUpgradeReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setArchitecture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformUpgradeReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformUpgradeReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformUpgradeReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUpgradeReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getPlatformPackage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getArchitecture();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformUpgradeReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformUpgradeReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformUpgradeReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformUpgradeReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string platform_package = 2;
 * @return {string}
 */
proto.arduino.PlatformUpgradeReq.prototype.getPlatformPackage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.PlatformUpgradeReq.prototype.setPlatformPackage = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string architecture = 3;
 * @return {string}
 */
proto.arduino.PlatformUpgradeReq.prototype.getArchitecture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.PlatformUpgradeReq.prototype.setArchitecture = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformUpgradeResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformUpgradeResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformUpgradeResp.displayName = 'proto.arduino.PlatformUpgradeResp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformUpgradeResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformUpgradeResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformUpgradeResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUpgradeResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    progress: (f = msg.getProgress()) && common_pb.DownloadProgress.toObject(includeInstance, f),
    taskProgress: (f = msg.getTaskProgress()) && common_pb.TaskProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformUpgradeResp}
 */
proto.arduino.PlatformUpgradeResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformUpgradeResp;
  return proto.arduino.PlatformUpgradeResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformUpgradeResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformUpgradeResp}
 */
proto.arduino.PlatformUpgradeResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.DownloadProgress;
      reader.readMessage(value,common_pb.DownloadProgress.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    case 2:
      var value = new common_pb.TaskProgress;
      reader.readMessage(value,common_pb.TaskProgress.deserializeBinaryFromReader);
      msg.setTaskProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformUpgradeResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformUpgradeResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformUpgradeResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformUpgradeResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProgress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.DownloadProgress.serializeBinaryToWriter
    );
  }
  f = message.getTaskProgress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.TaskProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional DownloadProgress progress = 1;
 * @return {?proto.arduino.DownloadProgress}
 */
proto.arduino.PlatformUpgradeResp.prototype.getProgress = function() {
  return /** @type{?proto.arduino.DownloadProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.DownloadProgress, 1));
};


/** @param {?proto.arduino.DownloadProgress|undefined} value */
proto.arduino.PlatformUpgradeResp.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformUpgradeResp.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformUpgradeResp.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskProgress task_progress = 2;
 * @return {?proto.arduino.TaskProgress}
 */
proto.arduino.PlatformUpgradeResp.prototype.getTaskProgress = function() {
  return /** @type{?proto.arduino.TaskProgress} */ (
    jspb.Message.getWrapperField(this, common_pb.TaskProgress, 2));
};


/** @param {?proto.arduino.TaskProgress|undefined} value */
proto.arduino.PlatformUpgradeResp.prototype.setTaskProgress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.arduino.PlatformUpgradeResp.prototype.clearTaskProgress = function() {
  this.setTaskProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformUpgradeResp.prototype.hasTaskProgress = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformSearchReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformSearchReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformSearchReq.displayName = 'proto.arduino.PlatformSearchReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformSearchReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformSearchReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformSearchReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformSearchReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    searchArgs: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformSearchReq}
 */
proto.arduino.PlatformSearchReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformSearchReq;
  return proto.arduino.PlatformSearchReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformSearchReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformSearchReq}
 */
proto.arduino.PlatformSearchReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchArgs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformSearchReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformSearchReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformSearchReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformSearchReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getSearchArgs();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformSearchReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformSearchReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformSearchReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformSearchReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string search_args = 2;
 * @return {string}
 */
proto.arduino.PlatformSearchReq.prototype.getSearchArgs = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.PlatformSearchReq.prototype.setSearchArgs = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformSearchResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.arduino.PlatformSearchResp.repeatedFields_, null);
};
goog.inherits(proto.arduino.PlatformSearchResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformSearchResp.displayName = 'proto.arduino.PlatformSearchResp';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.arduino.PlatformSearchResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformSearchResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformSearchResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformSearchResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformSearchResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchOutputList: jspb.Message.toObjectList(msg.getSearchOutputList(),
    proto.arduino.SearchOutput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformSearchResp}
 */
proto.arduino.PlatformSearchResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformSearchResp;
  return proto.arduino.PlatformSearchResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformSearchResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformSearchResp}
 */
proto.arduino.PlatformSearchResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.arduino.SearchOutput;
      reader.readMessage(value,proto.arduino.SearchOutput.deserializeBinaryFromReader);
      msg.addSearchOutput(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformSearchResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformSearchResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformSearchResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformSearchResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchOutputList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.arduino.SearchOutput.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SearchOutput search_output = 1;
 * @return {!Array<!proto.arduino.SearchOutput>}
 */
proto.arduino.PlatformSearchResp.prototype.getSearchOutputList = function() {
  return /** @type{!Array<!proto.arduino.SearchOutput>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.arduino.SearchOutput, 1));
};


/** @param {!Array<!proto.arduino.SearchOutput>} value */
proto.arduino.PlatformSearchResp.prototype.setSearchOutputList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.arduino.SearchOutput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.arduino.SearchOutput}
 */
proto.arduino.PlatformSearchResp.prototype.addSearchOutput = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.arduino.SearchOutput, opt_index);
};


proto.arduino.PlatformSearchResp.prototype.clearSearchOutputList = function() {
  this.setSearchOutputList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.SearchOutput = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.SearchOutput, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.SearchOutput.displayName = 'proto.arduino.SearchOutput';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.SearchOutput.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.SearchOutput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.SearchOutput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.SearchOutput.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.SearchOutput}
 */
proto.arduino.SearchOutput.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.SearchOutput;
  return proto.arduino.SearchOutput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.SearchOutput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.SearchOutput}
 */
proto.arduino.SearchOutput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.SearchOutput.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.SearchOutput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.SearchOutput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.SearchOutput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.arduino.SearchOutput.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.arduino.SearchOutput.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Version = 2;
 * @return {string}
 */
proto.arduino.SearchOutput.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.SearchOutput.prototype.setVersion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.arduino.SearchOutput.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.SearchOutput.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformListReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.PlatformListReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformListReq.displayName = 'proto.arduino.PlatformListReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformListReq.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformListReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformListReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformListReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    instance: (f = msg.getInstance()) && common_pb.Instance.toObject(includeInstance, f),
    updatableOnly: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformListReq}
 */
proto.arduino.PlatformListReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformListReq;
  return proto.arduino.PlatformListReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformListReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformListReq}
 */
proto.arduino.PlatformListReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Instance;
      reader.readMessage(value,common_pb.Instance.deserializeBinaryFromReader);
      msg.setInstance(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdatableOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformListReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformListReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformListReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformListReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstance();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Instance.serializeBinaryToWriter
    );
  }
  f = message.getUpdatableOnly();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional Instance instance = 1;
 * @return {?proto.arduino.Instance}
 */
proto.arduino.PlatformListReq.prototype.getInstance = function() {
  return /** @type{?proto.arduino.Instance} */ (
    jspb.Message.getWrapperField(this, common_pb.Instance, 1));
};


/** @param {?proto.arduino.Instance|undefined} value */
proto.arduino.PlatformListReq.prototype.setInstance = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.arduino.PlatformListReq.prototype.clearInstance = function() {
  this.setInstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.arduino.PlatformListReq.prototype.hasInstance = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool updatable_only = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.arduino.PlatformListReq.prototype.getUpdatableOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.arduino.PlatformListReq.prototype.setUpdatableOnly = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.PlatformListResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.arduino.PlatformListResp.repeatedFields_, null);
};
goog.inherits(proto.arduino.PlatformListResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.PlatformListResp.displayName = 'proto.arduino.PlatformListResp';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.arduino.PlatformListResp.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.PlatformListResp.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.PlatformListResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.PlatformListResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformListResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    installedPlatformList: jspb.Message.toObjectList(msg.getInstalledPlatformList(),
    proto.arduino.InstalledPlatform.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.PlatformListResp}
 */
proto.arduino.PlatformListResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.PlatformListResp;
  return proto.arduino.PlatformListResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.PlatformListResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.PlatformListResp}
 */
proto.arduino.PlatformListResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.arduino.InstalledPlatform;
      reader.readMessage(value,proto.arduino.InstalledPlatform.deserializeBinaryFromReader);
      msg.addInstalledPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.PlatformListResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.PlatformListResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.PlatformListResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.PlatformListResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInstalledPlatformList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.arduino.InstalledPlatform.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InstalledPlatform installed_platform = 1;
 * @return {!Array<!proto.arduino.InstalledPlatform>}
 */
proto.arduino.PlatformListResp.prototype.getInstalledPlatformList = function() {
  return /** @type{!Array<!proto.arduino.InstalledPlatform>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.arduino.InstalledPlatform, 1));
};


/** @param {!Array<!proto.arduino.InstalledPlatform>} value */
proto.arduino.PlatformListResp.prototype.setInstalledPlatformList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.arduino.InstalledPlatform=} opt_value
 * @param {number=} opt_index
 * @return {!proto.arduino.InstalledPlatform}
 */
proto.arduino.PlatformListResp.prototype.addInstalledPlatform = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.arduino.InstalledPlatform, opt_index);
};


proto.arduino.PlatformListResp.prototype.clearInstalledPlatformList = function() {
  this.setInstalledPlatformList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.arduino.InstalledPlatform = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.arduino.InstalledPlatform, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.arduino.InstalledPlatform.displayName = 'proto.arduino.InstalledPlatform';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.arduino.InstalledPlatform.prototype.toObject = function(opt_includeInstance) {
  return proto.arduino.InstalledPlatform.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.arduino.InstalledPlatform} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.InstalledPlatform.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    installed: jspb.Message.getFieldWithDefault(msg, 2, ""),
    latest: jspb.Message.getFieldWithDefault(msg, 3, ""),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.arduino.InstalledPlatform}
 */
proto.arduino.InstalledPlatform.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.arduino.InstalledPlatform;
  return proto.arduino.InstalledPlatform.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.arduino.InstalledPlatform} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.arduino.InstalledPlatform}
 */
proto.arduino.InstalledPlatform.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstalled(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatest(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.arduino.InstalledPlatform.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.arduino.InstalledPlatform.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.arduino.InstalledPlatform} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.arduino.InstalledPlatform.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInstalled();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLatest();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string ID = 1;
 * @return {string}
 */
proto.arduino.InstalledPlatform.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.arduino.InstalledPlatform.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Installed = 2;
 * @return {string}
 */
proto.arduino.InstalledPlatform.prototype.getInstalled = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.arduino.InstalledPlatform.prototype.setInstalled = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Latest = 3;
 * @return {string}
 */
proto.arduino.InstalledPlatform.prototype.getLatest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.arduino.InstalledPlatform.prototype.setLatest = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Name = 4;
 * @return {string}
 */
proto.arduino.InstalledPlatform.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.arduino.InstalledPlatform.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.arduino);
