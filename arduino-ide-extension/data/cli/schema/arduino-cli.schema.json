{
  "$id": "http://arduino.cc/arduino-cli.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Arduino CLI Configuration",
  "properties": {
    "board_manager": {
      "type": "object",
      "description": "Board Manager Configuration",
      "properties": {
        "additional_urls": {
          "type": "array",
          "description": "If your board requires 3rd party core packages to work, you can list the URLs to additional package indexes in the Arduino CLI configuration file.",
          "items": {
            "type": "string",
            "description": "URL pointing to the 3rd party core package index JSON.",
            "pattern": "^(.*)$"
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "daemon": {
      "type": "object",
      "description": "CLI Daemon Configuration",
      "properties": {
        "port": {
          "type": [
            "string",
            "number"
          ],
          "description": "The CLI daemon port where the gRPC clients can connect to.",
          "pattern": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "directories": {
      "type": "object",
      "description": "Directories Configuration",
      "properties": {
        "data": {
          "type": "string",
          "description": "Path to the the data folder where core packages will be stored.",
          "pattern": "^(.*)$"
        },
        "downloads": {
          "type": "string",
          "description": "Path to the staging folder.",
          "pattern": "^(.*)$"
        },
        "user": {
          "type": "string",
          "description": "Path to the sketchbooks.",
          "pattern": "^(.*)$"
        }
      },
      "additionalProperties": false
    },
    "logging": {
      "type": "object",
      "description": "Logging Configuration",
      "properties": {
        "file": {
          "type": "string",
          "description": "Path to the file where logs will be written.",
          "pattern": "^(.*)$"
        },
        "format": {
          "type": "string",
          "description": "The output format for the logs, can be 'text' or 'json'",
          "enum": [
            "text",
            "json"
          ]
        },
        "level": {
          "type": "string",
          "description": "Messages with this level and above will be logged.",
          "enum": [
            "trace",
            "debug",
            "info",
            "warning",
            "error",
            "fatal",
            "panic"
          ]
        }
      },
      "additionalProperties": false
    },
    "sketch": {
      "type": "object",
      "description": "Sketch Configuration",
      "properties": {
        "always_export_binaries": {
          "type": "boolean",
          "description": "Controls whether the compiled binaries will be exported into the sketch's 'build' folder or not. 'false' if the binaries are not exported."
        }
      },
      "additionalProperties": false
    },
    "metrics": {
      "type": "object",
      "description": "Metrics Configuration",
      "properties": {
        "addr": {
          "type": "string",
          "description": "Address to the metrics endpoint. Must be a full address with host, address, and port. For instance, ':9090' represents 'localhost:9090'",
          "pattern": "^(.*)$"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the metrics is enabled or not."
        },
        "additionalProperties": false
      },
      "additionalProperties": false
    },
    "library": {
      "type": "object",
      "description": "Library Configuration",
      "properties": {
        "enable_unsafe_install": {
          "type": "boolean",
          "description": "Set to 'true' to enable the use of the '--git-url' and '--zip-file' flags with 'arduino-cli lib install' These are considered 'unsafe' installation methods because they allow installing files that have not passed through the Library Manager submission process."
        },
        "additionalProperties": false
      },
      "additionalProperties": false
    }
  }
}
