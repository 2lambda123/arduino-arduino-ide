name: Arduino Pro IDE

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - master
  schedule:
    - cron: '0 3 * * *' # run every day at 3AM (https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)

jobs:

  build:
    strategy:
      matrix:
        config:
          - os: windows-2016
          - os: ubuntu-latest
          - os: turin-macmini # self-hosted macOS
    runs-on: ${{ matrix.config.os }}
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: '2.7'

      - name: Update Keychain [macOS]
        if: runner.OS == 'macOS'
        run: |
            echo "${{ secrets.KEYCHAIN }}" | base64 --decode > ~/Library/Keychains/apple-developer.keychain-db
            security list-keychains -s ~/Library/Keychains/apple-developer.keychain-db
            security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" ~/Library/Keychains/apple-developer.keychain-db

      - name: Package
        shell: bash
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          IS_NIGHTLY: ${{ github.event_name == 'schedule' }}
          IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
            yarn --cwd ./electron/packager/
            yarn --cwd ./electron/packager/ package

      - name: Upload [GitHub Actions]
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: electron/build/dist/build-artifacts/

  publish:
    needs: build
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Download [GitHub Actions]
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Publish Nightly [S3]
        uses: kittaakos/upload-s3-action@v0.0.1
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.DOWNLOADS_BUCKET }}
          source_dir: build-artifacts/
          destination_dir: arduino-pro-ide/nightly/

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download [GitHub Actions]
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts

      - name: Create Release [GitHub]
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}

      - name: Publish Release [GitHub]
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build-artifacts/*
          tag: ${{ github.ref }}
          file_glob: true

      - name: Publish Release [S3]
        uses: kittaakos/upload-s3-action@v0.0.1
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_bucket: ${{ secrets.DOWNLOADS_BUCKET }}
          source_dir: build-artifacts/
          destination_dir: arduino-pro-ide/
